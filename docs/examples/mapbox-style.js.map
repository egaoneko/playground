{"version":3,"sources":["webpack:///./mapbox-style.js"],"names":["mapboxgl","accessToken","const","search","url","match","reduce","a","v","slice","indexOf","getURLParameters","location","style","decodeURIComponent","isMabox","includes","data","extrusion","gui","dat","GUI","f1","addFolder","f2","remember","add","onFinishChange","params","ret","let","d","push","encodeURIComponent","join","encodeQueryData","Object","assign","pathname","history","pushState","map","setStyle","show","layers","getStyle","labelLayerId","i","length","type","layout","id","addLayer","source","source-layer","filter","minzoom","paint","fill-extrusion-color","fill-extrusion-height","fill-extrusion-base","fill-extrusion-opacity","removeLayer","showBuildingWithMapbox","setLayoutProperty","showBuilding","open","Map","container","center","zoom","localIdeographFontFamily","on","window","DEBUG"],"mappings":"2EAEAA,SAASC,YADP,6FAGFC,IAQIC,EARkB,SAAGC,GAAI,OAC1BA,EAAIC,MAAM,6BAA+BC,gBACvCC,EAAGC,GAAG,OACJD,EAAEC,EAAEC,MAAM,EAAGD,EAAEE,QAAQ,OAASF,EAAEC,MAAMD,EAAEE,QAAQ,KAAO,GAAKH,OAKxDI,CAAiBC,SAAST,QACnCU,EAAQV,EAAOU,MACfC,mBAAmBX,EAAOU,OAC1B,oCACAE,EAAUF,EAAMG,SAAS,UAUvBC,GACJJ,MAAOA,EACPK,WAAW,GAEPC,EAAM,IAAIC,IAAIC,IACdC,EAAKH,EAAII,UAAU,SACnBC,EAAKL,EAAII,UAAU,SAEzBJ,EAAIM,SAASR,GAEAK,EAAGI,IAAIT,EAAM,SACfU,eAAe,SAASd,GAC5BA,IACHA,EAAQ,qCAGVX,IAAM0B,EAxBa,SAAGX,GACtBf,IAAM2B,KACN,IAAKC,IAAIC,KAAKd,EACZY,EAAIG,KAAKC,mBAAmBF,GAAK,IAAME,mBAAmBhB,EAAKc,KACjE,OAAOF,EAAIK,KAAK,KAoBDC,CACbC,OAAOC,UAAWlC,GAAUU,MAAOA,KAE/BT,EAAMQ,SAAS0B,SAAW,IAAMV,EAEtCW,QAAQC,UAAU,GAAI,GAAIpC,GAC1BqC,EAAIC,SAAS7B,KAGFW,EAAGE,IAAIT,EAAM,aACfU,eAAe,SAASgB,GACjCzC,IAAM0C,EAASH,EAAII,WAAWD,OAE1B7B,EAuBN,SAAgC6B,EAAQD,GAEtC,IADAb,IAAIgB,EACKC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IACjC,GAAuB,WAAnBH,EAAOG,GAAGE,MAAqBL,EAAOG,GAAGG,OAAO,cAAe,CACjEJ,EAAeF,EAAOG,GAAGI,GACzB,MAIAR,EACFF,EAAIW,UAEAD,GAAI,eACJE,OAAQ,YACRC,eAAgB,WAChBC,QAAS,KAAM,UAAW,QAC1BN,KAAM,iBACNO,QAAS,GACTC,OACEC,uBAAwB,OAIxBC,yBACE,eACC,WACA,QACD,GACA,EACA,OACC,MAAO,WAEVC,uBACE,eACC,WACA,QACD,GACA,EACA,OACC,MAAO,eAEVC,yBAA0B,KAG9Bf,GAGFL,EAAIqB,YAAY,gBArEhBC,CAAuBnB,EAAQD,GAyEnC,SAAsBC,EAAQD,GAC5B,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IACV,mBAAnBH,EAAOG,GAAGE,MAGdR,EAAIuB,kBAAkBpB,EAAOG,GAAGI,GAAI,aAAcR,EAAO,UAAY,QA5ErEsB,CAAarB,EAAQD,KAIzBrB,EAAG4C,OACH1C,EAAG0C,OAEHhE,IAAMuC,EAAM,IAAIzC,SAASmE,KACvBC,UAAW,MACXvD,MAAOA,EACPwD,QAAS,YAAa,YACtBC,KAAM,GACNC,0BAA0B,IAG5B9B,EAAI+B,GAAG,OAAQ,cAiEfC,OAAOC,WACLjC","file":"mapbox-style.js","sourcesContent":["const key =\n  'pk.eyJ1IjoiZWdhb25la28iLCJhIjoiY2pkYnJtdWg4N3Y0ejMzbzV2NHkzanJodCJ9.509Ns7trg6hi_lZKGyWzew';\nmapboxgl.accessToken = key;\n\nconst getURLParameters = url =>\n  (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n    (a, v) => (\n      (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a\n    ),\n    {}\n  );\n\nlet search = getURLParameters(location.search);\nlet style = search.style\n  ? decodeURIComponent(search.style)\n  : 'mapbox://styles/mapbox/streets-v9';\nlet isMabox = style.includes('mapbox');\n\nconst encodeQueryData = data => {\n  const ret = [];\n  for (let d in data)\n    ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));\n  return ret.join('&');\n};\n\nlet controller;\nconst data = {\n  style: style,\n  extrusion: false\n};\nconst gui = new dat.GUI();\nconst f1 = gui.addFolder('Style');\nconst f2 = gui.addFolder('Layer');\n\ngui.remember(data);\n\ncontroller = f1.add(data, 'style');\ncontroller.onFinishChange(function(style) {\n  if (!style) {\n    style = 'mapbox://styles/mapbox/streets-v9';\n  }\n\n  const params = encodeQueryData(\n    Object.assign({}, search, { style: style })\n  );\n  const url = location.pathname + '?' + params;\n\n  history.pushState('', '', url);\n  map.setStyle(style);\n});\n\ncontroller = f2.add(data, 'extrusion');\ncontroller.onFinishChange(function(show) {\n  const layers = map.getStyle().layers;\n\n  if (isMabox) {\n    showBuildingWithMapbox(layers, show);\n  } else {\n    showBuilding(layers, show);\n  }\n});\n\nf1.open();\nf2.open();\n\nconst map = new mapboxgl.Map({\n  container: 'map',\n  style: style,\n  center: [127.0339581, 37.4845477],\n  zoom: 15,\n  localIdeographFontFamily: false\n});\n\nmap.on('load', function() {\n  // Insert the layer beneath any symbol layer.\n  \n});\n\nfunction showBuildingWithMapbox(layers, show) {\n  let labelLayerId;\n  for (var i = 0; i < layers.length; i++) {\n    if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n      labelLayerId = layers[i].id;\n      break;\n    }\n  }\n\n  if (show) {\n    map.addLayer(\n      {\n        id: '3d-buildings',\n        source: 'composite',\n        'source-layer': 'building',\n        filter: ['==', 'extrude', 'true'],\n        type: 'fill-extrusion',\n        minzoom: 15,\n        paint: {\n          'fill-extrusion-color': '#aaa',\n  \n          // use an 'interpolate' expression to add a smooth transition effect to the\n          // buildings as the user zooms in\n          'fill-extrusion-height': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            15,\n            0,\n            15.05,\n            ['get', 'height']\n          ],\n          'fill-extrusion-base': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            15,\n            0,\n            15.05,\n            ['get', 'min_height']\n          ],\n          'fill-extrusion-opacity': 0.6\n        }\n      },\n      labelLayerId\n    );\n  } else {\n    map.removeLayer('3d-buildings');\n  }\n}\n\nfunction showBuilding(layers, show) {\n  for (var i = 0; i < layers.length; i++) {\n    if (layers[i].type !== 'fill-extrusion') {\n      continue;\n    }\n    map.setLayoutProperty(layers[i].id, 'visibility', show ? 'visible' : 'none');\n  }\n}\n\nwindow.DEBUG = {\n  map\n};\n"],"sourceRoot":""}