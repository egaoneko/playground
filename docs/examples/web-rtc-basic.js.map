{"version":3,"sources":["webpack:///./web-rtc-basic.js"],"names":["const","container","document","querySelector","removeAllChildren","firstChild","removeChild","lastChild","addEventListener","video","createElement","muted","autoplay","appendChild","console","log","this","LocalConnection","RemoteConnection","PC_CONFIG","iceServers","urls","credential","username","config","pc","RTCPeerConnection","navigator","mediaDevices","getUserMedia","audio","width","height","facingMode","then","stream","srcObject","videoTracks","getVideoTracks","length","getTracks","forEach","track","addTrack","init","catch","e","prototype","removeItem","candidate","setItem","sdpMid","sdpMLineIndex","foundation","component","priority","protocol","port","type","tcpType","relatedAddress","relatedPort","usernameFragment","onIceStateChange","getItem","addIceCandidate","onItemChange","createOffer","offerToReceiveVideo","offer","sdp","setLocalDescription","remoteDescription","setRemoteDescription","close","stop","RTCIceCandidate","event","key","JSON","parse","localStorage","value","stringify","gotRemoteStream","localDescription","setDescription","on","createAnswer","answer","MediaStream","getReceivers","map","receiver","streams","listeners","callback","window","newValue"],"mappings":"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","file":"web-rtc-basic.js","sourcesContent":["const container = document.querySelector(\"#container\");\n\ndocument.querySelector(\"#local\").addEventListener(\"click\", startLocal);\ndocument.querySelector(\"#remote\").addEventListener(\"click\", startRemote);\n\nfunction startLocal() {\n  removeAllChildren();\n  const video = document.createElement(\"video\");\n  video.muted = true;\n  video.autoplay = true;\n  container.appendChild(video);\n\n  video.addEventListener(\"loadedmetadata\", function() {\n    console.log(\n      `Local video videoWidth: ${this.videoWidth}px, videoHeight: ${this.videoHeight}px`\n    );\n  });\n\n  new LocalConnection(video);\n}\n\nfunction startRemote() {\n  removeAllChildren();\n  const video = document.createElement(\"video\");\n  container.appendChild(video);\n\n  video.muted = true;\n  video.autoplay = true;\n  container.appendChild(video);\n\n  video.addEventListener(\"loadedmetadata\", function() {\n    console.log(\n      `Remote video videoWidth: ${this.videoWidth}px, videoHeight: ${this.videoHeight}px`\n    );\n  });\n\n  new RemoteConnection(video);\n}\n\nfunction removeAllChildren() {\n  while (container.firstChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\nconst PC_CONFIG = {\n  iceServers: [\n    {\n      urls: \"stun:stun.l.google.com:19302\"\n    },\n    {\n      urls: \"turn:numb.viagenie.ca\",\n      credential: \"muazkh\",\n      username: \"webrtc@live.com\"\n    }\n  ]\n};\n\nclass LocalConnection {\n  constructor(video, config = PC_CONFIG) {\n    const pc = new RTCPeerConnection(config);\n    this.pc = pc;\n    this.video = video;\n\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: false,\n        // video: { width: 1280, height: 720, facingMode: 'user' }, // 전면\n        video: { width: 1280, height: 720, facingMode: \"environment\" } // 후면\n      })\n      .then(stream => {\n        this.stream = stream;\n        video.srcObject = stream;\n        const videoTracks = stream.getVideoTracks();\n        if (videoTracks.length > 0) {\n          console.log(`Using video device: ${videoTracks[0].label}`);\n        }\n        stream.getTracks().forEach(track => pc.addTrack(track, stream));\n\n        this.init();\n      })\n      .catch(e => console.log(e));\n  }\n\n  init() {\n    const pc = this.pc;\n\n    removeItem(\"web-rtc-local-candidate\");\n    removeItem(\"web-rtc-local-description\");\n    removeItem(\"web-rtc-remote-candidate\");\n    removeItem(\"web-rtc-remote-description\");\n\n    pc.addEventListener(\"icecandidate\", e => {\n      const candidate = e.candidate;\n      console.log(\"local candidate\", candidate);\n\n      if (!candidate) {\n        return;\n      }\n\n      setItem(\"web-rtc-local-candidate\", {\n        candidate: candidate.candidate,\n        sdpMid: candidate.sdpMid,\n        sdpMLineIndex: candidate.sdpMLineIndex,\n        foundation: candidate.foundation,\n        component: candidate.component,\n        priority: candidate.priority,\n        protocol: candidate.protocol,\n        port: candidate.port,\n        type: candidate.type,\n        tcpType: candidate.tcpType,\n        relatedAddress: candidate.relatedAddress,\n        relatedPort: candidate.relatedPort,\n        usernameFragment: candidate.usernameFragment\n      });\n    });\n\n    pc.addEventListener(\"iceconnectionstatechange\", e =>\n      onIceStateChange(pc, e)\n    );\n\n    const candidate = getItem(\"web-rtc-remote-candidate\");\n    if (candidate) {\n      this.addIceCandidate(this.pc, candidate);\n    } else {\n      onItemChange(\"web-rtc-remote-candidate\", candidate =>\n        addIceCandidate(this.pc, candidate)\n      );\n    }\n\n    pc.createOffer({\n      // offerToReceiveAudio: true,\n      offerToReceiveVideo: true\n    })\n      .then(offer => {\n        setItem(\"web-rtc-local-description\", {\n          type: offer.type,\n          sdp: offer.sdp\n        });\n        pc.setLocalDescription(offer);\n\n        onItemChange(\"web-rtc-remote-description\", remoteDescription => {\n          console.log(\"remote description\", remoteDescription);\n\n          if (!remoteDescription) {\n            return;\n          }\n\n          pc.setRemoteDescription(remoteDescription);\n        });\n\n        console.log(\"Added local stream\");\n      })\n      .catch(e => {\n        console.log(e);\n        this.close();\n      });\n  }\n\n  close() {\n    this.video.srcObject = null;\n    this.stream.getTracks().forEach(track => track.stop());\n    removeItem(\"web-rtc-local-candidate\");\n    removeItem(\"web-rtc-local-description\");\n    return this.pc.close();\n  }\n}\n\nclass RemoteConnection {\n  constructor(video, config = PC_CONFIG) {\n    this.pc = new RTCPeerConnection(config);\n    this.video = video;\n    this.init();\n  }\n\n  init() {\n    const pc = this.pc;\n\n    removeItem(\"web-rtc-remote-candidate\");\n    removeItem(\"web-rtc-remote-description\");\n    pc.addEventListener(\"icecandidate\", e => {\n      const candidate = e.candidate;\n      console.log(\"remote candidate\", candidate);\n\n      if (!candidate) {\n        return;\n      }\n\n      setItem(\"web-rtc-remote-candidate\", {\n        candidate: candidate.candidate,\n        sdpMid: candidate.sdpMid,\n        sdpMLineIndex: candidate.sdpMLineIndex,\n        foundation: candidate.foundation,\n        component: candidate.component,\n        priority: candidate.priority,\n        protocol: candidate.protocol,\n        port: candidate.port,\n        type: candidate.type,\n        tcpType: candidate.tcpType,\n        relatedAddress: candidate.relatedAddress,\n        relatedPort: candidate.relatedPort,\n        usernameFragment: candidate.usernameFragment\n      });\n    });\n    pc.addEventListener(\"iceconnectionstatechange\", e =>\n      onIceStateChange(pc, e)\n    );\n    pc.addEventListener(\"track\", e => this.gotRemoteStream(e));\n\n    const candidate = getItem(\"web-rtc-local-candidate\");\n    if (candidate) {\n      addIceCandidate(this.pc, candidate);\n    } else {\n      onItemChange(\"web-rtc-local-candidate\", candidate =>\n        addIceCandidate(this.pc, candidate)\n      );\n    }\n\n    const localDescription = getItem(\"web-rtc-local-description\");\n\n    if (localDescription) {\n      this.setDescription(localDescription);\n    } else {\n      onItemChange.on(\"web-rtc-local-description\", localDescription =>\n        this.setDescription(localDescription)\n      );\n    }\n  }\n\n  setDescription(localDescription) {\n    const pc = this.pc;\n    const video = this.video;\n\n    console.log(\"local description\", localDescription);\n\n    if (!localDescription) {\n      return;\n    }\n\n    pc.setRemoteDescription(localDescription)\n      .then(() => pc.createAnswer())\n      .then(answer => {\n        pc.setLocalDescription(answer);\n        setItem(\"web-rtc-remote-description\", {\n          type: answer.type,\n          sdp: answer.sdp\n        });\n        video.srcObject = new MediaStream(\n          pc.getReceivers().map(receiver => receiver.track)\n        );\n        console.log(\"Added remote stream\");\n      })\n      .catch(e => {\n        console.log(e);\n        this.close();\n      });\n  }\n\n  gotRemoteStream(e) {\n    if (this.video.srcObject !== e.streams[0]) {\n      this.video.srcObject = e.streams[0];\n      console.log(\"received remote stream\");\n    }\n  }\n\n  close() {\n    this.video.srcObject = null;\n    removeItem(\"web-rtc-remote-candidate\");\n    removeItem(\"web-rtc-remote-description\");\n    return this.pc.close();\n  }\n}\n\nfunction addIceCandidate(pc, candidate) {\n  console.log(\"candidate\", candidate);\n\n  pc.addIceCandidate(new RTCIceCandidate(candidate))\n    .then(() => {\n      console.log(\n        `ICE candidate:\\n${candidate ? candidate.candidate : \"(null)\"}`\n      );\n    })\n    .catch(e => console.log(e));\n}\n\nfunction onIceStateChange(pc, event) {\n  if (pc) {\n    console.log(`ICE state: ${pc.iceConnectionState}`);\n    console.log(\"ICE state change event: \", event);\n  }\n}\n\nfunction getItem(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nfunction setItem(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction removeItem(key) {\n  localStorage.removeItem(key);\n}\n\nconst listeners = {};\nwindow.addEventListener(\"storage\", e => {\n  console.log(e);\n  const callback = listeners[e.key];\n  if (!callback) {\n    return;\n  }\n  callback(JSON.parse(e.newValue));\n});\n\nfunction onItemChange(key, callback) {\n  listeners[key] = callback;\n}\n"],"sourceRoot":""}