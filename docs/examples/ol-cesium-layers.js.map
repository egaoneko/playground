{"version":3,"sources":["webpack:///./ol-cesium-layers.js"],"names":["const","rasterTile","ol","layer","Tile","source","OSM","esriRasterTile","XYZ","attributions","url","vectorTile","VectorTile","format","MVT","image","style","Circle","radius","fill","stroke","Stroke","color","width","styles","Point","Style","LineString","MultiLineString","MultiPoint","MultiPolygon","Fill","Polygon","lineDash","GeometryCollection","vectorSource","Vector","features","GeoJSON","readFeatures","type","crs","properties","name","geometry","coordinates","geometries","addFeature","Feature","geom","layers","feature","getGeometry","getType","selected","map","Map","target","view","View","center","zoom","ol3d","olcs","OLCesium","show","setEnabled","document","querySelector","addEventListener","radios","querySelectorAll","Array","prototype","forEach","call","radio","e","removeLayer","parseInt","value","addLayer"],"mappings":"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","file":"ol-cesium-layers.js","sourcesContent":["const rasterTile = new ol.layer.Tile({\n  source: new ol.source.OSM()\n});\n\nconst esriRasterTile = new ol.layer.Tile({\n  source: new ol.source.XYZ({\n    attributions: 'Tiles Â© <a href=\"https://services.arcgisonline.com/ArcGIS/' +\n      'rest/services/World_Topo_Map/MapServer\">ArcGIS</a>',\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n      'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'\n  })\n});\n\nconst vectorTile = new ol.layer.VectorTile({\n  source: new ol.source.VectorTile({\n    format: new ol.format.MVT(),\n    url: 'https://basemaps.arcgis.com/v1/arcgis/rest/services/World_Basemap/VectorTileServer/tile/{z}/{y}/{x}.pbf'\n  })\n});\n\nconst image = new ol.style.Circle({\n  radius: 5,\n  fill: null,\n  stroke: new ol.style.Stroke({color: 'red', width: 1})\n});\n\nconst styles = {\n  'Point': new ol.style.Style({\n    image: image\n  }),\n  'LineString': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiLineString': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiPoint': new ol.style.Style({\n    image: image\n  }),\n  'MultiPolygon': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new ol.style.Fill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  }),\n  'Polygon': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3\n    }),\n    fill: new ol.style.Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  }),\n  'GeometryCollection': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'magenta',\n      width: 2\n    }),\n    fill: new ol.style.Fill({\n      color: 'magenta'\n    }),\n    image: new ol.style.Circle({\n      radius: 10,\n      fill: null,\n      stroke: new ol.style.Stroke({\n        color: 'magenta'\n      })\n    })\n  }),\n  'Circle': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'red',\n      width: 2\n    }),\n    fill: new ol.style.Fill({\n      color: 'rgba(255,0,0,0.2)'\n    })\n  })\n};\n\nconst styleFunction = (feature) => {\n  return styles[feature.getGeometry().getType()];\n};\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Point',\n      'coordinates': [0, 0]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, 2e6], [8e6, -2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, -1e6], [-4e6, 1e6], [-3e6, -1e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiLineString',\n      'coordinates': [\n        [[-1e6, -7.5e5], [-1e6, 7.5e5]],\n        [[1e6, -7.5e5], [1e6, 7.5e5]],\n        [[-7.5e5, -1e6], [7.5e5, -1e6]],\n        [[-7.5e5, 1e6], [7.5e5, 1e6]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPolygon',\n      'coordinates': [\n        [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6], [-3e6, 6e6]]],\n        [[[-2e6, 6e6], [-2e6, 8e6], [0, 8e6], [0, 6e6]]],\n        [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6], [3e6, 6e6]]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'GeometryCollection',\n      'geometries': [{\n        'type': 'LineString',\n        'coordinates': [[-5e6, -5e6], [0, -5e6]]\n      }, {\n        'type': 'Point',\n        'coordinates': [4e6, -5e6]\n      }, {\n        'type': 'Polygon',\n        'coordinates': [[[1e6, -6e6], [2e6, -4e6], [3e6, -6e6]]]\n      }]\n    }\n  }]\n};\n\nconst vectorSource = new ol.source.Vector({\n  features: (new ol.format.GeoJSON()).readFeatures(geojsonObject)\n});\n\nvectorSource.addFeature(new ol.Feature(new ol.geom.Circle([5e6, 7e6], 1e6)));\n\nconst vector = new ol.layer.Vector({\n  source: vectorSource,\n  style: styleFunction\n});\n\nconst layers = [\n  rasterTile,\n  esriRasterTile,\n  vectorTile,\n  vector,\n];\nlet selected = layers[0];\n\nconst map = new ol.Map({\n  layers: [\n    selected,\n  ],\n  target: 'map',\n  view: new ol.View({\n    center: [0, 0],\n    zoom: 2\n  }),\n});\n\nconst ol3d = new olcs.OLCesium({map: map}); // map is the ol.Map instance\n\nlet show = true;\nol3d.setEnabled(show);\n\nconst btn = document.querySelector('#toggle');\nbtn.addEventListener('click', () => {\n  show = !show;\n  ol3d.setEnabled(show);\n});\n\nconst radios = document.querySelectorAll('input[type=radio][name=\"layer\"]');\nArray.prototype.forEach.call(radios, function(radio) {\n  radio.addEventListener('change', (e) => {\n    if (selected) {\n      map.removeLayer(selected);\n    }\n\n    selected = layers[parseInt(e.target.value, 10)];\n\n    if (!selected) {\n      return;\n    }\n    map.addLayer(selected);\n  });\n});\n"],"sourceRoot":""}