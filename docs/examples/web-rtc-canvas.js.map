{"version":3,"sources":["webpack:///./web-rtc-canvas.js","webpack:///./utils/box.js"],"names":["__webpack_require__","r","__webpack_exports__","_utils_box__WEBPACK_IMPORTED_MODULE_0__","container","document","querySelector","removeAllChildren","firstChild","removeChild","lastChild","addEventListener","const","width","clientWidth","height","clientHeight","canvas","createElement","ratio","window","devicePixelRatio","images","appendChild","LocalConnection","video","muted","autoplay","console","log","this","RemoteConnection","PC_CONFIG","iceServers","urls","credential","username","config","pc","RTCPeerConnection","stream","captureStream","srcObject","videoTracks","getVideoTracks","length","getTracks","forEach","track","addTrack","init","prototype","removeItem","e","candidate","setItem","sdpMid","sdpMLineIndex","foundation","component","priority","protocol","port","type","tcpType","relatedAddress","relatedPort","usernameFragment","onIceStateChange","getItem","addIceCandidate","onItemChange","createOffer","offerToReceiveVideo","then","offer","sdp","setLocalDescription","remoteDescription","setRemoteDescription","catch","close","stop","RTCIceCandidate","event","key","JSON","parse","localStorage","value","stringify","gotRemoteStream","localDescription","setDescription","on","createAnswer","answer","MediaStream","getReceivers","map","receiver","streams","listeners","callback","newValue","Box","option","Object","assign","animate","camera","THREE","PerspectiveCamera","position","x","y","z","lookAt","Vector3","scene","Scene","ambiLight","AmbientLight","add","light","DirectionalLight","set","cube","createMesh","BoxGeometry","geometry","faceVertexUvs","renderer","WebGLRenderer","alpha","setClearColor","setPixelRatio","shadowMapEnabled","geom","mat","MeshFaceMaterial","image","createMaterial","Mesh","let","texture","TextureLoader","load","CanvasTexture","MeshPhongMaterial","requestAnimationFrame","bind","render","time","Date","now","rotation","resize","aspect","updateProjectionMatrix","setSize"],"mappings":"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","file":"web-rtc-canvas.js","sourcesContent":["import Box from './utils/box';\n\nconst container = document.querySelector(\"#container\");\n\ndocument.querySelector(\"#local\").addEventListener(\"click\", startLocal);\ndocument.querySelector(\"#remote\").addEventListener(\"click\", startRemote);\n\nfunction startLocal() {\n  removeAllChildren();\n\n  const width = container.clientWidth;\n  const height = container.clientHeight;\n  const canvas = document.createElement(\"canvas\");\n\n  new Box(canvas, {\n    width,\n    height,\n    ratio: window.devicePixelRatio,\n    images: [\n      'data/img/iu/iu01.jpg',\n      'data/img/iu/iu02.jpg',\n      'data/img/iu/iu03.jpg',\n      'data/img/iu/iu04.jpg',\n      'data/img/iu/iu05.jpg',\n      'data/img/iu/iu06.jpg',\n    ]\n  });\n  \n  container.appendChild(canvas);\n\n  new LocalConnection(canvas);\n}\n\nfunction startRemote() {\n  removeAllChildren();\n  const video = document.createElement(\"video\");\n  container.appendChild(video);\n\n  video.muted = true;\n  video.autoplay = true;\n  container.appendChild(video);\n\n  video.addEventListener(\"loadedmetadata\", function() {\n    console.log(\n      `Remote video videoWidth: ${this.videoWidth}px, videoHeight: ${this.videoHeight}px`\n    );\n  });\n\n  new RemoteConnection(video);\n}\n\nfunction removeAllChildren() {\n  while (container.firstChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\nconst PC_CONFIG = {\n  iceServers: [\n    {\n      urls: \"stun:stun.l.google.com:19302\"\n    },\n    {\n      urls: \"turn:numb.viagenie.ca\",\n      credential: \"muazkh\",\n      username: \"webrtc@live.com\"\n    }\n  ]\n};\n\nclass LocalConnection {\n  constructor(canvas, config = PC_CONFIG) {\n    const pc = new RTCPeerConnection(config);\n    this.pc = pc;\n    this.canvas = canvas;\n\n    const stream = canvas.captureStream();\n    this.stream = stream;\n    canvas.srcObject = stream;\n    const videoTracks = stream.getVideoTracks();\n    if (videoTracks.length > 0) {\n      console.log(`Using video device: ${videoTracks[0].label}`);\n    }\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n\n    this.init();\n  }\n\n  init() {\n    const pc = this.pc;\n\n    removeItem(\"web-rtc-local-candidate\");\n    removeItem(\"web-rtc-local-description\");\n    removeItem(\"web-rtc-remote-candidate\");\n    removeItem(\"web-rtc-remote-description\");\n\n    pc.addEventListener(\"icecandidate\", e => {\n      const candidate = e.candidate;\n      console.log(\"local candidate\", candidate);\n\n      if (!candidate) {\n        return;\n      }\n\n      setItem(\"web-rtc-local-candidate\", {\n        candidate: candidate.candidate,\n        sdpMid: candidate.sdpMid,\n        sdpMLineIndex: candidate.sdpMLineIndex,\n        foundation: candidate.foundation,\n        component: candidate.component,\n        priority: candidate.priority,\n        protocol: candidate.protocol,\n        port: candidate.port,\n        type: candidate.type,\n        tcpType: candidate.tcpType,\n        relatedAddress: candidate.relatedAddress,\n        relatedPort: candidate.relatedPort,\n        usernameFragment: candidate.usernameFragment\n      });\n    });\n\n    pc.addEventListener(\"iceconnectionstatechange\", e =>\n      onIceStateChange(pc, e)\n    );\n\n    const candidate = getItem(\"web-rtc-remote-candidate\");\n    if (candidate) {\n      this.addIceCandidate(this.pc, candidate);\n    } else {\n      onItemChange(\"web-rtc-remote-candidate\", candidate =>\n        addIceCandidate(this.pc, candidate)\n      );\n    }\n\n    pc.createOffer({\n      // offerToReceiveAudio: true,\n      offerToReceiveVideo: true\n    })\n      .then(offer => {\n        setItem(\"web-rtc-local-description\", {\n          type: offer.type,\n          sdp: offer.sdp\n        });\n        pc.setLocalDescription(offer);\n\n        onItemChange(\"web-rtc-remote-description\", remoteDescription => {\n          console.log(\"remote description\", remoteDescription);\n\n          if (!remoteDescription) {\n            return;\n          }\n\n          pc.setRemoteDescription(remoteDescription);\n        });\n\n        console.log(\"Added local stream\");\n      })\n      .catch(e => {\n        console.log(e);\n        this.close();\n      });\n  }\n\n  close() {\n    this.stream.getTracks().forEach(track => track.stop());\n    removeItem(\"web-rtc-local-candidate\");\n    removeItem(\"web-rtc-local-description\");\n    return this.pc.close();\n  }\n}\n\nclass RemoteConnection {\n  constructor(video, config = PC_CONFIG) {\n    this.pc = new RTCPeerConnection(config);\n    this.video = video;\n    this.init();\n  }\n\n  init() {\n    const pc = this.pc;\n\n    removeItem(\"web-rtc-remote-candidate\");\n    removeItem(\"web-rtc-remote-description\");\n    pc.addEventListener(\"icecandidate\", e => {\n      const candidate = e.candidate;\n      console.log(\"remote candidate\", candidate);\n\n      if (!candidate) {\n        return;\n      }\n\n      setItem(\"web-rtc-remote-candidate\", {\n        candidate: candidate.candidate,\n        sdpMid: candidate.sdpMid,\n        sdpMLineIndex: candidate.sdpMLineIndex,\n        foundation: candidate.foundation,\n        component: candidate.component,\n        priority: candidate.priority,\n        protocol: candidate.protocol,\n        port: candidate.port,\n        type: candidate.type,\n        tcpType: candidate.tcpType,\n        relatedAddress: candidate.relatedAddress,\n        relatedPort: candidate.relatedPort,\n        usernameFragment: candidate.usernameFragment\n      });\n    });\n    pc.addEventListener(\"iceconnectionstatechange\", e =>\n      onIceStateChange(pc, e)\n    );\n    pc.addEventListener(\"track\", e => this.gotRemoteStream(e));\n\n    const candidate = getItem(\"web-rtc-local-candidate\");\n    if (candidate) {\n      addIceCandidate(this.pc, candidate);\n    } else {\n      onItemChange(\"web-rtc-local-candidate\", candidate =>\n        addIceCandidate(this.pc, candidate)\n      );\n    }\n\n    const localDescription = getItem(\"web-rtc-local-description\");\n\n    if (localDescription) {\n      this.setDescription(localDescription);\n    } else {\n      onItemChange.on(\"web-rtc-local-description\", localDescription =>\n        this.setDescription(localDescription)\n      );\n    }\n  }\n\n  setDescription(localDescription) {\n    const pc = this.pc;\n    const video = this.video;\n\n    console.log(\"local description\", localDescription);\n\n    if (!localDescription) {\n      return;\n    }\n\n    pc.setRemoteDescription(localDescription)\n      .then(() => pc.createAnswer())\n      .then(answer => {\n        pc.setLocalDescription(answer);\n        setItem(\"web-rtc-remote-description\", {\n          type: answer.type,\n          sdp: answer.sdp\n        });\n        video.srcObject = new MediaStream(\n          pc.getReceivers().map(receiver => receiver.track)\n        );\n        console.log(\"Added remote stream\");\n      })\n      .catch(e => {\n        console.log(e);\n        this.close();\n      });\n  }\n\n  gotRemoteStream(e) {\n    if (this.video.srcObject !== e.streams[0]) {\n      this.video.srcObject = e.streams[0];\n      console.log(\"received remote stream\");\n    }\n  }\n\n  close() {\n    this.video.srcObject = null;\n    removeItem(\"web-rtc-remote-candidate\");\n    removeItem(\"web-rtc-remote-description\");\n    return this.pc.close();\n  }\n}\n\nfunction addIceCandidate(pc, candidate) {\n  console.log(\"candidate\", candidate);\n\n  pc.addIceCandidate(new RTCIceCandidate(candidate))\n    .then(() => {\n      console.log(\n        `ICE candidate:\\n${candidate ? candidate.candidate : \"(null)\"}`\n      );\n    })\n    .catch(e => console.log(e));\n}\n\nfunction onIceStateChange(pc, event) {\n  if (pc) {\n    console.log(`ICE state: ${pc.iceConnectionState}`);\n    console.log(\"ICE state change event: \", event);\n  }\n}\n\nfunction getItem(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nfunction setItem(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction removeItem(key) {\n  localStorage.removeItem(key);\n}\n\nconst listeners = {};\nwindow.addEventListener(\"storage\", e => {\n  console.log(e);\n  const callback = listeners[e.key];\n  if (!callback) {\n    return;\n  }\n  callback(JSON.parse(e.newValue));\n});\n\nfunction onItemChange(key, callback) {\n  listeners[key] = callback;\n}\n","export default class Box {\n  constructor(container, option) {\n    if (!container) {\n      return;\n    }\n\n    option = Object.assign({\n      width: 300,\n      height: 300,\n      ratio: 1,\n      images: []\n    }, option);\n\n    this.container = container;\n    this.width = option.width;\n    this.height = option.height;\n    this.ratio = option.ratio;\n    this.images = option.images;\n\n    this.init();\n    this.animate();\n  }\n\n  init() {\n    // Resize to the screen\n    if (this.container.width !== this.width || this.container.width !== this.height) {\n      this.container.width = this.width;\n      this.container.height = this.height;\n    }\n\n    this.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 0.1, 1000);\n    this.camera.position.x = 0;\n    this.camera.position.y = 12;\n    this.camera.position.z = 28;\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n    this.scene = new THREE.Scene();\n\n    const ambiLight = new THREE.AmbientLight(0x141414);\n    this.scene.add(ambiLight);\n\n    const light = new THREE.DirectionalLight();\n    light.position.set(0, 30, 20);\n    this.scene.add(light);\n\n    this.cube = this.createMesh(new THREE.BoxGeometry(10, 10, 10), this.images);\n    this.scene.add(this.cube);\n    console.log(this.cube.geometry.faceVertexUvs);\n\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.container,\n      alpha: true,\n    });\n    this.renderer.setClearColor(0xFFFFFFF, 0.2);\n    this.renderer.setPixelRatio(this.ratio);\n    this.renderer.shadowMapEnabled = true;\n  }\n\n  createMesh(geom, images) {\n    let mat;\n    if (images.length === 6) {\n      mat = new THREE.MeshFaceMaterial(images.map(image => this.createMaterial(image)));\n    } else {\n      mat = this.createMaterial(images[0]);\n    }\n    return new THREE.Mesh(geom, mat);\n  }\n\n  createMaterial(image) {\n    let texture;\n\n    if (typeof image === 'string') {\n      texture = new THREE.TextureLoader().load(image);\n    } else {\n      texture = new THREE.CanvasTexture(image);\n    }\n\n    const mat = new THREE.MeshPhongMaterial();\n    mat.map = texture;\n    return mat;\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate.bind(this));\n    this.render();\n  }\n\n  render() {\n    const time = Date.now() * 0.001;\n    this.cube.rotation.x = time * 0.25;\n    this.cube.rotation.y = time * 0.5;\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n\n    if (this.container.width !== this.width || this.container.width !== this.height) {\n      this.container.width = this.width;\n      this.container.height = this.height;\n    }\n\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(this.width, this.height);\n  }\n}\n\n\n"],"sourceRoot":""}