{"version":3,"sources":["webpack:///./three-base.js"],"names":["let","renderer","scene","camera","width","height","onWindowResize","container","clientWidth","clientHeight","aspect","updateProjectionMatrix","setSize","const","document","getElementById","THREE","Scene","background","Color","PerspectiveCamera","position","set","lookAt","grid","GridHelper","add","axes","AxesHelper","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","appendChild","domElement","OrbitControls","screenSpacePanning","addEventListener","init","animate","requestAnimationFrame","render"],"mappings":"2EAAAA,IAAIC,EACAC,EACAC,EACAC,EACAC,EAwCJ,SAASC,IACPF,EAAQG,UAAUC,YAClBH,EAASE,UAAUE,aACnBN,EAAOO,OAASN,EAAQC,EACxBF,EAAOQ,yBACPV,EAASW,QAAQR,EAAOC,IAxC1B,WACEQ,IAAMN,EAAYO,SAASC,eAAe,aAC1CX,EAAQG,EAAUC,YAClBH,EAASE,EAAUE,cAGnBP,EAAQ,IAAIc,MAAMC,OACZC,WAAa,IAAIF,MAAMG,MAAM,WAGnChB,EAAS,IAAIa,MAAMI,kBAAkB,GAAIhB,EAAQC,EAAQ,EAAG,MACrDgB,SAASC,IAAI,IAAK,IAAK,MAC9BnB,EAAOoB,OAAO,EAAG,EAAG,GAGpBV,IAAMW,EAAO,IAAIR,MAAMS,WAAW,IAAM,IACxCvB,EAAMwB,IAAIF,GAEVX,IAAMc,EAAO,IAAIX,MAAMY,WAAW,KAClCD,EAAKN,SAASC,IAAI,EAAG,EAAG,GACxBpB,EAAMwB,IAAIC,IAGV1B,EAAW,IAAIe,MAAMa,eAAeC,WAAW,KACtCC,cAAcC,OAAOC,kBAC9BhC,EAASW,QAAQR,EAAOC,GACxBE,EAAU2B,YAAYjC,EAASkC,YAGd,IAAInB,MAAMoB,cAAcjC,EAAQF,EAASkC,YACjDE,oBAAqB,EAE9BL,OAAOM,iBAAiB,SAAUhC,GAAgB,GAnCpDiC,GA8CA,SAASC,IACPC,sBAAsBD,GAKtBvC,EAASyC,OAAOxC,EAAOC,GAnDzBqC","file":"three-base.js","sourcesContent":["let renderer;\nlet scene;\nlet camera;\nlet width;\nlet height;\n\ninit();\nanimate();\n\nfunction init() {\n  const container = document.getElementById('container');\n  width = container.clientWidth;\n  height = container.clientHeight;\n\n  // scene\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xb0b0b0);\n\n  // camera\n  camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n  camera.position.set(500, 800, 1300);\n  camera.lookAt(0, 0, 0);\n\n  // helper\n  const grid = new THREE.GridHelper(2000, 20);\n  scene.add(grid);\n\n  const axes = new THREE.AxesHelper(1000);\n  axes.position.set(0, 0, 0);\n  scene.add(axes);\n\n  // renderer\n  renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(width, height);\n  container.appendChild(renderer.domElement);\n\n  // contorols\n  const controls = new THREE.OrbitControls(camera, renderer.domElement);\n  controls.screenSpacePanning = true;\n\n  window.addEventListener('resize', onWindowResize, false);\n}\n\nfunction onWindowResize() {\n  width = container.clientWidth;\n  height = container.clientHeight;\n  camera.aspect = width / height;\n  camera.updateProjectionMatrix();\n  renderer.setSize(width, height);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  render();\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}\n"],"sourceRoot":""}