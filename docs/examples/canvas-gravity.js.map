{"version":3,"sources":["webpack:///../src/pg/utils/math.js","webpack:///./canvas-gravity.js"],"names":["randomInt","min","max","Math","floor","random","const","canvas","document","querySelector","ctx","getContext","mouse","x","undefined","y","colorSet","addEventListener","event","init","window","resize","Ball","dx","dy","radius","color","this","prototype","draw","beginPath","arc","PI","fillStyle","fill","update","width","height","let","circles","i","innerWidth","innerHeight","length","push","animate","clearRect","fillRect","forEach","circle","requestAnimationFrame"],"mappings":"yFAYO,SAASA,EAAUC,EAAKC,GAC7B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,UCXtDK,IAGMC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MACxBC,GACJC,OAAGC,EACHC,OAAGD,GAECE,GACJ,UACA,UACA,UACA,UACA,UACA,UACA,WAGFT,EAAOU,iBAAiB,YAAW,SAAGC,GACpCN,EAAMC,EAAIK,EAAML,EAChBD,EAAMG,EAAIG,EAAMH,IAGlBR,EAAOU,iBAAiB,QAAO,WAC7BE,MAGFC,OAAOH,iBAAiB,SAAQ,WAC9BI,MAGF,IAAMC,EACJ,SAAYT,EAAGE,EAAGQ,EAAIC,EAAIC,EAAQC,GAChCC,KAAKd,EAAIA,EACTc,KAAKZ,EAAIA,EACTY,KAAKJ,GAAKA,EACVI,KAAKH,GAAKA,EACVG,KAAKF,OAASA,EACdE,KAAKD,MAAQA,GAGjBJ,EAAAM,UAAEC,KAAA,WACEnB,EAAIoB,YACJpB,EAAIqB,IAAIJ,KAAKd,EAAGc,KAAKZ,EAAGY,KAAKF,OAAQ,EAAa,EAAVtB,KAAK6B,IAAQ,GACrDtB,EAAIuB,UAAYN,KAAKD,MACrBhB,EAAIwB,QAGRZ,EAAAM,UAAEO,OAAA,YACMR,KAAKd,EAAIc,KAAKF,OAASE,KAAKJ,IAAMhB,EAAO6B,OAAST,KAAKd,EAAIc,KAAKF,OAASE,KAAKJ,GAAK,KACrFI,KAAKJ,KAAM,KAGTI,KAAKZ,EAAIY,KAAKF,OAASE,KAAKH,IAAMjB,EAAO8B,QAC3CV,KAAKH,KAAM,IACXG,KAAKJ,IAvDM,KAyDXI,KAAKH,IA1DK,EA6DZG,KAAKd,GAAKc,KAAKJ,GACfI,KAAKZ,GAAKY,KAAKH,GACfG,KAAKE,QAITS,IAAIC,KAEJ,SAASpB,IAEPoB,KAEA,IAAKD,IAAIE,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5BlC,IAAMmB,EAASzB,EAAU,EAAG,IACtBa,EAAIb,EAAUyB,EAAQL,OAAOqB,WAAahB,GAC1CF,EAAKvB,GAAW,GAAI,IACpBe,EAAIf,EAAUyB,EAAQL,OAAOsB,YAAcjB,GAC3CD,EAAKxB,GAAW,EAAG,GACnB0B,EAAQV,EAAShB,EAAU,EAAGgB,EAAS2B,SAE7CJ,EAAQK,KAAK,IAAItB,EAAKT,EAAGE,EAAGQ,EAAIC,EAAIC,EAAQC,KAIhD,SAASL,IACPd,EAAO6B,MAAQhB,OAAOqB,WACtBlC,EAAO8B,OAASjB,OAAOsB,YAWzBrB,IACAF,IATA,SAAS0B,IACPnC,EAAIoC,UAAU,EAAG,EAAGvC,EAAO6B,MAAO7B,EAAO8B,QACzC3B,EAAIuB,UAAY,UAChBvB,EAAIqC,SAAS,EAAG,EAAGxC,EAAO6B,MAAO7B,EAAO8B,QACxCE,EAAQS,QAAO,SAACC,GAAO,OAAGA,EAAOd,WACjCe,sBAAsBL,GAKxBA","file":"canvas-gravity.js","sourcesContent":["/**\n * @module pg/utils/math\n */\n\n/**\n * Gets a random integer\n *\n * @param {number} min minimum number.\n * @param {number} max maximum number.\n * @return {number} The random integer number.\n * @api\n */\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import {randomInt} from '../src/pg/utils/math';\n\nconst GRAVITY = 1;\nconst FRICTION = 0.79;\n\nconst canvas = document.querySelector('canvas');\nconst ctx = canvas.getContext('2d');\nconst mouse = {\n  x: undefined,\n  y: undefined\n};\nconst colorSet = [\n  '#8be9fd',\n  '#50fa7b',\n  '#ffb86c',\n  '#ff79c6',\n  '#bd93f9',\n  '#ff5555',\n  '#f1fa8c',\n];\n\ncanvas.addEventListener('mousemove', (event) => {\n  mouse.x = event.x;\n  mouse.y = event.y;\n});\n\ncanvas.addEventListener('click', () => {\n  init();\n});\n\nwindow.addEventListener('resize', () => {\n  resize();\n});\n\nclass Ball {\n  constructor(x, y, dx, dy, radius, color) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this.radius = radius;\n    this.color = color;\n  }\n\n  draw() {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n\n  update() {\n    if (this.x + this.radius + this.dx >= canvas.width || this.x - this.radius + this.dx < 0) {\n      this.dx *= -1 * FRICTION;\n    }\n\n    if (this.y + this.radius + this.dy >= canvas.height) {\n      this.dy *= -1 * FRICTION;\n      this.dx *= FRICTION;\n    } else {\n      this.dy += GRAVITY;\n    }\n\n    this.x += this.dx;\n    this.y += this.dy;\n    this.draw();\n  }\n}\n\nlet circles = [];\n\nfunction init() {\n\n  circles = [];\n\n  for (let i = 0; i < 500; i++) {\n    const radius = randomInt(8, 20);\n    const x = randomInt(radius, window.innerWidth - radius);\n    const dx = randomInt(-20, 20);\n    const y = randomInt(radius, window.innerHeight - radius);\n    const dy = randomInt(-2, 2);\n    const color = colorSet[randomInt(0, colorSet.length)];\n\n    circles.push(new Ball(x, y, dx, dy, radius, color));\n  }\n}\n\nfunction resize() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n}\n\nfunction animate() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = '#282a36';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  circles.forEach(circle => circle.update());\n  requestAnimationFrame(animate);\n}\n\nresize();\ninit();\nanimate();\n"],"sourceRoot":""}