{"version":3,"sources":["webpack:///../src/pg/utils/math.js","webpack:///../node_modules/eventemitter3/index.js","webpack:///./utils/common.js","webpack:///./utils/thread-pool/job.js","webpack:///./utils/thread-pool/worker-wrapper.js","webpack:///./utils/thread-pool/generic-worker.js","webpack:///./utils/thread-pool/worker-factory.js","webpack:///./utils/thread-pool/thread.js","webpack:///./utils/thread-pool/thread-pool.js","webpack:///./utils/queue.js","webpack:///./task-runner.js","webpack:///./utils/task-runner.js"],"names":["randomInt","min","max","Math","floor","random","rotate","velocity","angle","x","cos","y","sin","resolveCollision","particle","otherParticle","const","xVelocityDiff","yVelocityDiff","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","__webpack_require__","d","__webpack_exports__","has","Object","prototype","hasOwnProperty","prefix","Events","addListener","emitter","event","fn","context","once","TypeError","listener","this","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","sleep","delay","start","Date","getTime","defer","deferred","promise","Promise","resolve","reject","Job","script","param","transferBuffers","super","importScripts","funcStr","toString","scriptArgs","substring","indexOf","split","scriptBody","lastIndexOf","scriptFile","getParameter","getImportScripts","setImportScripts","scripts","getBuffersToTransfer","getFunction","body","getScriptFile","functionallyEquals","otherJob","a","b","arrayEquals","callback","done","error","eventemitter3_default","WorkerWrapper","url","worker","Worker","addEventListener","bind","postMessage","terminate","genericWorkerCode","genericWorkerDataUri","encodeURI","createBlobURL","window","createObjectURL","URL","webkitURL","Error","BlobBuilder","blobBuilder","append","getBlob","Blob","type","worker_factory_genericWorkerDataUri","dataUri","runScriptFile","parameter","worker_wrapper","passParamsToWorkerScript","runCode","let","passParamsToGenericWorker","function","Thread","threadPool","factory","worker_factory","currentJob","lastJob","run","job","needToInitWorker","wireEventListeners","removeExisting","handleSuccess","handleError","handleCompletion","data","errorEvent","thread_pool_ThreadPool","ThreadPool","size","defaultSize","pendingJobs","idleThreads","activeThreads","thread","thread_pool_thread","handleThreadDone","terminateAll","forEach","workerScript","workerFunction","doneCb","shift","thread_pool_job","setTimeout","runDeferred","runJobs","unshift","splice","clearDone","allDone","Queue","clear","queue_prototypeAccessors","get","end","front","store","enqueue","dequeue","peek","chart","taskRunner","TASK_PRIORITY","ESSENTIAL","key","priority","CRITICAL","NORMAL","IDLE","task_runner_TaskRunner","TaskRunner","_taskQueues","values","sort","_taskQueueMap","Map","p","set","queue","_threadMap","_threadPool","thread_pool","requestAnimationFrame","prototypeAccessors","status","map","k","enroll","task","task_runner_Task","WorkerTask","uuid","_processThreadTask","taskStartTime","taskFinishTime","nextTask","_getTask","_processTask","performance","now","some","process","update","delete","TASK_STATUS","DONE","ERROR","ABORT","Task","action","_deferred","common","_uuid","_uuidv4","_initAction","prototypeAccessors$1","_abort","r","e","_error","_done","replace","c","pool","perfomance","offset","timing","navigatorStart","container","document","getElementById","width","clientWidth","height","clientHeight","canvas","ctx","getContext","chartUpdate","_","throttle","datasets","s","Chart","labels","label","backgroundColor","borderColor","borderWidth","options","scales","xAxes","ticks","beginAtZero","button","toLowerCase","promises","math","getTask","all","then","console","log","params","time","timeEnd","init","DEBUG"],"mappings":"yFAYO,SAASA,EAAUC,EAAKC,GAC7B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GA8B/C,SAASK,EAAOC,EAAUC,GAC/B,OACEC,EAAGF,EAASE,EAAIN,KAAKO,IAAIF,GAASD,EAASI,EAAIR,KAAKS,IAAIJ,GACxDG,EAAGJ,EAASE,EAAIN,KAAKS,IAAIJ,GAASD,EAASI,EAAIR,KAAKO,IAAIF,IAcrD,SAASK,EAAiBC,EAAUC,GACzCC,IAAMC,EAAgBH,EAASP,SAASE,EAAIM,EAAcR,SAASE,EAC7DS,EAAgBJ,EAASP,SAASI,EAAII,EAAcR,SAASI,EAMnE,GAAIM,GAJUF,EAAcN,EAAIK,EAASL,GAIbS,GAHdH,EAAcJ,EAAIG,EAASH,GAGW,EAClD,OAAO,EAITK,IAAMR,GAASL,KAAKgB,MAAMJ,EAAcJ,EAAIG,EAASH,EAAGI,EAAcN,EAAIK,EAASL,GAG7EW,EAAKN,EAASO,KACdC,EAAKP,EAAcM,KAGnBE,EAAKjB,EAAOQ,EAASP,SAAUC,GAC/BgB,EAAKlB,EAAOS,EAAcR,SAAUC,GAGpCiB,GAAMhB,EAAGc,EAAGd,GAAKW,EAAKE,IAAOF,EAAKE,GAAa,EAAPE,EAAGf,EAAQa,GAAMF,EAAKE,GAAKX,EAAGY,EAAGZ,GACzEe,GAAMjB,EAAGe,EAAGf,GAAKW,EAAKE,IAAOF,EAAKE,GAAa,EAAPC,EAAGd,EAAQa,GAAMF,EAAKE,GAAKX,EAAGa,EAAGb,GAGzEgB,EAAUrB,EAAOmB,GAAKjB,GACtBoB,EAAUtB,EAAOoB,GAAKlB,GAQ5B,OALAM,EAASP,SAASE,EAAIkB,EAAQlB,EAC9BK,EAASP,SAASI,EAAIgB,EAAQhB,EAE9BI,EAAcR,SAASE,EAAImB,EAAQnB,EACnCM,EAAcR,SAASI,EAAIiB,EAAQjB,GAC5B,EAjGTkB,EAAAC,EAAAC,EAAA,sBAAA/B,IAAA6B,EAAAC,EAAAC,EAAA,sBAAAlB,oCCEA,IAAAmB,EAAAC,OAAAC,UAAAC,eACAC,EAAA,IASA,SAAAC,KA6CA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,sBAAAF,EACA,UAAAG,UAAA,mCAGA,IAAAC,EAAA,IAtBA,SAAAJ,EAAAC,EAAAC,GACAG,KAAAL,KACAK,KAAAJ,UACAI,KAAAH,SAAA,EAmBA,CAAAF,EAAAC,GAAAH,EAAAI,GACAI,EAAAX,IAAAI,IAMA,OAJAD,EAAAS,QAAAD,GACAR,EAAAS,QAAAD,GAAAN,GACAF,EAAAS,QAAAD,IAAAR,EAAAS,QAAAD,GAAAF,GADAN,EAAAS,QAAAD,GAAAE,KAAAJ,IADAN,EAAAS,QAAAD,GAAAF,EAAAN,EAAAW,gBAIAX,EAUA,SAAAY,EAAAZ,EAAAQ,GACA,KAAAR,EAAAW,aAAAX,EAAAS,QAAA,IAAAX,SACAE,EAAAS,QAAAD,GAUA,SAAAK,IACAN,KAAAE,QAAA,IAAAX,EACAS,KAAAI,aAAA,EAxEAjB,OAAAoB,SACAhB,EAAAH,UAAAD,OAAAoB,OAAA,OAMA,IAAAhB,GAAAiB,YAAAlB,GAAA,IA2EAgB,EAAAlB,UAAAqB,WAAA,WACA,IACAC,EACAC,EAFAC,KAIA,OAAAZ,KAAAI,aAAA,OAAAQ,EAEA,IAAAD,KAAAD,EAAAV,KAAAE,QACAhB,EAAA2B,KAAAH,EAAAC,IAAAC,EAAAT,KAAAb,EAAAqB,EAAAG,MAAA,GAAAH,GAGA,OAAAxB,OAAA4B,sBACAH,EAAAI,OAAA7B,OAAA4B,sBAAAL,IAGAE,GAUAN,EAAAlB,UAAA6B,UAAA,SAAAvB,GACA,IAAAO,EAAAX,IAAAI,IACAwB,EAAAlB,KAAAE,QAAAD,GAEA,IAAAiB,EAAA,SACA,GAAAA,EAAAvB,GAAA,OAAAuB,EAAAvB,IAEA,QAAAwB,EAAA,EAAAC,EAAAF,EAAAG,OAAAC,EAAA,IAAAC,MAAAH,GAAyDD,EAAAC,EAAOD,IAChEG,EAAAH,GAAAD,EAAAC,GAAAxB,GAGA,OAAA2B,GAUAhB,EAAAlB,UAAAoC,cAAA,SAAA9B,GACA,IAAAO,EAAAX,IAAAI,IACAuB,EAAAjB,KAAAE,QAAAD,GAEA,OAAAgB,EACAA,EAAAtB,GAAA,EACAsB,EAAAI,OAFA,GAYAf,EAAAlB,UAAAqC,KAAA,SAAA/B,EAAAgC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA7B,EAAAX,IAAAI,IAEA,IAAAM,KAAAE,QAAAD,GAAA,SAEA,IAEA8B,EACAZ,EAHAF,EAAAjB,KAAAE,QAAAD,GACA+B,EAAAC,UAAAZ,OAIA,GAAAJ,EAAAtB,GAAA,CAGA,OAFAsB,EAAApB,MAAAG,KAAAkC,eAAAxC,EAAAuB,EAAAtB,QAAAwC,GAAA,GAEAH,GACA,cAAAf,EAAAtB,GAAAkB,KAAAI,EAAArB,UAAA,EACA,cAAAqB,EAAAtB,GAAAkB,KAAAI,EAAArB,QAAA8B,IAAA,EACA,cAAAT,EAAAtB,GAAAkB,KAAAI,EAAArB,QAAA8B,EAAAC,IAAA,EACA,cAAAV,EAAAtB,GAAAkB,KAAAI,EAAArB,QAAA8B,EAAAC,EAAAC,IAAA,EACA,cAAAX,EAAAtB,GAAAkB,KAAAI,EAAArB,QAAA8B,EAAAC,EAAAC,EAAAC,IAAA,EACA,cAAAZ,EAAAtB,GAAAkB,KAAAI,EAAArB,QAAA8B,EAAAC,EAAAC,EAAAC,EAAAC,IAAA,EAGA,IAAAX,EAAA,EAAAY,EAAA,IAAAR,MAAAS,EAAA,GAAyCb,EAAAa,EAASb,IAClDY,EAAAZ,EAAA,GAAAc,UAAAd,GAGAF,EAAAtB,GAAAyC,MAAAnB,EAAArB,QAAAmC,OACG,CACH,IACAM,EADAhB,EAAAJ,EAAAI,OAGA,IAAAF,EAAA,EAAeA,EAAAE,EAAYF,IAG3B,OAFAF,EAAAE,GAAAtB,MAAAG,KAAAkC,eAAAxC,EAAAuB,EAAAE,GAAAxB,QAAAwC,GAAA,GAEAH,GACA,OAAAf,EAAAE,GAAAxB,GAAAkB,KAAAI,EAAAE,GAAAvB,SAA2D,MAC3D,OAAAqB,EAAAE,GAAAxB,GAAAkB,KAAAI,EAAAE,GAAAvB,QAAA8B,GAA+D,MAC/D,OAAAT,EAAAE,GAAAxB,GAAAkB,KAAAI,EAAAE,GAAAvB,QAAA8B,EAAAC,GAAmE,MACnE,OAAAV,EAAAE,GAAAxB,GAAAkB,KAAAI,EAAAE,GAAAvB,QAAA8B,EAAAC,EAAAC,GAAuE,MACvE,QACA,IAAAG,EAAA,IAAAM,EAAA,EAAAN,EAAA,IAAAR,MAAAS,EAAA,GAA0DK,EAAAL,EAASK,IACnEN,EAAAM,EAAA,GAAAJ,UAAAI,GAGApB,EAAAE,GAAAxB,GAAAyC,MAAAnB,EAAAE,GAAAvB,QAAAmC,IAKA,UAYAzB,EAAAlB,UAAAkD,GAAA,SAAA5C,EAAAC,EAAAC,GACA,OAAAJ,EAAAQ,KAAAN,EAAAC,EAAAC,GAAA,IAYAU,EAAAlB,UAAAS,KAAA,SAAAH,EAAAC,EAAAC,GACA,OAAAJ,EAAAQ,KAAAN,EAAAC,EAAAC,GAAA,IAaAU,EAAAlB,UAAA8C,eAAA,SAAAxC,EAAAC,EAAAC,EAAAC,GACA,IAAAI,EAAAX,IAAAI,IAEA,IAAAM,KAAAE,QAAAD,GAAA,OAAAD,KACA,IAAAL,EAEA,OADAU,EAAAL,KAAAC,GACAD,KAGA,IAAAiB,EAAAjB,KAAAE,QAAAD,GAEA,GAAAgB,EAAAtB,GAEAsB,EAAAtB,QACAE,IAAAoB,EAAApB,MACAD,GAAAqB,EAAArB,aAEAS,EAAAL,KAAAC,OAEG,CACH,QAAAkB,EAAA,EAAAT,KAAAW,EAAAJ,EAAAI,OAA2DF,EAAAE,EAAYF,KAEvEF,EAAAE,GAAAxB,QACAE,IAAAoB,EAAAE,GAAAtB,MACAD,GAAAqB,EAAAE,GAAAvB,cAEAc,EAAAP,KAAAc,EAAAE,IAOAT,EAAAW,OAAArB,KAAAE,QAAAD,GAAA,IAAAS,EAAAW,OAAAX,EAAA,GAAAA,EACAL,EAAAL,KAAAC,GAGA,OAAAD,MAUAM,EAAAlB,UAAAmD,mBAAA,SAAA7C,GACA,IAAAO,EAUA,OARAP,GACAO,EAAAX,IAAAI,IACAM,KAAAE,QAAAD,IAAAI,EAAAL,KAAAC,KAEAD,KAAAE,QAAA,IAAAX,EACAS,KAAAI,aAAA,GAGAJ,MAMAM,EAAAlB,UAAAoD,IAAAlC,EAAAlB,UAAA8C,eACA5B,EAAAlB,UAAAI,YAAAc,EAAAlB,UAAAkD,GAKAhC,EAAAmC,SAAAnD,EAKAgB,iBAMAoC,EAAAC,QAAArC,kCC9UO,SAASsC,EAAMC,GAEpB,IADA3E,IAAM4E,GAAQ,IAAIC,MAAOC,WAClB,IAAID,MAAOC,UAAYF,EAAQD,KAGjC,SAASI,IACd/E,IAAMgF,KAKN,OAJAA,EAASC,QAAU,IAAIC,QAAO,SAAEC,EAASC,GACvCJ,EAASG,QAAUA,EACnBH,EAASI,OAASA,IAEbJ,EAXTnE,EAAAC,EAAAC,EAAA,sBAAA2D,IAAA7D,EAAAC,EAAAC,EAAA,sBAAAgE,8ECQe,MAA8B,SAAA3C,GAO3C,SAAAiD,EAAYC,EAAQC,EAAOC,GAOzB,GANAC,OAAK3D,MAELA,KAAKyD,MAAQA,EACbzD,KAAK0D,gBAAkBA,EACvB1D,KAAK4D,iBAEiB,mBAAXJ,EAAuB,CAChCtF,IAAM2F,EAAUL,EAAOM,WACvB9D,KAAK+D,WAAaF,EAAQG,UAAUH,EAAQI,QAAQ,KAAO,EAAGJ,EAAQI,QAAQ,MAAMC,MAAM,KAC1FlE,KAAKmE,WAAaN,EAAQG,UAAUH,EAAQI,QAAQ,KAAO,EAAGJ,EAAQO,YAAY,MAClFpE,KAAKqE,WAAa,UAElBrE,KAAK+D,WAAa,KAClB/D,KAAKmE,WAAa,KAClBnE,KAAKqE,WAAab,4GAItBc,aAAA,WACE,OAAOtE,KAAKyD,mBAGdc,iBAAA,WACE,OAAOvE,KAAK4D,2BAGdY,iBAAA,SAAiBC,GACfzE,KAAK4D,cAAgBa,eAGvBC,qBAAA,WACE,OAAO1E,KAAK0D,6BAQdiB,YAAA,WACE,OAAK3E,KAAK+D,YAKRhC,KAAM/B,KAAK+D,WACXa,KAAM5E,KAAKmE,YALJ,kBASXU,cAAA,WACE,OAAO7E,KAAKqE,wBAIdS,mBAAA,SAAmBC,GACjB,OAAOA,GACJA,aAAoBxB,GArE3B,SAAqByB,EAAGC,GACtB,QAASD,EAAIC,GAAKD,EAAIC,GAqElBC,CAAYH,EAAShB,WAAY/D,KAAK+D,aACtCgB,EAASH,OAAS5E,KAAK4E,MACvBG,EAASV,aAAerE,KAAKqE,wBAQjCvB,MAAA,SAAMqC,GACJ,OAAOnF,KAAKsC,GAAG,QAAS6C,gBAQ1BC,KAAA,SAAKD,GACH,OAAOnF,KAAKsC,GAAG,OAAQ6C,gBAQzBE,MAAA,SAAMF,GACJ,OAAOnF,KAAKsC,GAAG,QAAS6C,MA/FiB,CAAZG,EAAAN,KCAsB,SAAA1E,GACrD,SAAAiF,EAAYC,GACV7B,OAAK3D,MAEL9B,IAAMuH,EAAS,IAAIC,OAAOF,GAC1BxF,KAAKyF,OAASA,EAEdA,EAAOE,iBAAiB,UAAW3F,KAAKyB,KAAKmE,KAAK5F,KAAM,YACxDyF,EAAOE,iBAAiB,QAAS3F,KAAKyB,KAAKmE,KAAK5F,KAAM,oHAGxD6F,YAAA,kEACE7F,KAAKyF,OAAOI,YAAYzD,MAAMpC,KAAKyF,OAAQ1D,gBAG7C+D,UAAA,WACE,OAAO9F,KAAKyF,OAAOK,eAhBgC,CAAZR,EAAAN,GCLrCe,EACJ,oVAaEC,EAAuB,sCAAwCC,UAAUF,GACzEG,EAAgBC,OAAOD,eAAiBC,OAAOC,gBAEnD,IAAKF,EAAe,CAClBhI,IAAMmI,EAAMF,OAAOE,KAAOF,OAAOG,UAEjC,IAAID,EAGF,MAAM,IAAIE,MAAM,0CAFhBL,EAAgBG,EAAID,gBAMxB,GAAkC,mBAAvBD,OAAOK,aAAuD,mBAAlBN,EAA8B,CACnFhI,IAAMuI,EAAc,IAAIN,OAAOK,YAC/BC,EAAYC,OAAOX,GACnBC,EAAuBE,EAAcO,EAAYE,gBAC5C,GAAoB,mBAATC,MAAgD,mBAAlBV,EAA8B,CAE5EF,EAAuBE,EADV,IAAIU,MAAOb,IAAuBc,KAAM,qBAIxC,IChCTC,GDiCJC,QAASf,EACTD,kBAAmBA,GClCsBgB,UAEY,SAAAzG,kJAErD0G,cAAA,SAAcxB,EAAKyB,EAAWvD,sBAC5BxF,IAAMuH,EAAS,IAAIyB,EAAO1B,GAI1B,OAHAxF,KAAKyB,KAAK,MAAOgE,GAEjBzF,KAAKmH,yBAAyB1B,EAAQwB,EAAWvD,GAC1C+B,eAGT2B,QAAA,SAAQzH,EAAIsH,EAAWrD,EAAoBF,GACzC2D,IAAI5B,wCAEJ,IACEA,EAAS,IAAIyB,EAAOJ,GACpB,MAAOzB,GACP,MAAMA,EAMR,OAHArF,KAAKyB,KAAK,MAAOgE,GACjBzF,KAAKsH,0BAA0B7B,EAAQ9F,EAAIsH,EAAWrD,EAAeF,GAE9D+B,eAGT0B,yBAAA,SAAyB1B,EAAQwB,EAAWvD,GAC1C+B,EAAOI,YAAYoB,EAAWvD,gBAGhC4D,0BAAA,SAA0B7B,EAAQ9F,EAAIsH,EAAWrD,EAAeF,GAC9D+B,EAAOI,aACL0B,SAAY5H,EACZiE,cAAiBA,EACjBqD,UAAaA,GACZvD,MAlCgD,CAAZ4B,EAAAN,KCJK,SAAA1E,GAE9C,SAAAkH,EAAYC,GACV9D,OAAK3D,MAELA,KAAKyH,WAAaA,EAClBzH,KAAK0H,QAAU,IAAIC,EAEnB3H,KAAKyF,OAAS,KACdzF,KAAK4H,WAAa,KAClB5H,KAAK6H,QAAU,+GAGjB/B,UAAA,WACM9F,KAAKyF,SACPzF,KAAKyF,OAAOK,YACZ9F,KAAKyF,OAAS,mBAIlBqC,IAAA,SAAIC,cACEC,GAAmB,EACjBtE,EAAkBqE,EAAIrD,2BAE5B1E,KAAK4H,WAAaG,EAClB/H,KAAK0H,QAAQ7H,KAAK,MAAK,SAAE4F,GACvBzF,EAAKiI,mBAAmBxC,EAAQsC,KAG9B/H,KAAKyF,SACHzF,KAAK6H,SAAW7H,KAAK6H,QAAQ/C,mBAAmBiD,GAClDC,GAAmB,GAEnBhI,KAAKyF,OAAOK,YACZ9F,KAAKyF,OAAS,OAIlBsC,EAAItG,KAAK,SAET,IACMuG,EACED,EAAIlD,gBACN7E,KAAKyF,OAASzF,KAAK0H,QAAQV,cAAce,EAAIlD,gBAAiBkD,EAAIzD,eAAgBZ,GAElF1D,KAAKyF,OAASzF,KAAK0H,QAAQN,QAAQW,EAAIpD,cAAeoD,EAAIzD,eAAgByD,EAAIxD,mBAAoBb,IAGpG1D,KAAKiI,mBAAmBjI,KAAKyF,OAAQsC,GAAK,GAEtCA,EAAIlD,gBACN7E,KAAK0H,QAAQP,yBAAyBnH,KAAKyF,OAAQsC,EAAIzD,eAAgBZ,GAEvE1D,KAAK0H,QAAQJ,0BAA0BtH,KAAKyF,OAAQsC,EAAIpD,cAAeoD,EAAIzD,eAAgByD,EAAIxD,mBAAoBb,IAGxH,QAGC1D,KAAK0H,QAAQnF,mBAAmB,qBAIpC0F,mBAAA,SAAmBxC,EAAQsC,EAAKG,mBAAiB,GAC3CA,IACFzC,EAAOlD,mBAAmB,WAC1BkD,EAAOlD,mBAAmB,UAG5BkD,EAAOnD,GAAG,UAAWtC,KAAKmI,cAAcvC,KAAK5F,KAAM+H,IACnDtC,EAAOnD,GAAG,QAAStC,KAAKoI,YAAYxC,KAAK5F,KAAM+H,iBAGjDM,iBAAA,SAAiBN,GACf/H,KAAK4H,WAAa,KAClB5H,KAAK6H,QAAUE,EAEf/H,KAAKyB,KAAK,OAAQsG,gBAGpBI,cAAA,SAAcJ,EAAKrI,GACjBM,KAAK4H,WAAWnG,KAAK,OAAQ/B,EAAM4I,MACnCtI,KAAKyH,WAAWhG,KAAK,OAAQ/B,EAAM4I,MACnCtI,KAAKqI,iBAAiBN,gBAGxBK,YAAA,SAAYL,EAAKQ,GACfvI,KAAK4H,WAAWnG,KAAK,QAAS8G,GAC9BvI,KAAKyH,WAAWhG,KAAK,QAAS8G,GAC9BvI,KAAKqI,iBAAiBN,MAzFsB,CAAZzC,EAAAN,GCOrB,IAAMwD,EAA+B,SAAAlI,GAKlD,SAAAmI,EAAYC,GACV/E,OAAK3D,MAEL0I,EAAOA,GAAQD,EAAWE,YAE1B3I,KAAK0I,KAAOA,EACZ1I,KAAK4I,eACL5I,KAAK6I,eACL7I,KAAK8I,iBAEL,IAAKzB,IAAIlG,EAAI,EAAGA,EAAIuH,EAAMvH,IAAK,CAC7BkG,IAAI0B,EAAS,IAAIC,EAAOhJ,MACxB+I,EAAOzG,GAAG,OAAQtC,KAAKiJ,iBAAiBrD,KAAK5F,KAAM+I,IAEnD/I,KAAK6I,YAAY1I,KAAK4I,8GAI1BG,aAAA,WACqBlJ,KAAK6I,YAAY7H,OAAOhB,KAAK8I,eAErCK,QAAO,SAACJ,GACjBA,EAAOjD,2BAWXgC,IAAA,mBAIMsB,EACAC,EACAzF,EACAqD,EACAvD,EACA4F,EACAvB,iDAEJ,GAAIhG,EAAKV,OAAS,EAChB,MAAM,IAAIkF,MAAM,8BAGlB,GAAuB,iBAAZxE,EAAK,GAEdqH,EAAerH,EAAKwH,YACf,CAKL,GAHuB,iBAAZxH,EAAK,IAAmBA,EAAK,aAAcR,QACpDqC,EAAgB7B,EAAKwH,WAEnBxH,EAAKV,OAAS,GAAwB,mBAAZU,EAAK,IAGjC,MAAM,IAAIwE,MAAM,oDAFhB8C,EAAiBtH,EAAKwH,QAe1B,GATIxH,EAAKV,OAAS,GAAwB,mBAAZU,EAAK,KACjCkF,EAAYlF,EAAKwH,SAEfxH,EAAKV,OAAS,GAAwB,mBAAZU,EAAK,KACjC2B,EAAkB3B,EAAKwH,SAErBxH,EAAKV,OAAS,GAAwB,mBAAZU,EAAK,KACjCuH,EAASvH,EAAKwH,SAEZxH,EAAKV,OAAS,EAChB,MAAM,IAAIkF,MAAM,mCAAqCxE,GAyBvD,OAnBIqH,EACFrB,EAAM,IAAIyB,EAAIJ,EAAcnC,EAAWvD,IAEvCqE,EAAM,IAAIyB,EAAIH,EAAgBpC,EAAWvD,GACrCE,GAAiBA,EAAcvC,OAAS,GAC1C0G,EAAIvD,iBAAiBZ,IAIrB0F,GACFvB,EAAIzF,GAAG,OAAQgH,GAMjBtJ,KAAK4I,YAAYzI,KAAK4H,GAzG1B,SAAqB5C,GACnBsE,WAAWtE,EAAU,GAyGnBuE,CAAY1J,KAAK2J,QAAQ/D,KAAK5F,OAEvB+H,eAIT4B,QAAA,WACE,GAAI3J,KAAK6I,YAAYxH,OAAS,GAAKrB,KAAK4I,YAAYvH,OAAS,EAAG,CAC9DnD,IAAM6K,EAAS/I,KAAK6I,YAAYU,QAChCvJ,KAAK8I,cAAc3I,KAAK4I,GAExB7K,IAAM6J,EAAM/H,KAAK4I,YAAYW,QAC7BR,EAAOjB,IAAIC,iBAKfkB,iBAAA,SAAiBF,GACf/I,KAAK6I,YAAYe,QAAQb,GACzB/I,KAAK8I,cAAce,OAAO7J,KAAK8I,cAAc7E,QAAQ8E,GAAS,GAC9D/I,KAAK2J,UAE2B,IAA5B3J,KAAK4I,YAAYvH,QAA8C,IAA9BrB,KAAK8I,cAAczH,QACtDrB,KAAKyB,KAAK,wBAKdqI,UAAA,WACE9J,KAAKuC,mBAAmB,qBAI1B6C,KAAA,SAAKD,GACH,OAAOnF,KAAKsC,GAAG,OAAQ6C,gBAIzBE,MAAA,SAAMF,GACJ,OAAOnF,KAAKsC,GAAG,QAAS6C,gBAI1B4E,QAAA,SAAQ5E,GACN,OAAOnF,KAAKH,KAAK,UAAWsF,MAlJoB,CAAZG,EAAAN,OA0JxCwD,EAAWG,YAAc,ECtKV,IAAMqB,EAKnB,WACEhK,KAAKiK,oCAGTC,EARMxB,KAAAyB,IAAA,WACF,OAAOnK,KAAKoK,IAAMpK,KAAKqK,mBAOzBJ,MAAA,WACEjK,KAAKsK,SACLtK,KAAKqK,MAAQ,EACbrK,KAAKoK,IAAM,GAGfJ,EAAA5K,UAAEmL,QAAA,SAAQjC,GACNtI,KAAKsK,MAAMtK,KAAKoK,KAAO9B,EACvBtI,KAAKoK,OAGTJ,EAAA5K,UAAEoL,QAAA,WACE,GAAIxK,KAAKqK,QAAUrK,KAAKoK,IACtB,OAAO,KAGTlM,IAAMoK,EAAOtI,KAAKsK,MAAMtK,KAAKqK,OAG7B,cAFOrK,KAAKsK,MAAMtK,KAAKqK,OACvBrK,KAAKqK,QACE/B,GAGX0B,EAAA5K,UAAEqL,KAAA,WACE,OAAkB,IAAdzK,KAAK0I,KACA,KAGF1I,KAAKsK,MAAMtK,KAAKqK,mDC3BvBK,EACAC,MCLSC,GACXC,WAAYC,IAAK,YAAaC,SAAU,GACxCC,UAAWF,IAAK,WAAYC,SAAU,GACtCE,QAASH,IAAK,SAAUC,SAAU,GAClCG,MAAOJ,IAAK,OAAQC,SAAU,IAGnBI,EAA+B,SAAA7K,GAiB1C,SAAA8K,eACEzH,OAAK3D,MACLA,KAAKqL,YAAclM,OAAOmM,OAAOV,GAAeW,KAAI,SAAEvG,EAAGC,GAAG,OAAGD,EAAE+F,SAAW9F,EAAE8F,WAC9E/K,KAAKwL,cAAgB,IAAIC,IACzBzL,KAAKqL,YAAYlC,QAAO,SAACuC,GAAE,OAAG1L,EAAKwL,cAAcG,IAAID,EAAEZ,IAAK,IAAIc,KAChE5L,KAAK6L,WAAa,IAAIJ,IACtBzL,KAAK8L,YAAc,IAAIC,EACvBC,sBAAsBhM,KAAK8H,IAAIlC,KAAK5F,sIAGtCiM,EAzBIC,OAAA/B,IAAA,sBACI+B,EAASlM,KAAKqL,YAAYc,IAAG,SAACT,GAClC,OACEZ,IAAKY,EAAEU,EACPrB,SAAUW,EACVE,MAAO5L,EAAKwL,cAAcrB,IAAIuB,EAAEZ,KAAKpC,QAOzC,OAJAwD,EAAO/L,MACL2K,IAAK,SACLc,MAAO5L,KAAK6L,WAAWnD,OAElBwD,eAaTpG,UAAA,SAAUiF,GACR,IAAKA,IAAa/K,KAAKwL,cAActM,IAAI6L,EAASD,KAChD,MAAM,IAAIvE,MAAM,+BAA+BwE,EAAY,KAG7D/K,KAAKwL,cAAcrB,IAAIY,EAASD,KAAKb,QACrCjK,KAAKyB,KAAK,qBAAsBsJ,gBAGlC7B,aAAA,sBACElJ,KAAKqL,YAAYlC,QAAO,SAACuC,GAAE,OAAG1L,EAAKwL,cAAcrB,IAAIuB,EAAEZ,KAAKb,UAC5DjK,KAAK6L,WAAW5B,QAChBjK,KAAK8L,YAAY5C,eACjBlJ,KAAKyB,KAAK,8BAGZ4K,OAAA,SAAOC,EAAMvB,GACX,KAAMuB,aAAgBC,GACpB,MAAM,IAAIhG,MAAM,qCAGlB,GAAI+F,aAAgBE,EAClBxM,KAAK6L,WAAWF,IAAIW,EAAKG,KAAMH,GAC/BtM,KAAK0M,mBAAmBJ,OACnB,CACL,IAAKvB,IAAa/K,KAAKwL,cAActM,IAAI6L,EAASD,KAChD,MAAM,IAAIvE,MAAM,+BAA+BwE,EAAY,KAG7D/K,KAAKwL,cAAcrB,IAAIY,EAASD,KAAKP,QAAQ+B,GAK/C,OAFAtM,KAAKyB,KAAK,cAAe6K,GAElBA,EAAKnJ,qBAGd2E,IAAA,SAAI6E,GACFtF,IAAIuF,EAEJ,EAAG,CACD1O,IAAM2O,EAAW7M,KAAK8M,WAEtB,IAAKD,EACH,MAGF7M,KAAK+M,aAAaF,GAElBD,EAAiBzG,OAAO6G,YAAYC,YAC7BL,EAAiBD,EAAgB,GAE1CX,sBAAsBhM,KAAK8H,IAAIlC,KAAK5F,oBAGtC8M,SAAA,sBACMR,EAAO,KAOX,OALAtM,KAAKqL,YAAY6B,KAAI,SAACxB,GAEpB,SADAY,EAAOtM,EAAKwL,cAAcrB,IAAIuB,EAAEZ,KAAKN,aAIhC8B,eAGTS,aAAA,SAAaT,GACXA,EAAKa,UACLnN,KAAKyB,KAAK,6BAGZiL,mBAAA,SAAmBJ,cACjBA,EAAKa,QAAQnN,KAAK8L,aAElB5N,IAAMkP,EAAM,WACVpN,EAAK6L,WAAWwB,OAAOf,EAAKG,MAC5BzM,EAAKyB,KAAK,wBAEZ6K,EAAKzM,KAAK,OAAQuN,GAClBd,EAAKzM,KAAK,QAASuN,6CA1GqB,CAAZ9H,EAAAN,GA8GnBsI,GACXrC,OAAQ,EACRsC,KAAM,EACNC,MAAO,EACPC,MAAO,GAGIlB,EAAyB,SAAAjM,GAMpC,SAAAoN,EAAYC,iEACVhK,OAAK3D,MACLA,KAAK4N,UAAYzO,OAAA0O,EAAA,EAAA1O,GACjBa,KAAK8N,MAAQ9N,KAAK+N,UAClB/N,KAAKgO,YAAYhO,KAAK4N,UAAWD,EAAQ5L,GACzC/B,KAAKkM,OAASoB,EAAYrC,OAC1BjL,KAAKmD,QAAUnD,KAAK4N,UAAUzK,qIAGhC8K,EAbIxB,KAAAtC,IAAA,WACF,OAAOnK,KAAK8N,mBAYdX,QAAA,WACMnN,KAAKkM,SAAWoB,EAAYrC,OAOhCjL,KAAK2N,SANC3N,KAAKkM,SAAWoB,EAAYG,OAC9BzN,KAAKkO,sBAQXF,YAAA,SAAY9K,EAAUyK,EAAQ5L,cAC5B/B,KAAK2N,OAAM,WACTtG,IAAI8G,EACJ,IACEA,EAAIR,EAAOvL,MAAM,KAAML,GACvB,MAAOqM,GAEP,YADApO,EAAKqO,OAAOD,GAGdpO,EAAKsO,MAAMH,iBAIfJ,QAAA,WACE,MAAO,uCAAuCQ,QAAQ,QAAS,SAAUC,GACvEtQ,IAAMiQ,EAAoB,GAAhB9Q,KAAKE,SAAgB,EAC/B,OAD4C,MAANiR,EAAYL,EAAS,EAAJA,EAAU,GACxDrK,SAAS,mBAItBuK,OAAA,SAAOD,GACLpO,KAAK4N,UAAUtK,OAAO8K,GACtBpO,KAAKkM,OAASoB,EAAYE,MAC1BxN,KAAKyB,KAAK,QAAS2M,gBAGrBE,MAAA,SAAMH,GACJnO,KAAK4N,UAAUvK,QAAQ8K,GACvBnO,KAAKkM,OAASoB,EAAYC,KAC1BvN,KAAKyB,KAAK,OAAQ0M,gBAGpBD,OAAA,WACElO,KAAK4N,UAAUvK,UACfrD,KAAKkM,OAASoB,EAAYG,MAC1BzN,KAAKyB,KAAK,mDA7DwB,CAAZ6D,EAAAN,GAiEbwH,EAAuB,SAAAkB,GAClC,SAAAlB,EAAYmB,iEACVhK,QAAK3D,MAAC2N,GAAM3M,OAAKe,8GAGnBoL,QAAA,SAAQsB,GACFzO,KAAKkM,SAAWoB,EAAYG,OAC9BzN,KAAKkO,SAGPlO,KAAK2N,OAAOc,gBAGdT,YAAA,SAAY9K,EAAUyK,EAAQ5L,cAC5B/B,KAAK2N,OAAM,SAAIc,GACbA,EACG3G,IAAI6F,EAAQ5L,GACZsD,MAAK,SAAE+I,GACNpO,EAAKqO,OAAOD,KAEbhJ,KAAI,SAAE+I,GACLnO,EAAKsO,MAAMH,SArBe,CAAJ5B,GA2BhC,IAAKpG,OAAOuI,aAAevI,OAAOuI,WAAWzB,IAAK,CAChDlK,KAAKkK,MAAQlK,KAAKkK,IAAM,WACtB,OAAO,IAAIjN,MAAOgD,YAGpBmD,OAAOuI,aAAevI,OAAOuI,eAE7BxQ,IAAMyQ,GAAUxI,OAAOuI,WAAWE,SAC/BzI,OAAOuI,WAAWE,YAAcC,iBAChC1I,OAAOuI,WAAWE,OAAOC,eAAiB9L,KAAKkK,OAElD9G,OAAOuI,WAAWzB,IAAM,WACtB,OAAOlK,KAAKkK,MAAQ0B,ID7NxB,WACEzQ,IAAM4Q,EAAYC,SAASC,eAAe,aACpCC,EAAQH,EAAUI,YAClBC,EAASL,EAAUM,aAEnBC,EAASN,SAASC,eAAe,SACjCM,EAAMD,EAAOE,WAAW,MAE9BF,EAAOJ,MAAQA,EACfI,EAAOF,OAASA,EAEhBjR,IAAMsR,EAAcC,EAAEC,SAAQ,WAC5BhF,EAAMpC,KAAKqH,SAAS,GAAGrH,KAAOqC,EAAWuB,OAAOC,IAAG,SAACyD,GAAE,OAAGA,EAAEhE,QAC3DlB,EAAM0C,UACL,MACHzC,EAAa,IAAIQ,GACN7I,GAAG,cAAekN,GAC7B7E,EAAWrI,GAAG,eAAgBkN,GAC9B7E,EAAWrI,GAAG,sBAAuBkN,GACrC7E,EAAWrI,GAAG,qBAAsBkN,GACpC7E,EAAWrI,GAAG,gBAAiBkN,GAE/B9E,EAAQ,IAAImF,MAAMP,GAChBzI,KAAM,gBACNyB,MACEwH,QAAS,YAAa,WAAY,SAAU,OAAQ,UACpDH,WACEI,MAAO,aACPzH,KAAMqC,EAAWuB,OAAOC,IAAG,SAACyD,GAAE,OAAGA,EAAEhE,QACnCoE,iBACE,0BACA,0BACA,0BACA,2BAEFC,aACE,qBACA,wBACA,wBACA,yBAEFC,YAAa,KAGjBC,SACEC,QACEC,QACEC,OACEC,aAAa,SAOvBpR,OAAOmM,OAAOV,GAAezB,QAAO,SAACuC,GACnCxN,IAAMsS,EAASzB,SAASC,eAAe,UAAUtD,EAAEZ,IAAI2F,eAElDD,GAILA,EAAO7K,iBAAiB,QAAO,WAG7B,IAFAzH,IAAMwS,KACAhI,EAAOvJ,OAAAwR,EAAA,EAAAxR,CAAU,IAAK,KACnBgC,EAAI,EAAGA,EAAIuH,EAAMvH,IACxBuP,EAASvQ,KAAKwK,EAAW0B,OAAOuE,IAAWlF,IAE7CtI,QAAQyN,IAAIH,GAAUI,KAAI,WAAI,OAAGC,QAAQC,IAAOtF,EAAE,IAAG,mBAIzDvM,OAAOmM,OAAOV,GAAezB,QAAO,SAACuC,GACnCxN,IAAMsS,EAASzB,SAASC,eAAe,aAAatD,EAAEZ,IAAI2F,eAErDD,GAILA,EAAO7K,iBAAiB,QAAO,WAC7BgF,EAAW7E,UAAU4F,OAIzBrE,IAAImJ,EAASzB,SAASC,eAAe,iBAsBrC,SAAS4B,IACP,OAAO,IAAIrE,EAAI,WACbpN,OAAA0O,EAAA,EAAA1O,CAAMA,OAAAwR,EAAA,EAAAxR,CAAU,EAAG,MAvBvBqR,EAAO7K,iBAAiB,QAAO,WAC7BgF,EAAW0B,OA2BJ,IAAIG,EAAU,SAAEyE,EAAQ7L,GAC7BlH,IACM4E,GAAQ,IAAIC,MAAOC,UAEzB,IADA+N,QAAQG,KAAK,WACN,IAAInO,MAAOC,UAAYF,EAHhB,MAIdiO,QAAQI,QAAQ,UAChB/L,OAjCiC0L,KAAI,WAAI,OAAGC,QAAQC,IAAI,wBAG5DR,EAASzB,SAASC,eAAe,kBAC1BrJ,iBAAiB,QAAO,WAC7BgF,EAAWzB,kBAGbsH,EAASzB,SAASC,eAAe,iBAC1BrJ,iBAAiB,QAAO,WAG7B,IAFAzH,IAAMwS,KACAhI,EAAOvJ,OAAAwR,EAAA,EAAAxR,CAAU,IAAK,KACnBgC,EAAI,EAAGA,EAAIuH,EAAMvH,IAAK,CAC7BjD,IAAMoO,EAAOsE,IACbF,EAASvQ,KAAKwK,EAAW0B,OAAOC,EAAM1B,EAAcC,YACpDyB,EAAKJ,OAASoB,EAAYG,MAE5BrK,QAAQyN,IAAIH,GAAUI,KAAI,WAAI,OAAGC,QAAQC,IAAI,wBAqBjDI,GAEAjL,OAAOkL,OACL1G,WAAYA","file":"task-runner.js","sourcesContent":["/**\n * @module pg/utils/math\n */\n\n/**\n * Gets a random integer\n *\n * @param {number} min minimum number.\n * @param {number} max maximum number.\n * @return {number} The random integer number.\n * @api\n */\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * Gets convex 2d numbers\n * @param {number} step step.\n * @return {array} The convex 2d numbers.\n * @api\n */\nexport function convex2d(step) {\n  const convex = [];\n\n  for (let i = 0; i < step; i++) {\n    const x = i / step;\n    convex.push([x, 1 - i / step]);\n  }\n  return convex;\n}\n\n/**\n * Rotates coordinate system for velocities\n *\n * Takes velocities and alters them as if the coordinate system they're on was rotated\n *\n * {@link https://gist.github.com/christopher4lis/f9ccb589ee8ecf751481f05a8e59b1dc}\n *\n * @param {object} velocity The velocity of an individual particle\n * @param {number} angle The angle of collision between two objects in radians\n * @return {Object} The altered x and y velocities after the coordinate system has been rotated\n */\nexport function rotate(velocity, angle) {\n  return {\n    x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\n    y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\n  };\n}\n\n/**\n * Swaps out two colliding particles' x and y velocities after running through\n * an elastic collision reaction equation\n *\n * {@link https://gist.github.com/christopher4lis/f9ccb589ee8ecf751481f05a8e59b1dc}\n *\n * @param {object} particle A particle object with x and y coordinates, plus velocity\n * @param {object} otherParticle A particle object with x and y coordinates, plus velocity\n * @return {boolean} success\n */\nexport function resolveCollision(particle, otherParticle) {\n  const xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\n  const yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\n\n  const xDist = otherParticle.x - particle.x;\n  const yDist = otherParticle.y - particle.y;\n\n  // Prevent accidental overlap of particles\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n    return false;\n  }\n\n  // Grab angle between the two colliding particles\n  const angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\n\n  // Store mass in var for better readability in collision equation\n  const m1 = particle.mass;\n  const m2 = otherParticle.mass;\n\n  // Velocity before equation\n  const u1 = rotate(particle.velocity, angle);\n  const u2 = rotate(otherParticle.velocity, angle);\n\n  // Velocity after 1d collision equation\n  const v1 = {x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y};\n  const v2 = {x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y};\n\n  // Final velocity after rotating axis back to original location\n  const vFinal1 = rotate(v1, -angle);\n  const vFinal2 = rotate(v2, -angle);\n\n  // Swap particle velocities for realistic bounce effect\n  particle.velocity.x = vFinal1.x;\n  particle.velocity.y = vFinal1.y;\n\n  otherParticle.velocity.x = vFinal2.x;\n  otherParticle.velocity.y = vFinal2.y;\n  return true;\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export function sleep(delay) {\n  const start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\nexport function defer() {\n  const deferred = {};\n  deferred.promise = new Promise((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n","// https://github.com/andywer/threadpool-js/blob/master/src/ThreadPool/Job.js\n\nimport EventEmitter from 'eventemitter3';\n\nfunction arrayEquals(a, b) {\n  return !(a < b || a > b);\n}\n\nexport default class Job extends EventEmitter {\n\n  /**\n   *  @param {String} script              Script filename or function.\n   *  @param {Object|Array} [param]       Optional. Parameter (or array of parameters) to be passed to the thread or false/undefined.\n   *  @param {Object[]} [transferBuffers] Optional. Array of buffers to be transferred to the worker context.\n   */\n  constructor(script, param, transferBuffers) {\n    super();\n    \n    this.param = param;\n    this.transferBuffers = transferBuffers;\n    this.importScripts = [];\n\n    if (typeof script === 'function') {\n      const funcStr = script.toString();\n      this.scriptArgs = funcStr.substring(funcStr.indexOf('(') + 1, funcStr.indexOf(')')).split(',');\n      this.scriptBody = funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n      this.scriptFile = null;\n    } else {\n      this.scriptArgs = null;\n      this.scriptBody = null;\n      this.scriptFile = script;\n    }\n  }\n\n  getParameter() {\n    return this.param;\n  }\n\n  getImportScripts() {\n    return this.importScripts;\n  }\n\n  setImportScripts(scripts) {\n    this.importScripts = scripts;\n  }\n\n  getBuffersToTransfer() {\n    return this.transferBuffers;\n  }\n\n  /**\n   *  @return {Object} Object: { args: [\"argument name\", ...], body: \"<code>\" }\n   *      Usage:  var f = Function.apply(null, args.concat(body));\n   *          (`Function.apply()` replaces `new Function()`)\n   */\n  getFunction() {\n    if (!this.scriptArgs) {\n      return null;\n    }\n\n    return {\n      args: this.scriptArgs,\n      body: this.scriptBody\n    };\n  }\n\n  getScriptFile() {\n    return this.scriptFile;\n  }\n\n  /// @return True if `otherJob` uses the same function / same script as this job.\n  functionallyEquals(otherJob) {\n    return otherJob &&\n      (otherJob instanceof Job) &&\n      arrayEquals(otherJob.scriptArgs, this.scriptArgs) &&\n      otherJob.body === this.body &&\n      otherJob.scriptFile === this.scriptFile;\n  }\n\n  /**\n   *  Adds a callback function that is called when the job is about to start.\n   *  @param {Function} callback\n   *    function(result). `result` is the result value/object returned by the thread.\n   */\n  start(callback) {\n    return this.on('start', callback);\n  }\n\n  /**\n   *  Adds a callback function that is called when the job has been (successfully) finished.\n   *  @param {Function} callback\n   *    function(result). `result` is the result value/object returned by the thread.\n   */\n  done(callback) {\n    return this.on('done', callback);\n  }\n\n  /**\n   *  Adds a callback function that is called if the job fails.\n   *  @param {Function} callback\n   *    function(error). `error` is an instance of `Error`.\n   */\n  error(callback) {\n    return this.on('error', callback);\n  }\n\n}\n","// https://github.com/andywer/threadpool-js/blob/master/src/ThreadPool/WorkerWrapper.js\n\nimport EventEmitter from 'eventemitter3';\n\n/**\n * Wrapping the WebWorker in an event emitter\n * (Because removeAllListeners() is quite a nice feature...)\n */\nexport default class WorkerWrapper extends EventEmitter {\n  constructor(url) {\n    super();\n\n    const worker = new Worker(url);\n    this.worker = worker;\n\n    worker.addEventListener('message', this.emit.bind(this, 'message'));\n    worker.addEventListener('error', this.emit.bind(this, 'error'));\n  }\n\n  postMessage(...args) {\n    this.worker.postMessage.apply(this.worker, args);\n  }\n\n  terminate() {\n    return this.worker.terminate();\n  }\n}\n","// https://github.com/andywer/threadpool-js/blob/master/src/genericWorker.js\n\n/*eslint-disable */\nconst genericWorkerCode =\n  'this.onmessage = function (event) {' +\n  '  var fnData = event.data.function;' +\n  '  var scripts = event.data.importScripts;'+\n  '  var fn = Function.apply(null, fnData.args.concat(fnData.body));' +\n  '  if (importScripts && scripts.length > 0) {' +\n  '    importScripts.apply(null, scripts);' +\n  '  }' +\n  '  fn(event.data.parameter, function(result) {' +\n  '    postMessage(result);' +\n  '  });' +\n  '}';\n/*eslint-enable */\n\nlet genericWorkerDataUri = 'data:text/javascript;charset=utf-8,' + encodeURI(genericWorkerCode);\nlet createBlobURL = window.createBlobURL || window.createObjectURL;\n\nif (!createBlobURL) {\n  const URL = window.URL || window.webkitURL;\n\n  if (URL) {\n    createBlobURL = URL.createObjectURL;\n  } else {\n    throw new Error('No Blob creation implementation found.');\n  }\n}\n\nif (typeof window.BlobBuilder === 'function' && typeof createBlobURL === 'function') {\n  const blobBuilder = new window.BlobBuilder();\n  blobBuilder.append(genericWorkerCode);\n  genericWorkerDataUri = createBlobURL(blobBuilder.getBlob());\n} else if (typeof Blob === 'function' && typeof createBlobURL === 'function') {\n  const blob = new Blob([ genericWorkerCode ], { type: 'text/javascript' });\n  genericWorkerDataUri = createBlobURL(blob);\n}\n\nexport default {\n  dataUri: genericWorkerDataUri,\n  genericWorkerCode: genericWorkerCode\n};\n","// https://github.com/andywer/threadpool-js/blob/master/src/ThreadPool/WorkerFactory.js\n\nimport EventEmitter from 'eventemitter3';\n\nimport Worker from './worker-wrapper';\nimport genericWorker from './generic-worker';\n\nconst genericWorkerDataUri = genericWorker.dataUri;\n\nexport default class WorkerFactory extends EventEmitter {\n\n  runScriptFile(url, parameter, transferBuffers = []) {\n    const worker = new Worker(url);\n    this.emit('new', worker);\n\n    this.passParamsToWorkerScript(worker, parameter, transferBuffers);\n    return worker;\n  }\n\n  runCode(fn, parameter, importScripts = [], transferBuffers = []) {\n    let worker;\n\n    try {\n      worker = new Worker(genericWorkerDataUri);\n    } catch (error) {\n      throw error;\n    }\n\n    this.emit('new', worker);\n    this.passParamsToGenericWorker(worker, fn, parameter, importScripts, transferBuffers);\n\n    return worker;\n  }\n\n  passParamsToWorkerScript(worker, parameter, transferBuffers) {\n    worker.postMessage(parameter, transferBuffers);\n  }\n\n  passParamsToGenericWorker(worker, fn, parameter, importScripts, transferBuffers) {\n    worker.postMessage({\n      'function': fn,\n      'importScripts': importScripts,\n      'parameter': parameter\n    }, transferBuffers);\n  }\n}\n","// https://github.com/andywer/threadpool-js/blob/master/src/ThreadPool/Thread.js\n\nimport EventEmitter from 'eventemitter3';\nimport WorkerFactory from './worker-factory';\n\nexport default class Thread extends EventEmitter {\n\n  constructor(threadPool) {\n    super();\n\n    this.threadPool = threadPool;\n    this.factory = new WorkerFactory();\n\n    this.worker = null;\n    this.currentJob = null;\n    this.lastJob = null;\n  }\n\n  terminate() {\n    if (this.worker) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n  }\n\n  run(job) {\n    let needToInitWorker = true;\n    const transferBuffers = job.getBuffersToTransfer() || [];\n\n    this.currentJob = job;\n    this.factory.once('new', worker => {\n      this.wireEventListeners(worker, job);\n    });\n\n    if (this.worker) {\n      if (this.lastJob && this.lastJob.functionallyEquals(job)) {\n        needToInitWorker = false;\n      } else {\n        this.worker.terminate();\n        this.worker = null;\n      }\n    }\n\n    job.emit('start');\n\n    try {\n      if (needToInitWorker) {\n        if (job.getScriptFile()) {\n          this.worker = this.factory.runScriptFile(job.getScriptFile(), job.getParameter(), transferBuffers);\n        } else {\n          this.worker = this.factory.runCode(job.getFunction(), job.getParameter(), job.getImportScripts(), transferBuffers);\n        }\n      } else {\n        this.wireEventListeners(this.worker, job, true);\n\n        if (job.getScriptFile()) {\n          this.factory.passParamsToWorkerScript(this.worker, job.getParameter(), transferBuffers);\n        } else {\n          this.factory.passParamsToGenericWorker(this.worker, job.getFunction(), job.getParameter(), job.getImportScripts(), transferBuffers);\n        }\n      }\n    } finally {\n      // always remove all listeners (for this job), so they cannot be triggered when this function is later\n      // called with a different job\n      this.factory.removeAllListeners('new');\n    }\n  }\n\n  wireEventListeners(worker, job, removeExisting = false) {\n    if (removeExisting) {\n      worker.removeAllListeners('message');\n      worker.removeAllListeners('error');\n    }\n\n    worker.on('message', this.handleSuccess.bind(this, job));\n    worker.on('error', this.handleError.bind(this, job));\n  }\n\n  handleCompletion(job) {\n    this.currentJob = null;\n    this.lastJob = job;\n\n    this.emit('done', job);\n  }\n\n  handleSuccess(job, event) {\n    this.currentJob.emit('done', event.data);\n    this.threadPool.emit('done', event.data);\n    this.handleCompletion(job);\n  }\n\n  handleError(job, errorEvent) {\n    this.currentJob.emit('error', errorEvent);\n    this.threadPool.emit('error', errorEvent);\n    this.handleCompletion(job);\n  }\n}\n","// https://github.com/andywer/threadpool-js/blob/master/src/ThreadPool/ThreadPool.js\n\nimport EventEmitter from 'eventemitter3';\n\nimport Job from './job';\nimport Thread from './thread';\n\n\nfunction runDeferred(callback) {\n  setTimeout(callback, 0);\n}\n\nexport default class ThreadPool extends EventEmitter {\n\n  /**\n   *  @param {int} [size]       Optional. Number of threads. Default is `ThreadPool.defaultSize`.\n   */\n  constructor(size) {\n    super();\n\n    size = size || ThreadPool.defaultSize;\n\n    this.size = size;\n    this.pendingJobs   = [];\n    this.idleThreads   = [];\n    this.activeThreads = [];\n\n    for (let i = 0; i < size; i++) {\n      let thread = new Thread(this);\n      thread.on('done', this.handleThreadDone.bind(this, thread));\n\n      this.idleThreads.push(thread);\n    }\n  }\n\n  terminateAll() {\n    const allThreads = this.idleThreads.concat(this.activeThreads);\n\n    allThreads.forEach(thread => {\n      thread.terminate();\n    });\n  }\n\n  /**\n   * Usage: run ({String} WorkerScript [, {Object|scalar} Parameter[, {Object[]} BuffersToTransfer]] [, {Function} doneCallback(returnValue)])\n   *        - or -\n   *        run ([{String[]} ImportScripts, ] {Function} WorkerFunction(param, doneCB) [, {Object|scalar} Parameter[, {Object[]} BuffersToTransfer]] [, {Function} DoneCallback(result)])\n   *\n   * @return Job\n   */\n  run(...args) {\n    ////////////////////\n    // Parse arguments:\n\n    let workerScript;\n    let workerFunction;\n    let importScripts;\n    let parameter;\n    let transferBuffers;\n    let doneCb;\n    let job;\n\n    if (args.length < 1) {\n      throw new Error('run(): Too few parameters.');\n    }\n\n    if (typeof args[0] === 'string') {\n      // 1st usage example (see doc above)\n      workerScript = args.shift();\n    } else {\n      // 2nd usage example (see doc above)\n      if (typeof args[0] === 'object' && args[0] instanceof Array) {\n        importScripts = args.shift();\n      }\n      if (args.length > 0 && typeof args[0] === 'function') {\n        workerFunction = args.shift();\n      } else {\n        throw new Error('run(): Missing obligatory thread logic function.');\n      }\n    }\n\n    if (args.length > 0 && typeof args[0] !== 'function') {\n      parameter = args.shift();\n    }\n    if (args.length > 0 && typeof args[0] !== 'function') {\n      transferBuffers = args.shift();\n    }\n    if (args.length > 0 && typeof args[0] === 'function') {\n      doneCb = args.shift();\n    }\n    if (args.length > 0) {\n      throw new Error('run(): Unrecognized parameters: ' + args);\n    }\n\n    ///////////////\n    // Create job:\n\n    if (workerScript) {\n      job = new Job(workerScript, parameter, transferBuffers);\n    } else {\n      job = new Job(workerFunction, parameter, transferBuffers);\n      if (importScripts && importScripts.length > 0) {\n        job.setImportScripts(importScripts);\n      }\n    }\n\n    if (doneCb) {\n      job.on('done', doneCb);\n    }\n\n    ////////////\n    // Run job:\n\n    this.pendingJobs.push(job);\n    runDeferred(this.runJobs.bind(this));\n\n    return job;\n  }\n\n  /** for internal use only */\n  runJobs() {\n    if (this.idleThreads.length > 0 && this.pendingJobs.length > 0) {\n      const thread = this.idleThreads.shift();\n      this.activeThreads.push(thread);\n\n      const job = this.pendingJobs.shift();\n      thread.run(job);\n    }\n  }\n\n  /** for internal use only */\n  handleThreadDone(thread) {\n    this.idleThreads.unshift(thread);\n    this.activeThreads.splice(this.activeThreads.indexOf(thread), 1);\n    this.runJobs();\n\n    if (this.pendingJobs.length === 0 && this.activeThreads.length === 0) {\n      this.emit('allDone');\n    }\n  }\n\n  /** @deprecated Use .removeAllListeners('done') instead */\n  clearDone() {\n    this.removeAllListeners('done');\n  }\n\n  /** Shortcut for .on('done', callback) */\n  done(callback) {\n    return this.on('done', callback);\n  }\n\n  /** Shortcut for .on('error', callback) */\n  error(callback) {\n    return this.on('error', callback);\n  }\n\n  /** Shortcut for .on('allDone', callback) */\n  allDone(callback) {\n    return this.once('allDone', callback);\n  }\n}\n\n\n//////////////////////\n// Set default values:\n\nThreadPool.defaultSize = 8;\n","export default class Queue {\n  get size() {\n    return this.end - this.front;\n  }\n\n  constructor() {\n    this.clear();\n  }\n\n  clear() {\n    this.store = {};\n    this.front = 0;\n    this.end = 0;\n  }\n\n  enqueue(data) {\n    this.store[this.end] = data;\n    this.end++;\n  }\n\n  dequeue() {\n    if (this.front === this.end) {\n      return null;\n    }\n\n    const data = this.store[this.front];\n    delete this.store[this.front];\n    this.front++;\n    return data;\n  }\n\n  peek() {\n    if (this.size === 0) {\n      return null;\n    }\n\n    return this.store[this.front];\n  }\n}\n","import {sleep} from \"./utils/common\";\nimport {randomInt} from \"../src/pg/utils/math\";\nimport {\n  Task,\n  TASK_PRIORITY, TASK_STATUS,\n  TaskRunner,\n  WorkerTask\n} from \"./utils/task-runner\";\n\nlet chart;\nlet taskRunner;\n\nfunction init() {\n  const container = document.getElementById('container');\n  const width = container.clientWidth;\n  const height = container.clientHeight;\n\n  const canvas = document.getElementById('chart');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  const chartUpdate = _.throttle(() => {\n    chart.data.datasets[0].data = taskRunner.status.map(s => s.queue);\n    chart.update();\n  }, 100);\n  taskRunner = new TaskRunner();\n  taskRunner.on('task:enroll', chartUpdate);\n  taskRunner.on('task:process', chartUpdate);\n  taskRunner.on('worker-task:process', chartUpdate);\n  taskRunner.on('terminate:priority', chartUpdate);\n  taskRunner.on('terminate:all', chartUpdate);\n\n  chart = new Chart(ctx, {\n    type: 'horizontalBar',\n    data: {\n      labels: [\"ESSENTIAL\", \"CRITICAL\", \"NORMAL\", \"IDLE\", \"WORKER\"],\n      datasets: [{\n        label: '# of tasks',\n        data: taskRunner.status.map(s => s.queue),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255,99,132,1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(75, 192, 192, 1)',\n        ],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n\n  Object.values(TASK_PRIORITY).forEach(p => {\n    const button = document.getElementById(`enroll-${p.key.toLowerCase()}`);\n\n    if (!button) {\n      return;\n    }\n\n    button.addEventListener('click', () => {\n      const promises = [];\n      const size = randomInt(100, 500);\n      for (let i = 0; i < size; i++) {\n        promises.push(taskRunner.enroll(getTask(), p));\n      }\n      Promise.all(promises).then(() => console.log(`${p.key} finished`));\n    });\n  });\n\n  Object.values(TASK_PRIORITY).forEach(p => {\n    const button = document.getElementById(`terminate-${p.key.toLowerCase()}`);\n\n    if (!button) {\n      return;\n    }\n\n    button.addEventListener('click', () => {\n      taskRunner.terminate(p);\n    });\n  });\n\n  let button = document.getElementById('enroll-worker');\n  button.addEventListener('click', () => {\n    taskRunner.enroll(getWorkerTask()).then(() => console.log('worker finished'));\n  });\n\n  button = document.getElementById('terminate-all');\n  button.addEventListener('click', () => {\n    taskRunner.terminateAll();\n  });\n\n  button = document.getElementById('enroll-abort');\n  button.addEventListener('click', () => {\n    const promises = [];\n    const size = randomInt(500, 1000);\n    for (let i = 0; i < size; i++) {\n      const task = getTask();\n      promises.push(taskRunner.enroll(task, TASK_PRIORITY.ESSENTIAL));\n      task.status = TASK_STATUS.ABORT;\n    }\n    Promise.all(promises).then(() => console.log(`Aborted finished`));\n  });\n\n  function getTask() {\n    return new Task(() => {\n      sleep(randomInt(1, 4));\n    });\n  }\n\n  function getWorkerTask() {\n    return new WorkerTask((params, done) => {\n      const delay = 3000;\n      const start = new Date().getTime();\n      console.time('worker');\n      while (new Date().getTime() < start + delay) ;\n      console.timeEnd('worker');\n      done();\n    });\n  }\n}\n\ninit();\n\nwindow.DEBUG = {\n  taskRunner: taskRunner\n};\n","import EventEmitter from 'eventemitter3';\nimport ThreadPool from './thread-pool/thread-pool';\nimport Queue from './queue';\nimport { defer } from './common';\n\nexport const TASK_PRIORITY = {\n  ESSENTIAL: {key: 'ESSENTIAL', priority: 0},\n  CRITICAL: {key: 'CRITICAL', priority: 1},\n  NORMAL: {key: 'NORMAL', priority: 2},\n  IDLE: {key: 'IDLE', priority: 3},\n};\n\nexport class TaskRunner extends EventEmitter {\n\n  get status() {\n    const status = this._taskQueues.map(p => {\n      return {\n        key: p.k,\n        priority: p,\n        queue: this._taskQueueMap.get(p.key).size\n      }\n    });\n    status.push({\n      key: 'WORKER',\n      queue: this._threadMap.size,\n    });\n    return status;\n  }\n\n  constructor() {\n    super();\n    this._taskQueues = Object.values(TASK_PRIORITY).sort((a, b) => a.priority - b.priority);\n    this._taskQueueMap = new Map();\n    this._taskQueues.forEach(p => this._taskQueueMap.set(p.key, new Queue()));\n    this._threadMap = new Map();\n    this._threadPool = new ThreadPool();\n    requestAnimationFrame(this.run.bind(this));\n  }\n\n  terminate(priority) {\n    if (!priority || !this._taskQueueMap.has(priority.key)) {\n      throw new Error(`This priority is not exist: ${priority.key}`);\n    }\n\n    this._taskQueueMap.get(priority.key).clear();\n    this.emit('terminate:priority', priority);\n  }\n\n  terminateAll() {\n    this._taskQueues.forEach(p => this._taskQueueMap.get(p.key).clear());\n    this._threadMap.clear();\n    this._threadPool.terminateAll();\n    this.emit('terminate:all');\n  }\n\n  enroll(task, priority) {\n    if (!(task instanceof Task)) {\n      throw new Error('This task is not instance of Task');\n    }\n\n    if (task instanceof WorkerTask) {\n      this._threadMap.set(task.uuid, task);\n      this._processThreadTask(task);\n    } else {\n      if (!priority || !this._taskQueueMap.has(priority.key)) {\n        throw new Error(`This priority is not exist: ${priority.key}`);\n      }\n\n      this._taskQueueMap.get(priority.key).enqueue(task);\n    }\n\n    this.emit('task:enroll', task);\n\n    return task.promise;\n  }\n\n  run(taskStartTime) {\n    let taskFinishTime;\n\n    do {\n      const nextTask = this._getTask();\n\n      if (!nextTask) {\n        break;\n      }\n\n      this._processTask(nextTask);\n\n      taskFinishTime = window.performance.now();\n    } while (taskFinishTime - taskStartTime < 2);\n\n    requestAnimationFrame(this.run.bind(this));\n  }\n\n  _getTask() {\n    let task = null;\n\n    this._taskQueues.some(p => {\n      task = this._taskQueueMap.get(p.key).dequeue();\n      return !!task;\n    });\n\n    return task;\n  }\n\n  _processTask(task) {\n    task.process();\n    this.emit('task:process');\n  }\n\n  _processThreadTask(task) {\n    task.process(this._threadPool);\n\n    const update = () => {\n      this._threadMap.delete(task.uuid);\n      this.emit('worker-task:process');\n    };\n    task.once('done', update);\n    task.once('error', update);\n  }\n}\n\nexport const TASK_STATUS = {\n  NORMAL: 0,\n  DONE: 1,\n  ERROR: 2,\n  ABORT: 3,\n};\n\nexport class Task extends EventEmitter {\n\n  get uuid() {\n    return this._uuid;\n  }\n\n  constructor(action, ...args) {\n    super();\n    this._deferred = defer();\n    this._uuid = this._uuidv4();\n    this._initAction(this._deferred, action, args);\n    this.status = TASK_STATUS.NORMAL;\n    this.promise = this._deferred.promise;\n  }\n\n  process() {\n    if (this.status !== TASK_STATUS.NORMAL) {\n      if (this.status === TASK_STATUS.ABORT) {\n        this._abort();\n      }\n      return;\n    }\n\n    this.action();\n  }\n\n  _initAction(deferred, action, args) {\n    this.action = () => {\n      let r;\n      try {\n        r = action.apply(null, args);\n      } catch (e) {\n        this._error(e);\n        return;\n      }\n      this._done(r);\n    };\n  }\n\n  _uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  _error(e) {\n    this._deferred.reject(e);\n    this.status = TASK_STATUS.ERROR;\n    this.emit('error', e);\n  }\n\n  _done(r) {\n    this._deferred.resolve(r);\n    this.status = TASK_STATUS.DONE;\n    this.emit('done', r);\n  }\n\n  _abort() {\n    this._deferred.resolve();\n    this.status = TASK_STATUS.ABORT;\n    this.emit('abort');\n  }\n}\n\nexport class WorkerTask extends Task {\n  constructor(action, ...args) {\n    super(action, ...args);\n  }\n\n  process(pool) {\n    if (this.status === TASK_STATUS.ABORT) {\n      this._abort();\n    }\n\n    this.action(pool);\n  }\n\n  _initAction(deferred, action, args) {\n    this.action = (pool) => {\n      pool\n        .run(action, args)\n        .error((e) => {\n          this._error(e);\n        })\n        .done((r) => {\n          this._done(r);\n        });\n    };\n  }\n}\n\nif (!window.perfomance || !window.perfomance.now) {\n  Date.now || (Date.now = function () {\n    return new this().getTime();\n  });\n\n  window.perfomance || (window.perfomance = {});\n\n  const offset = (window.perfomance.timing ||\n    (window.perfomance.timing = {})).navigatorStart ||\n    (window.perfomance.timing.navigatorStart = Date.now());\n\n  window.perfomance.now = function () {\n    return Date.now() - offset;\n  };\n}\n"],"sourceRoot":""}