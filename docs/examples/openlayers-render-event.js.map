{"version":3,"sources":["webpack:///./openlayers-render-event.js"],"names":["const","source1","ol","source","OSM","rasterTile1","layer","Tile","source2","rasterTile2","styleFunction","color","style","Style","image","Circle","radius","fill","stroke","Stroke","source3","Vector","features","format","GeoJSON","readFeatures","type","crs","properties","name","geometry","coordinates","getRandomCoordinates","vector1","console","log","source4","vector2","vectorTile","VectorTile","MVT","url","map","Map","layers","target","view","View","center","zoom","Math","random","document","querySelector","addEventListener","featureProjection","geojson","getSource","addFeatures","removeLayer","addLayer","refresh","getView","setZoom","getZoom","forEach","ref","context","on","ref$1","contextName","contextColor","typeColor","window","DEBUG"],"mappings":"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","file":"openlayers-render-event.js","sourcesContent":["const source1 = new ol.source.OSM();\nconst rasterTile1 = new ol.layer.Tile({\n  source: source1,\n});\n\nconst source2 = new ol.source.OSM();\nconst rasterTile2 = new ol.layer.Tile({\n  source: source2,\n});\n\nconst styleFunction = (color) => {\n  return new ol.style.Style({\n    image: new ol.style.Circle({\n      radius: 10,\n      fill: null,\n      stroke: new ol.style.Stroke({\n        color: color\n      })\n    })\n  });\n};\n\nconst source3 = new ol.source.Vector({\n  features: (new ol.format.GeoJSON()).readFeatures({\n    'type': 'FeatureCollection',\n    'crs': {\n      'type': 'name',\n      'properties': {\n        'name': 'EPSG:3857'\n      }\n    },\n    'features': [{\n      'type': 'Feature',\n      'geometry': {\n        'type': 'Point',\n        'coordinates': getRandomCoordinates()\n      }\n    }]\n  })\n});\n\nconst vector1 = new ol.layer.Vector({\n  source: source3,\n  style: () => {\n    console.log(`%cvector1`, `background-color: red; color: white`);\n    return styleFunction('magenta');\n  }\n});\n\nconst source4 = new ol.source.Vector({\n  features: (new ol.format.GeoJSON()).readFeatures({\n    'type': 'FeatureCollection',\n    'crs': {\n      'type': 'name',\n      'properties': {\n        'name': 'EPSG:3857'\n      }\n    },\n    'features': [{\n      'type': 'Feature',\n      'geometry': {\n        'type': 'Point',\n        'coordinates': getRandomCoordinates()\n      }\n    }]\n  })\n});\n\nconst vector2 = new ol.layer.Vector({\n  source: source4,\n  style: () => {\n    console.log(`%cvector2`, `background-color: red; color: white`);\n    return styleFunction('magenta');\n  }\n});\n\nconst vectorTile = new ol.layer.VectorTile({\n  source: new ol.source.VectorTile({\n    format: new ol.format.MVT(),\n    url: 'https://basemaps.arcgis.com/v1/arcgis/rest/services/World_Basemap/VectorTileServer/tile/{z}/{y}/{x}.pbf'\n  }),\n  style: () => {\n    console.log(`%cvectorTile`, `background-color: red; color: white`);\n    return styleFunction('red');\n  }\n});\n\nconst map = new ol.Map({\n  layers: [rasterTile1, rasterTile2, vectorTile, vector1],\n  target: 'map',\n  view: new ol.View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndocument\n  .querySelector('#add-feature')\n  .addEventListener('click', () => {\n    const format = new ol.format.GeoJSON({\n      featureProjection: 'EPSG:3857'\n    });\n    const geojson = {\n      'type': 'FeatureCollection',\n      'features': [{\n        'type': 'Feature',\n        'geometry': {\n          'type': 'Point',\n          'coordinates': [Math.random() * 360 - 180, Math.random() * 180 - 90]\n        }\n      }]\n    };\n    vector1.getSource().addFeatures(format.readFeatures(geojson));\n  });\n\ndocument\n  .querySelector('#add-feature')\n  .addEventListener('click', () => {\n    const format = new ol.format.GeoJSON({\n      featureProjection: 'EPSG:3857'\n    });\n    const geojson = {\n      'type': 'FeatureCollection',\n      'features': [{\n        'type': 'Feature',\n        'geometry': {\n          'type': 'Point',\n          'coordinates': getRandomCoordinates()\n        }\n      }]\n    };\n    vector1.getSource().addFeatures(format.readFeatures(geojson));\n  });\n\ndocument\n  .querySelector('#add-layer')\n  .addEventListener('click', () => {\n    map.removeLayer(vector2);\n    map.addLayer(vector2);\n  });\n\ndocument\n  .querySelector('#refresh-source')\n  .addEventListener('click', () => {\n    vector1.getSource().refresh();\n  });\n\ndocument\n  .querySelector('#set-zoom')\n  .addEventListener('click', () => {\n    map.getView().setZoom(map.getView().getZoom());\n  });\n\n// render event\n[\n  ['precompose', '#001f3f'],\n  ['postcompose', '#0074D9'],\n  ['render', '#7FDBFF'],\n  ['postrender', '#39CCCC'],\n  ['rendercomplete', '#3D9970'],\n  ['tileloadstart', '#2ECC40'],\n  ['tileloadend', '#01FF70'],\n  ['tileloaderror', '#FFDC00'],\n  // ['', '#FF851B'],\n  // ['', '#FF4136'],\n  // ['', '#85144b'],\n  // ['', '#F012BE'],\n  // ['', '#B10DC9'],\n  // ['', '#111111'],\n  // ['', '#AAAAAA'],\n  // ['', '#DDDDDD'],\n  // ['', '#FFFFFF'],\n].forEach(([type, typeColor]) => {\n  [\n    [map, 'map', '#0074D9'],\n    [rasterTile1, 'rasterTile1', '#7FDBFF'],\n    [rasterTile2, 'rasterTile2', '#01FF70'],\n    [vectorTile, 'vectorTile', '#39CCCC'],\n    [vector1, 'vector1', '#3D9970'],\n    [vector2, 'vector2', '#2ECC40'],\n    [source1, 'source1', '#FFDC00'],\n    [source2, 'source2', '#FF851B'],\n    [source3, 'source3', '#FF4136'],\n    [source4, 'source4', '#85144b'],\n    // [null, '', '#F012BE'],\n    // [null, '', '#B10DC9'],\n    // [null, '', '#AAAAAA'],\n    // [null, '', '#DDDDDD'],\n  ].forEach(([context, contextName, contextColor]) => {\n    context.on(type, function () {\n      log([contextName, contextColor], [type, typeColor]);\n    });\n  });\n});\n\nfunction log([contextName, contextColor], [type, typeColor]) {\n  console.log(`%c[${contextName}] %c${type}`, `color: ${contextColor}`, `color: ${typeColor}`);\n}\n\nfunction getRandomCoordinates() {\n  return [Math.random() * 360 - 180, Math.random() * 180 - 90];\n}\n\nwindow.DEBUG = {\n  map,\n  rasterTile1,\n  rasterTile2,\n  vectorTile,\n  vector1,\n  vector2\n};\n"],"sourceRoot":""}