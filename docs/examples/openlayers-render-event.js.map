{"version":3,"sources":["webpack:///./openlayers-render-event.js"],"names":["const","rasterTile1","ol","layer","Tile","source","OSM","rasterTile2","styleFunction","color","style","Style","image","Circle","radius","fill","stroke","Stroke","vector1","Vector","features","format","GeoJSON","readFeatures","type","crs","properties","name","geometry","coordinates","getRandomCoordinates","console","log","vector2","vectorTile","VectorTile","MVT","url","map","Map","layers","target","view","View","center","zoom","Math","random","document","querySelector","addEventListener","featureProjection","geojson","getSource","addFeatures","removeLayer","addLayer","refresh","getView","setZoom","getZoom","forEach","ref","context","on","ref$1","contextName","contextColor","typeColor","window","DEBUG"],"mappings":"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","file":"openlayers-render-event.js","sourcesContent":["const rasterTile1 = new ol.layer.Tile({\n  source: new ol.source.OSM()\n});\n\nconst rasterTile2 = new ol.layer.Tile({\n  source: new ol.source.OSM()\n});\n\nconst styleFunction = (color) => {\n  return new ol.style.Style({\n    image: new ol.style.Circle({\n      radius: 10,\n      fill: null,\n      stroke: new ol.style.Stroke({\n        color: color\n      })\n    })\n  });\n};\n\nconst vector1 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures({\n      'type': 'FeatureCollection',\n      'crs': {\n        'type': 'name',\n        'properties': {\n          'name': 'EPSG:3857'\n        }\n      },\n      'features': [{\n        'type': 'Feature',\n        'geometry': {\n          'type': 'Point',\n          'coordinates': getRandomCoordinates()\n        }\n      }]\n    })\n  }),\n  style: () => {\n    console.log(`%cvector1`, `background-color: red; color: white`);\n    return styleFunction('magenta');\n  }\n});\n\nconst vector2 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures({\n      'type': 'FeatureCollection',\n      'crs': {\n        'type': 'name',\n        'properties': {\n          'name': 'EPSG:3857'\n        }\n      },\n      'features': [{\n        'type': 'Feature',\n        'geometry': {\n          'type': 'Point',\n          'coordinates': getRandomCoordinates()\n        }\n      }]\n    })\n  }),\n  style: () => {\n    console.log(`%cvector2`, `background-color: red; color: white`);\n    return styleFunction('magenta');\n  }\n});\n\nconst vectorTile = new ol.layer.VectorTile({\n  source: new ol.source.VectorTile({\n    format: new ol.format.MVT(),\n    url: 'https://basemaps.arcgis.com/v1/arcgis/rest/services/World_Basemap/VectorTileServer/tile/{z}/{y}/{x}.pbf'\n  }),\n  style: () => {\n    console.log(`%cvectorTile`, `background-color: red; color: white`);\n    return styleFunction('red');\n  }\n});\n\nconst map = new ol.Map({\n  layers: [rasterTile1, rasterTile2, vectorTile, vector1],\n  target: 'map',\n  view: new ol.View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndocument\n  .querySelector('#add-feature')\n  .addEventListener('click', () => {\n    const format = new ol.format.GeoJSON({\n      featureProjection: 'EPSG:3857'\n    });\n    const geojson = {\n      'type': 'FeatureCollection',\n      'features': [{\n        'type': 'Feature',\n        'geometry': {\n          'type': 'Point',\n          'coordinates': [Math.random() * 360 - 180, Math.random() * 180 - 90]\n        }\n      }]\n    };\n    vector1.getSource().addFeatures(format.readFeatures(geojson));\n  });\n\ndocument\n  .querySelector('#add-feature')\n  .addEventListener('click', () => {\n    const format = new ol.format.GeoJSON({\n      featureProjection: 'EPSG:3857'\n    });\n    const geojson = {\n      'type': 'FeatureCollection',\n      'features': [{\n        'type': 'Feature',\n        'geometry': {\n          'type': 'Point',\n          'coordinates': getRandomCoordinates()\n        }\n      }]\n    };\n    vector1.getSource().addFeatures(format.readFeatures(geojson));\n  });\n\ndocument\n  .querySelector('#add-layer')\n  .addEventListener('click', () => {\n    map.removeLayer(vector2);\n    map.addLayer(vector2);\n  });\n\ndocument\n  .querySelector('#refresh-source')\n  .addEventListener('click', () => {\n    vector1.getSource().refresh();\n  });\n\ndocument\n  .querySelector('#set-zoom')\n  .addEventListener('click', () => {\n    map.getView().setZoom(map.getView().getZoom());\n  });\n\n// render event\n[\n  ['precompose', '#8be9fd'],\n  ['postcompose', '#50fa7b'],\n  ['render', '#ffb86c'],\n  ['postrender', '#ff79c6'],\n  ['rendercomplete', '#bd93f9'],\n  // ['', '#ff5555'],\n  // ['', '#f1fa8c'],\n].forEach(([type, typeColor]) => {\n  [\n    [map, 'map', '#0074D9'],\n    [rasterTile1, 'rasterTile1', '#7FDBFF'],\n    [rasterTile2, 'rasterTile2', '#01FF70'],\n    [vectorTile, 'vectorTile', '#39CCCC'],\n    [vector1, 'vector1', '#3D9970'],\n    [vector2, 'vector2', '#2ECC40'],\n    // [null, '', '#FFDC00'],\n    // [null, '', '#FF851B'],\n    // [null, '', '#FF4136'],\n    // [null, '', '#85144b'],\n    // [null, '', '#F012BE'],\n    // [null, '', '#B10DC9'],\n    // [null, '', '#AAAAAA'],\n    // [null, '', '#DDDDDD'],\n  ].forEach(([context, contextName, contextColor]) => {\n    context.on(type, function () {\n      log([contextName, contextColor], [type, typeColor]);\n    });\n  });\n});\n\nfunction log([contextName, contextColor], [type, typeColor]) {\n  console.log(`%c[${contextName}] %c${type}`, `color: ${contextColor}`, `color: ${typeColor}`);\n}\n\nfunction getRandomCoordinates() {\n  return [Math.random() * 360 - 180, Math.random() * 180 - 90];\n}\n\nwindow.DEBUG = {\n  map,\n  rasterTile1,\n  rasterTile2,\n  vectorTile,\n  vector1,\n  vector2\n};\n"],"sourceRoot":""}