{"version":3,"sources":["webpack:///./mapbox-sprites-canvas.js"],"names":["mapboxgl","accessToken","const","map","Map","container","style","center","zoom","spriteSheet","sprites","Promise","resolve","reject","loadedSprites","loadedSpriteSheet","Image","src","onload","Object","keys","forEach","name","push","spriteName","canvas","document","createElement","ctx","getContext","sprite","width","w","height","h","drawImage","x","y","getSprite","onerror","e","getSpritesFromCanvas","sprite01","sprite02","sprite03","sprite04","then","spritesCount","length","images","Array","i","ref","image","addImage","getImageData","features","type","geometry","coordinates","Math","random","properties","icon","addSource","data","addLayer","id","source","layout","icon-image","icon-size"],"mappings":"2EACAA,SAASC,YADG,6FAGZC,IAAMC,EAAM,IAAIH,SAASI,KACvBC,UAAW,MACXC,MAAO,oCACPC,QAAS,EAAG,GACZC,KAAM,KAgFR,SAA8BC,EAAaC,GACzC,OAAO,IAAIC,QAAO,SAAEC,EAASC,GAC3BX,IAAMY,KACAC,EAAoB,IAAIC,MAE9BD,EAAkBE,IAAMR,EACxBM,EAAkBG,OAAM,WACtBC,OACGC,KAAKV,GACLW,QAAO,SAACC,GACPR,EAAcS,MAAMD,EAU9B,SAAmBb,EAAaC,EAASc,GACvCtB,IAAMuB,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MACxBC,EAASpB,EAAQc,GASvB,OAPAC,EAAOM,MAAQD,EAAOE,EACtBP,EAAOQ,OAASH,EAAOI,EACvBN,EAAIO,UAAU1B,EACZqB,EAAOM,EAAGN,EAAOO,EAAGP,EAAOE,EAAGF,EAAOI,EACrC,EAAG,EAAGJ,EAAOE,EAAGF,EAAOI,GAGlBT,EAtB2Ba,CAAUvB,EAAmBL,EAASY,OAEpEV,EAAQE,IAEVC,EAAkBwB,QAAO,SAAGC,GAC1B3B,EAAO2B,OAjEbC,CAAqB,0BA1BnBC,UACEN,EAAG,EACHC,EAAG,EACHL,EAAG,GACHE,EAAG,IAELS,UACEP,EAAG,IACHC,EAAG,GACHL,EAAG,GACHE,EAAG,IAELU,UACER,EAAG,GACHC,EAAG,EACHL,EAAG,GACHE,EAAG,IAELW,UACET,EAAG,IACHC,EAAG,EACHL,EAAG,GACHE,EAAG,MAKJY,KAAI,SAACpC,GAIJ,IAFAR,IAAM6C,EAAerC,EAAQsC,OACvBC,EAAS,IAAIC,MAAMH,GAChBI,EAAI,EAAGA,EAAIJ,IAAgBI,EAAG,CACrC,IAAAC,EAAsB1C,EAAQyC,GAAvB7B,EAAA8B,EAAA,GAAMC,EAAAD,EAAA,GACPxB,EAAMyB,EAAMxB,WAAW,MAC7B1B,EAAImD,SAAShC,EAAMM,EAAI2B,aAAa,EAAG,EAAGF,EAAMtB,MAAOsB,EAAMpB,SAC7DgB,EAAOE,GAAK7B,EAOd,IAJApB,IACMsD,EAAW,IAAIN,MADA,KAIZC,EAAI,EAAGA,EAJK,MAIeA,EAClCK,EAASL,IACPM,KAAM,UACNC,UACED,KAAM,QACNE,aAAc,IAAUC,KAAKC,SAPvB,IAOuC,IAAUD,KAAKC,SANtD,KAQRC,YACEC,KAAMd,EAAOE,GAAKJ,EAAe,MAKvC5C,EAAI6D,UACF,UAEEP,KAAM,UACNQ,MACER,KAAM,oBACND,SAAUA,KAIhBrD,EAAI+D,UACFC,GAAM,SACNV,KAAQ,SACRW,OAAU,SACVC,QACEC,aAAc,SACdC,YAAa","file":"mapbox-sprites-canvas.js","sourcesContent":["const key = 'pk.eyJ1IjoiZWdhb25la28iLCJhIjoiY2pkYnJtdWg4N3Y0ejMzbzV2NHkzanJodCJ9.509Ns7trg6hi_lZKGyWzew';\nmapboxgl.accessToken = key;\n\nconst map = new mapboxgl.Map({\n  container: 'map',\n  style: 'mapbox://styles/mapbox/streets-v9',\n  center: [0, 0],\n  zoom: 1\n});\n\nconst sprites = {\n  'sprite01': {\n    x: 0,\n    y: 0,\n    w: 55,\n    h: 55\n  },\n  'sprite02': {\n    x: 110,\n    y: 86,\n    w: 55,\n    h: 55\n  },\n  'sprite03': {\n    x: 55,\n    y: 0,\n    w: 55,\n    h: 86\n  },\n  'sprite04': {\n    x: 212,\n    y: 0,\n    w: 44,\n    h: 44\n  }\n};\n\ngetSpritesFromCanvas('data/img/butterfly.png', sprites)\n  .then(sprites => {\n\n    const spritesCount = sprites.length;\n    const images = new Array(spritesCount);\n    for (let i = 0; i < spritesCount; ++i) {\n      const [name, image] = sprites[i];\n      const ctx = image.getContext('2d');\n      map.addImage(name, ctx.getImageData(0, 0, image.width, image.height));\n      images[i] = name;\n    }\n\n    const featureCount = 500;\n    const features = new Array(featureCount);\n    const lng = 180;\n    const lat = 90;\n    for (let i = 0; i < featureCount; ++i) {\n      features[i] = {\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: [2 * lng * Math.random() - lng, 2 * lat * Math.random() - lat],\n        },\n        properties: {\n          icon: images[i % (spritesCount - 1)]\n        }\n      };\n    }\n\n    map.addSource(\n      \"points\",\n      {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: features,\n        }\n      });\n\n    map.addLayer({\n      \"id\": \"points\",\n      \"type\": \"symbol\",\n      \"source\": \"points\",\n      \"layout\": {\n        \"icon-image\": \"{icon}\",\n        \"icon-size\": 1\n      }\n    });\n  });\n\nfunction getSpritesFromCanvas(spriteSheet, sprites) {\n  return new Promise((resolve, reject) => {\n    const loadedSprites = [];\n    const loadedSpriteSheet = new Image();\n\n    loadedSpriteSheet.src = spriteSheet;\n    loadedSpriteSheet.onload = () => {\n      Object\n        .keys(sprites)\n        .forEach(name => {\n          loadedSprites.push([name, getSprite(loadedSpriteSheet, sprites, name)]);\n        });\n      resolve(loadedSprites);\n    };\n    loadedSpriteSheet.onerror = e => {\n      reject(e);\n    }\n  });\n}\n\nfunction getSprite(spriteSheet, sprites, spriteName) {\n  const canvas = document.createElement('CANVAS');\n  const ctx = canvas.getContext('2d');\n  const sprite = sprites[spriteName];\n\n  canvas.width = sprite.w;\n  canvas.height = sprite.h;\n  ctx.drawImage(spriteSheet,\n    sprite.x, sprite.y, sprite.w, sprite.h,\n    0, 0, sprite.w, sprite.h\n  );\n\n  return canvas;\n}\n"],"sourceRoot":""}