{"version":3,"sources":["webpack:///../src/pg/math/vector3.js","webpack:///./utils/webgl/object-utils.js","webpack:///./webgl-particle-system.js"],"names":["Vector3","x","y","z","this","prototype","divide","scala","Error","cross","vector","const","length","Math","sqrt","normalize","__webpack_require__","d","__webpack_exports__","SphereObject","WallObject","Particle","_src_pg_math_vector3__WEBPACK_IMPORTED_MODULE_0__","properties","Object","assign","radius","position","velocity","acceleration","vboIndex","totalVelocity","startX","startY","endX","endY","slope","a","angle","atan2","color","random","abs","age","lifespan","size","update","r","_utils_webgl_object_utils__WEBPACK_IMPORTED_MODULE_0__","gl","canvas","container","glProgram","fragmentShader","vertexShader","vertexPositionAttribute","vertexColorAttribute","particles","positions","colors","pointLocationBuffer","pointColorBuffer","pMatrix","mat4","create","mvMatrix","normalMatrix","mat3","paused","NUM_PARTICLES","volume","document","querySelector","volumeLabel","changeParticleSize","value","innerHTML","setupParticles","makeShader","source","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","num","let","n","push","addEventListener","e","target","window","width","clientWidth","height","clientHeight","getContext","console","error","vsSource","fsSource","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","initShaders","pMatrixUniform","getUniformLocation","mvMatrixUniform","getAttribLocation","enableVertexAttribArray","createBuffer","animLoop","clearColor","clear","COLOR_BUFFER_BIT","enable","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","viewport","perspective","identity","translate","invertedMatrix","fromMat4","invert","transpose","setupWebGL","adjustParticles","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","itemSize","numItems","uniformMatrix4fv","vertexAttribPointer","FLOAT","drawArrays","POINTS","requestAnimationFrame","evt","keyCode"],"mappings":"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","file":"webgl-particle-system.js","sourcesContent":["/**\n * @module pg/math/vector3\n */\n\n/**\n * @classdesc\n * Vector 3D\n *\n * @api\n */\n\nexport default class Vector3 {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  /**\n   * Divide by number\n   * @param {number} scala number for dividing\n   * @return {Vector3} this\n   * @api\n   */\n  divide(scala) {\n    if (typeof scala !== 'number') {\n      throw new Error(`invalid input: ${scala}`);\n    }\n\n    this.x /= scala;\n    this.y /= scala;\n    this.z /= scala;\n\n    return this;\n  }\n\n  /**\n   * Get crossed vector.\n   * @param {Vector3} vector vector for cross\n   * @return {Vector3} this\n   * @api\n   */\n  cross(vector) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    if (!(vector instanceof Vector3)) {\n      throw new Error(`invalid input: ${vector}`);\n    }\n\n    this.x = y * vector.z - z * vector.y;\n    this.y = z * vector.x - x * vector.z;\n    this.z = x * vector.y - y * vector.x;\n  }\n\n  /**\n   * Get length of vector.\n   * @return {number} length\n   * @api\n   */\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  /**\n   * Get normalized vector\n   * @return {Vector3} normalized vector\n   * @api\n   */\n  normalize() {\n    return this.divide(this.length());\n  }\n}\n","import Vector3 from \"../../../src/pg/math/vector3\";\n\nexport class SphereObject {\n  constructor(properties) {\n    properties = Object.assign({}, {\n      radius: 1.0,\n      position: new Vector3(0.0, 0.0, 0.0),\n      velocity: new Vector3(0.0, 0.0, 0.0),\n      acceleration: new Vector3(0.0, 0.0, 0.0),\n    }, properties);\n\n    this.radius = properties.radius;\n    this.position = properties.position;\n    this.velocity = properties.velocity;\n    this.acceleration = properties.acceleration;\n    this.vboIndex = properties.vboIndex;\n    this.totalVelocity = 0.0;\n  }\n}\n\nexport class WallObject {\n  constructor(properties) {\n    properties = Object.assign({}, {\n      startX: 0.0,\n      startY: 0.0,\n      endX: 0.0,\n      endY: 0.0,\n    }, properties);\n\n    this.slope = 0.0;\n    if (\n      (properties.endX - properties.startX) > 0.0001 ||\n      (properties.endX - properties.startX) < -0.001\n    ) {\n      this.slope = (properties.endY - properties.startY) / (properties.endX - properties.startX);\n    }\n    this.startX = properties.startX;\n    this.startY = properties.startY;\n    this.endX = properties.endX;\n    this.endY = properties.endY;\n\n    const a = [properties.startX - properties.endX, properties.startY - properties.endY];\n    this.angle = 0.0;\n    this.angle = Math.atan2(a[1], a[0]);\n  }\n}\n\nexport class Particle {\n  constructor(\n    position = [\n      ((Math.random() - .5) * .1),\n      ((Math.random() - .5) * .1),\n      ((Math.random() - .5) * .1),\n    ],\n    color = [1.0, 0.0, 0.0, 0.5]\n  ) {\n\n    this.position = position;\n    this.color = color;\n\n    this.velocity = [\n      ((Math.random() - .5) * .1),\n      ((Math.random() - .5) * .1),\n      ((Math.random() - .5) * .1),\n    ];\n    if (\n      (Math.abs(this.velocity[0]) < 0.01) &&\n      (Math.abs(this.velocity[1]) < 0.01) &&\n      (Math.abs(this.velocity[2]) < 0.01)\n    ) {\n      //ensure particle is not stagnant\n      this.velocity[0] = 0.1;\n    }\n    this.age = 0;\n    this.lifespan = 20;\n    this.size = 1.0;\n  }\n\n  update() {\n    this.position[0] += (0.1 * this.velocity[0]);\n    this.position[1] += (0.1 * this.velocity[1]);\n    this.position[2] += (0.1 * this.velocity[2]);\n\n    const x = Math.abs(this.position[0]);\n    const y = Math.abs(this.position[1]);\n    const z = Math.abs(this.position[2]);\n\n    const distance = x * x + y * y + z * z;\n\n    if (distance > 4) {\n      this.position = [\n        (Math.random() * 2.0) - 1.0,\n        (Math.random() * 2.0) - 1.0,\n        (Math.random() * 2.0) - 1.0\n      ];\n      this.velocity = [\n        (Math.random() * 2.0) - 1.0,\n        (Math.random() * 2.0) - 1.0,\n        (Math.random() * 2.0) - 1.0\n      ];\n      if (this.age < 10) {\n        this.color = [1.0, 1.0, 1.0, 0.75];\n      } else if (this.age < this.lifespan) {\n        this.color = [0.0, 0.0, 1.0, 0.75];\n      } else {\n        this.color = [1.0, 1.0, 1.0, 0.0];\n      }\n      this.age++;\n    }\n  }\n}\n","import { Particle } from './utils/webgl/object-utils';\n\nlet gl = null;\nlet canvas = null;\nlet container = null;\nlet glProgram = null;\nlet fragmentShader = null;\nlet vertexShader = null;\n\nlet vertexPositionAttribute = null;\nlet vertexColorAttribute = null;\nlet particles = [];\nlet positions = [];\nlet colors = [];\n\nlet pointLocationBuffer = null;\nlet pointColorBuffer = null;\n\nlet pMatrix = mat4.create();\nlet mvMatrix = mat4.create();\nlet normalMatrix = mat3.create();\n\nlet paused = false;\n\nlet NUM_PARTICLES = 10000;\n\nconst volume = document.querySelector('#volume');\nconst volumeLabel = document.querySelector('#volume_label');\n\nvolume.value = NUM_PARTICLES;\nchangeParticleSize(NUM_PARTICLES);\n\nvolume.addEventListener('change', (e) => {\n  changeParticleSize(e.target.value);\n});\n\nfunction changeParticleSize(value) {\n  NUM_PARTICLES = value;\n  volumeLabel.innerHTML = value;\n\n  setupParticles(NUM_PARTICLES);\n}\n\nwindow.addEventListener('load', initWebGL);\ndocument.addEventListener('keyup', (evt) => {\n  switch (evt.keyCode) {\n    case 80: // 'p'\n      paused = !paused;\n      break;\n  }\n});\n\nfunction initWebGL() {\n  canvas = document.querySelector('#canvas');\n  container = document.querySelector('#container');\n  canvas.width = container.clientWidth;\n  canvas.height = container.clientHeight;\n\n  try {\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n  } catch (e) {\n    console.error(e);\n  }\n\n  if (gl) {\n    initShaders();\n    setupParticles(NUM_PARTICLES);\n    getMatrixUniforms();\n\n    vertexPositionAttribute = gl.getAttribLocation(glProgram, 'aVertexPosition');\n    vertexColorAttribute = gl.getAttribLocation(glProgram, 'aVertexColor');\n    gl.enableVertexAttribArray(vertexPositionAttribute);\n    gl.enableVertexAttribArray(vertexColorAttribute);\n\n    pointLocationBuffer = gl.createBuffer();\n    pointColorBuffer = gl.createBuffer();\n\n    (function animLoop() {\n\n      if (!paused) {\n        setupWebGL();\n\n        adjustParticles();\n        setBufferData();\n        setMatrixUniforms();\n        drawScene();\n      }\n\n      requestAnimationFrame(animLoop);\n    })();\n  }\n}\n\nfunction setupWebGL() {\n  // set the clear color to a shade of green\n  gl.clearColor(0.1, 0.1, 0.1, 1.0);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n  gl.enable(gl.DEPTH_TEST);\n  gl.enable(gl.BLEND);\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  mat4.perspective(pMatrix, 45, canvas.width / canvas.height, 0.1, 100.0);\n  mat4.identity(mvMatrix);\n  mat4.translate(mvMatrix, mvMatrix, [0.0, 0.0, -4.0]);\n\n  const invertedMatrix = mat3.create();\n  mat3.fromMat4(invertedMatrix, mvMatrix);\n  mat3.invert(normalMatrix, invertedMatrix);\n  mat3.transpose(normalMatrix, normalMatrix);\n}\n\nfunction initShaders() {\n  // get shader source\n  const vsSource = vertexShaderSource();\n  const fsSource = fragmentShaderSource();\n\n  // compile shaders\n  vertexShader = makeShader(vsSource, gl.VERTEX_SHADER);\n  fragmentShader = makeShader(fsSource, gl.FRAGMENT_SHADER);\n\n  // create program\n  glProgram = gl.createProgram();\n\n  // attach and link shaders to the program\n  gl.attachShader(glProgram, vertexShader);\n  gl.attachShader(glProgram, fragmentShader);\n  gl.linkProgram(glProgram);\n\n  if (!gl.getProgramParameter(glProgram, gl.LINK_STATUS)) {\n    alert('Unable to initialize the shader program.');\n  }\n\n  // use program\n  gl.useProgram(glProgram);\n}\n\nfunction makeShader(source, type) {\n  // compile the shader\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert(`Error compiling shader: ${gl.getShaderInfoLog(shader)}`);\n  }\n\n  return shader;\n}\n\nfunction vertexShaderSource() {\n  return `\n    attribute vec3 aVertexPosition;\n    attribute vec4 aVertexColor;\n\n    uniform mat4 uPMatrix;\n    uniform mat4 uMVMatrix;\n\n    varying vec4 color;\n\n    void main(void) {\n      color = aVertexColor;\n      gl_PointSize = 3.0;\n      gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition.xyz, 1.0);\n    }\n  `;\n}\n\nfunction fragmentShaderSource() {\n  return `\n    varying highp vec4 color;\n\n    void main(void) {   \n      gl_FragColor = color;\n    }\n  `;\n}\n\nfunction drawScene() {\n  gl.bindBuffer(gl.ARRAY_BUFFER, pointLocationBuffer);\n  gl.vertexAttribPointer(vertexPositionAttribute, 3, gl.FLOAT, false, 0, 0);\n  gl.bindBuffer(gl.ARRAY_BUFFER, pointColorBuffer);\n  gl.vertexAttribPointer(vertexColorAttribute, 4, gl.FLOAT, false, 0, 0);\n  gl.drawArrays(gl.POINTS, 0, positions.length / 3);\n}\n\nfunction getMatrixUniforms() {\n  glProgram.pMatrixUniform = gl.getUniformLocation(glProgram, 'uPMatrix');\n  glProgram.mvMatrixUniform = gl.getUniformLocation(glProgram, 'uMVMatrix');\n}\n\nfunction setMatrixUniforms() {\n  gl.uniformMatrix4fv(glProgram.pMatrixUniform, false, pMatrix);\n  gl.uniformMatrix4fv(glProgram.mvMatrixUniform, false, mvMatrix);\n}\n\nfunction setupParticles(num) {\n  particles = [];\n  for (let n = 0; n < num; ++n) {\n    particles[n] = new Particle();\n  }\n\n  positions = [];\n  for (let n = 0; n < particles.length; ++n) {\n    positions.push(particles[n].position[0]);\n    positions.push(particles[n].position[1]);\n    positions.push(particles[n].position[2]);\n  }\n\n  colors = [];\n  for (let n = 0; n < particles.length; ++n) {\n    colors.push(particles[n].color[0]);\n    colors.push(particles[n].color[1]);\n    colors.push(particles[n].color[2]);\n    colors.push(particles[n].color[3]);\n  }\n}\n\nfunction adjustParticles() {\n  for (let n = 0; n < particles.length; ++n) {\n    particles[n].update();\n  }\n\n  positions = [];\n  for (let n = 0; n < particles.length; ++n) {\n    positions.push(particles[n].position[0]);\n    positions.push(particles[n].position[1]);\n    positions.push(particles[n].position[2]);\n  }\n\n  colors = [];\n  for (let n = 0; n < particles.length; ++n) {\n    colors.push(particles[n].color[0]);\n    colors.push(particles[n].color[1]);\n    colors.push(particles[n].color[2]);\n    colors.push(particles[n].color[3]);\n  }\n}\n\nfunction setBufferData() {\n  gl.bindBuffer(gl.ARRAY_BUFFER, pointLocationBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n  pointLocationBuffer.itemSize = 3;\n  pointLocationBuffer.numItems = positions.length / 3;\n  gl.bindBuffer(gl.ARRAY_BUFFER, pointColorBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\n  pointColorBuffer.itemSize = 4;\n  pointColorBuffer.numItems = colors.length / 4;\n}\n"],"sourceRoot":""}