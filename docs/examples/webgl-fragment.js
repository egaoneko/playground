(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{49:function(n,e){var i=null,t=null,o=null,r=null,a=null,c=null,l=null,v=null,g=null,h={circle:{vertexShader:"\n    attribute vec3 aVertexPosition;\n    varying vec2 position;\n    \n    void main(void) {\n      position = vec2(aVertexPosition.xy);\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  ",fragmentShader:"\n    varying highp vec2 position;\n    \n    void main(void) {   \n      highp float d = length(position);\n      gl_FragColor = vec4(max(0.0, 1.0 - d), 0.0, 0.0, 1.0);\n    }\n  "},circle_floor:{vertexShader:"\n    attribute vec3 aVertexPosition;\n    varying vec2 position;\n    \n    void main(void) {\n      position = vec2(aVertexPosition.xy);\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  ",fragmentShader:"\n    varying highp vec2 position;\n    \n    void main(void) {   \n      highp float d = length(position);\n      highp float c = floor(d*10.0) * 0.1;\n      gl_FragColor = vec4(max(0.0, 1.0 - c), 0.0, 0.0, 1.0);\n    }\n  "},circle_uniform_1:{vertexShader:"\n    attribute vec3 aVertexPosition;\n    varying vec2 position;\n    \n    void main(void) {\n      position = vec2(aVertexPosition.xy);\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  ",fragmentShader:"\n    uniform sampler2D sColors;\n    varying highp vec2 position;\n    \n    void main(void) {   \n      highp float t = length(position);\n      gl_FragColor = vec4(texture2D(sColors, vec2(0.0, t)).rgb, 1.0);\n    }\n  "},circle_uniform_2:{vertexShader:"\n    attribute vec3 aVertexPosition;\n    varying vec2 position;\n    \n    void main(void) {\n      position = vec2(aVertexPosition.xy);\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  ",fragmentShader:"\n    uniform sampler2D sColors;\n    varying highp vec2 position;\n    \n    void main(void) {   \n      highp float t = length(position);\n      highp float x = sin(-position.y) * tan(length(position.xx));\n      t = t + x;\n      gl_FragColor = mix( vec4(0.0, 0.0, 0.0, 1.0), vec4(texture2D(sColors, vec2(0.0, t)).rgb, 1.0), t);\n    }\n  "},mandelbrot:{vertexShader:"\n    attribute vec3 aVertexPosition;\n    varying vec2 position;\n    \n    void main(void) {\n      position = vec2(aVertexPosition.xy);\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  ",fragmentShader:"\n    varying highp vec2 position;\n    const int MAX_ITERATIONS = 250;\n    const highp float LIGHTNESS_FACTOR = 10.0;\n    \n    void main(void) {   \n      highp vec2 c = vec2(position.x - 0.5, position.y); \n      highp vec2 z = c;\n      \n      highp vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\n      \n      for (int i = 0; i < MAX_ITERATIONS; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        \n        if (dot(z, z) > 4.0) {\n          highp float f = LIGHTNESS_FACTOR * float(i) / float(MAX_ITERATIONS);\n          color = vec4(vec3(0.1, 0.1, 1.0) * f , 1.0);\n          break;\n        }\n      }\n      gl_FragColor = color;\n    }\n  "}},s=document.querySelectorAll('input[type=radio][name="fragment"]');function d(){i.deleteProgram(r),E(this.value)}function E(n){(function(n,e){var t=h[e].vertexShader,o=h[e].fragmentShader;c=p(t,i.VERTEX_SHADER),a=p(o,i.FRAGMENT_SHADER),i.attachShader(n,c),i.attachShader(n,a),i.linkProgram(n),i.getProgramParameter(n,i.LINK_STATUS)||alert("Unable to initialize the shader program.")})(r=i.createProgram(),n),i.useProgram(r)}function p(n,e){var t=i.createShader(e);return i.shaderSource(t,n),i.compileShader(t),i.getShaderParameter(t,i.COMPILE_STATUS)||alert("Error compiling shader: "+i.getShaderInfoLog(t)),t}window.addEventListener("load",function(){t=document.querySelector("#canvas"),o=document.querySelector("#container"),t.width=o.clientWidth,t.height=o.clientHeight;try{i=t.getContext("webgl")||t.getContext("experimental-webgl")}catch(n){console.error(n)}i&&(E("circle"),function(n){void 0===n&&(n=2);var e=[0,0,0,-n/2,-n/2,0,n/2,-n/2,0,n/2,n/2,0,-n/2,n/2,0],t=[0,1,2,0,2,3,0,3,4,0,4,1];v=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,v),i.bufferData(i.ARRAY_BUFFER,new Float32Array(e),i.STATIC_DRAW),v.itemSize=3,v.numItems=e.length/3,g=i.createBuffer(),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,g),i.bufferData(i.ELEMENT_ARRAY_BUFFER,new Uint16Array(t),i.STREAM_DRAW),g.itemSize=3,g.numItems=t.length}(),function(){var n=new Uint8Array([255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255]),e=i.createTexture();i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,e),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,4,4,0,i.RGBA,i.UNSIGNED_BYTE,n),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.uniform1i(i.getUniformLocation(r,"sColors"),e)}(),l=i.getAttribLocation(r,"aVertexPosition"),i.enableVertexAttribArray(l),function n(){i.clearColor(.7,.7,.7,1),i.clear(i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT),i.enable(i.DEPTH_TEST),i.viewport(0,0,t.width,t.height),i.bindBuffer(i.ARRAY_BUFFER,v),i.vertexAttribPointer(l,3,i.FLOAT,!1,0,0),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,g),i.drawElements(i.TRIANGLES,g.numItems,i.UNSIGNED_SHORT,0),requestAnimationFrame(n)}())}),Array.prototype.forEach.call(s,function(n){n.addEventListener("change",d)})}},[[49,0]]]);
//# sourceMappingURL=webgl-fragment.js.map