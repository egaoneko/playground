{"version":3,"sources":["webpack:///./utils/software-rendering/math/vector4.js","webpack:///./utils/software-rendering/math/vector3.js","webpack:///./utils/software-rendering/math/matrix4.js","webpack:///./utils/software-rendering/projection/projection.js","webpack:///./utils/software-rendering/renderer.js","webpack:///./utils/software-rendering/model.js","webpack:///./utils/software-rendering/projection/perspective-projection.js","webpack:///./utils/software-rendering/projection/orthographic-projection.js","webpack:///./software-rendering.js"],"names":["Vector4","create","const","out","Float32Array","fromValues","x","y","z","w","transformMat4","a","m","perspectiveDivision","vector4","Vector3","Matrix4","multiply","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","perspective","fovy","aspect","near","far","let","nf","f","Math","tan","Infinity","orthographic","left","right","bottom","top","lr","bt","projection_Projection","this","_matrix","matrix4","prototype","getMatrix","renderer_Renderer","container","document","querySelector","HTMLElement","_initCanvas","models","_scale","vector3","_rotate","_position","_projection","projection","updateViewMatrix","prototypeAccessors","width","get","_width","height","_height","scale","set","rotate","position","viewMatrix","_viewMatrix","matrix","render","appendChild","model","push","clearRenderer","ctx","clearRect","Array","isArray","forEach","renderModel","vertices","vMatrix","pMatrix","map","vertex","cc","console","log","ndc","ndcX","ndcY","ndcZ","h","n","beginPath","arc","PI","stroke","indexes","length","i","p1","p2","p3","moveTo","lineTo","clientWidth","clientHeight","canvas","createElement","getContext","viewMarix","scaleMatrix","positionMatrix","vectors","Projection","PerspectiveProjection","super","setMatrix","OrthographicProjection","software_rendering_renderer","renderer","software_rendering_model_0","software_rendering_model","perspective_projection","orthographic_projection","f1","dat","GUI","addFolder","add","onFinishChange","value","open"],"mappings":"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","file":"software-rendering.js","sourcesContent":["export default class Vector4 {\n  static create() {\n    const out = new Float32Array(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n  }\n\n  static fromValues(x, y, z, w) {\n    const out = new Float32Array(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n\n  static transformMat4(out, a, m) {\n    const x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n  }\n\n  static perspectiveDivision(out, vector4) {\n    const [x, y, z, w] = vector4;\n    out[0] = x / w;\n    out[1] = y / w;\n    out[2] = z / w;\n    return out;\n  }\n}","export default class Vector3 {\n  static create() {\n    const out = new Float32Array(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n  }\n\n  static fromValues(x, y, z) {\n    const out = new Float32Array(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n  }\n}","export default class Matrix4 {\n  static create() {\n    const out = new Float32Array(16);\n    out[0] = 1;\n    out[5] = 1;\n    out[10] = 1;\n    out[15] = 1;\n    return out;\n  }\n\n  static multiply(out, a, b) {\n    const a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n    const a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n    const a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n    const a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n    const b00 = b[0],\n      b01 = b[1],\n      b02 = b[2],\n      b03 = b[3];\n    const b10 = b[4],\n      b11 = b[5],\n      b12 = b[6],\n      b13 = b[7];\n    const b20 = b[8],\n      b21 = b[9],\n      b22 = b[10],\n      b23 = b[11];\n    const b30 = b[12],\n      b31 = b[13],\n      b32 = b[14],\n      b33 = b[15];\n\n    out[0] = a00 * b00 + a01 * b10 + a02 * b20 + a03 * b30;\n    out[1] = a00 * b01 + a01 * b11 + a02 * b21 + a03 * b31;\n    out[2] = a00 * b02 + a01 * b12 + a02 * b22 + a03 * b32;\n    out[3] = a00 * b03 + a01 * b13 + a02 * b23 + a03 * b33;\n\n    out[4] = a10 * b00 + a11 * b10 + a12 * b20 + a13 * b30;\n    out[5] = a10 * b01 + a11 * b11 + a12 * b21 + a13 * b31;\n    out[6] = a10 * b02 + a11 * b12 + a12 * b22 + a13 * b32;\n    out[7] = a10 * b03 + a11 * b13 + a12 * b23 + a13 * b33;\n\n    out[8] = a20 * b00 + a21 * b10 + a22 * b20 + a23 * b30;\n    out[9] = a20 * b01 + a21 * b11 + a22 * b21 + a23 * b31;\n    out[10] = a20 * b02 + a21 * b12 + a22 * b22 + a23 * b32;\n    out[11] = a20 * b03 + a21 * b13 + a22 * b23 + a23 * b33;\n\n    out[12] = a30 * b00 + a31 * b10 + a32 * b20 + a33 * b30;\n    out[13] = a30 * b01 + a31 * b11 + a32 * b21 + a33 * b31;\n    out[14] = a30 * b02 + a31 * b12 + a32 * b22 + a33 * b32;\n    out[15] = a30 * b03 + a31 * b13 + a32 * b23 + a33 * b33;\n\n    return out;\n  }\n\n  static perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf;\n\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n\n    if (far != null && far !== Infinity) {\n      nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = (2 * far * near) * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n\n    return out;\n  }\n\n  static orthographic(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n\n    return out;\n  }\n}","import Matrix4 from '../math/matrix4';\n\nexport default class Projection {\n  constructor() {\n    this._matrix = Matrix4.create();\n  }\n\n  getMatrix() {\n    return this._matrix;\n  }\n}","import Vector4 from './math/vector4';\nimport Vector3 from './math/vector3';\nimport Matrix4 from './math/matrix4';\nimport Projection from './projection/projection';\n\nexport default class Renderer {\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  get scale() {\n    return this._scale;\n  }\n\n  set scale(scale) {\n    this._scale = scale;\n    this.updateViewMatrix();\n  }\n\n  get rotate() {\n    return this._rotate;\n  }\n\n  set rotate(rotate) {\n    this._rotate = rotate;\n    this.updateViewMatrix();\n  }\n\n  get position() {\n    return this._position;\n  }\n\n  set position(position) {\n    this._position = position;\n    this.updateViewMatrix();\n  }\n\n  get viewMatrix() {\n    return this._viewMatrix;\n  }\n\n  set viewMatrix(matrix) {\n    this._viewMatrix = matrix;\n  }\n\n  get projection() {\n    return this._projection;\n  }\n\n  set projection(projection) {\n    this._projection = projection;\n    this.render();\n  }\n\n  constructor(container) {\n    if (typeof container === 'string') {\n      container = document.querySelector(`#${container}`);\n    }\n\n    if (!(container instanceof HTMLElement)) {\n      throw 'Container must be HTMLElment';\n    }\n\n    this._initCanvas(container);\n    this.x = 0;\n    this.y = 0;\n    this.near = 0;\n    this.far = 1;\n    this.models = [];\n    this._scale = Vector3.fromValues(1, 1, 1);\n    this._rotate = Vector3.create();\n    this._position = Vector3.create();\n    this._projection = new Projection();\n    this.updateViewMatrix();\n  }\n\n  appendChild(model) {\n    this.models.push(model);\n    this.render();\n  }\n\n  clearRenderer() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  render() {\n    this.clearRenderer();\n\n    if (!Array.isArray(this.models)) {\n      return;\n    }\n\n    this.models.forEach(model => this.renderModel(model));\n  }\n\n  renderModel(model) {\n    if (!model || !model.vertices) {\n      return;\n    }\n\n    const vMatrix = this.viewMatrix;\n    const pMatrix = this.projection.getMatrix();\n\n    const matrix = Matrix4.create();\n    Matrix4.multiply(matrix, vMatrix, matrix);\n    Matrix4.multiply(matrix, pMatrix, matrix);\n\n    const vertices = model.vertices.map(vertex => {\n      const cc = Vector4.transformMat4(Vector4.create(), vertex, model.matrix);\n      console.log(cc);\n      console.log(matrix)\n      Vector4.transformMat4(cc, cc, matrix);\n      console.log(cc);\n\n      const ndc = Vector4.perspectiveDivision(Vector3.create(), cc);\n      const [ndcX, ndcY, ndcZ] = ndc;\n      const x = this.x;\n      const y = this.y;\n      const w = this.width;\n      const h = this.height;\n      const n = this.near;\n      const f = this.far;\n\n      return Vector3.fromValues(\n        w * 0.5 * ndcX + (x + w * 0.5),\n        h - (h * 0.5 * ndcY + (y + h * 0.5)),\n        (f - n) * 0.5 * ndcZ + (f + n) * 0.5\n      );\n    });\n\n    console.log(vertices);\n\n    vertices.forEach(vertex => {\n      this.ctx.beginPath();\n      this.ctx.arc(vertex[0], vertex[1], 5, 0, Math.PI * 2, true);\n      this.ctx.stroke();\n    });\n\n    if (!model.indexes) {\n      return;\n    }\n\n    const indexes = model.indexes;\n    const length = indexes.length;\n\n    for (let i = 0; i < length; i += 3) {\n      const p1 = vertices[indexes[i]];\n      const p2 = vertices[indexes[i + 1]];\n      const p3 = vertices[indexes[i + 2]];\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(p1[0], p1[1]);\n      this.ctx.lineTo(p2[0], p2[1]);\n      this.ctx.lineTo(p3[0], p3[1]);\n      this.ctx.lineTo(p1[0], p1[1]);\n      this.ctx.stroke();\n    }\n  }\n\n  _initCanvas(container) {\n    this._width = container.clientWidth;\n    this._height = container.clientHeight;\n    const canvas = document.createElement('canvas');\n    canvas.width = this.width;\n    canvas.height = this.height;\n\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n\n    container.appendChild(canvas);\n  }\n\n  updateViewMatrix() {\n    const viewMarix = Matrix4.create();\n\n    const scaleMatrix = Matrix4.create();\n    scaleMatrix[0] = this.scale[0];\n    scaleMatrix[5] = this.scale[1];\n    scaleMatrix[10] = this.scale[2];\n    this.viewMatrix = Matrix4.multiply(viewMarix, scaleMatrix, viewMarix);\n\n    const positionMatrix = Matrix4.create();\n    positionMatrix[3] = this.position[0];\n    positionMatrix[7] = this.position[1];\n    positionMatrix[11] = this.position[2];\n    this.viewMatrix = Matrix4.multiply(viewMarix, positionMatrix, viewMarix);\n\n    this.render();\n  }\n}\n","import Vector4 from './math/vector4';\nimport Matrix4 from './math/matrix4';\n\nexport default class Model {\n  constructor(vertices, indexes) {\n    const vectors = [];\n    const length = vertices.length;\n\n    for (let i = 0; i < length; i += 3) {\n      const x = vertices[i];\n      const y = vertices[i + 1];\n      const z = vertices[i + 2];\n      vectors.push(Vector4.fromValues(x, y, z, 1));\n    }\n\n    this.vertices = vectors;\n    this.indexes = indexes;\n    this.matrix = Matrix4.create();\n  }\n}","import Projection from './projection';\nimport Matrix4 from '../math/matrix4';\n\nexport default class PerspectiveProjection extends Projection {\n  constructor(fovy, aspect, near, far) {\n    super();\n    this.setMatrix(fovy, aspect, near, far);\n  }\n\n  setMatrix(fovy, aspect, near, far) {\n    Matrix4.perspective(this._matrix, fovy, aspect, near, far);\n  }\n}\n","import Projection from './projection';\nimport Matrix4 from '../math/matrix4';\n\nexport default class OrthographicProjection extends Projection {\n  constructor(left, right, bottom, top, near, far) {\n    super();\n    this.setMatrix(left, right, bottom, top, near, far);\n  }\n\n  setMatrix(left, right, bottom, top, near, far) {\n    Matrix4.orthographic(this._matrix, left, right, bottom, top, near, far);\n  }\n}\n","import Renderer from './utils/software-rendering/renderer';\nimport Model from './utils/software-rendering/model';\nimport Vector3 from './utils/software-rendering/math/vector3';\nimport PerspectiveProjection from './utils/software-rendering/projection/perspective-projection';\nimport OrthographicProjection from './utils/software-rendering/projection/orthographic-projection';\n\nconst renderer = new Renderer('container');\nconst model = new Model(\n  [\n    0.5, 0,  0,\n    0, 0.5,  0,\n    -0.5, 0,  0,\n    0, -0.5,  0,\n    0.5, 0.5,  0,\n    0.5, -0.5,  0,\n    -0.5, -0.5,  0,\n    -0.5, 0.5,  0,\n\n    0.5, 0,  0.5,\n    0, 0.5,  0.5,\n    -0.5, 0,  0.5,\n    0, -0.5,  0.5,\n    0.5, 0.5,  0.5,\n    0.5, -0.5,  0.5,\n    -0.5, -0.5,  0.5,\n    -0.5, 0.5,  0.5,\n\n    0.5, 0,  -0.5,\n    0, 0.5,  -0.5,\n    -0.5, 0,  -0.5,\n    0, -0.5,  -0.5,\n    0.5, 0.5,  -0.5,\n    0.5, -0.5,  -0.5,\n    -0.5, -0.5,  -0.5,\n    -0.5, 0.5,  -0.5,\n    // // 앞면(Front face)\n    // -0.5, -0.5,  0.5,\n    // 0.5, -0.5,  0.5,\n    // 0.5,  0.5,  0.5,\n    // -0.5,  0.5,  0.5,\n    \n    // // 뒤면(Back face)\n    // -0.5, -0.5, -0.5,\n    // -0.5,  0.5, -0.5,\n    // 0.5,  0.5, -0.5,\n    // 0.5, -0.5, -0.5,\n    \n    // // 위면(Top face)\n    // -0.5,  0.5, -0.5,\n    // -0.5,  0.5,  0.5,\n    // 0.5,  0.5,  0.5,\n    // 0.5,  0.5, -0.5,\n    \n    // // 아래면(Bottom face)\n    // -0.5, -0.5, -0.5,\n    // 0.5, -0.5, -0.5,\n    // 0.5, -0.5,  0.5,\n    // -0.5, -0.5,  0.5,\n    \n    // // 오른쪽면(Right face)\n    // 0.5, -0.5, -0.5,\n    // 0.5,  0.5, -0.5,\n    // 0.5,  0.5,  0.5,\n    // 0.5, -0.5,  0.5,\n      \n    // // 왼쪽면(Left face)\n    // -0.5, -0.5, -0.5,\n    // -0.5, -0.5,  0.5,\n    // -0.5,  0.5,  0.5,\n    // -0.5,  0.5, -0.5\n  ],\n  // [\n  //   0,  1,  2,      0,  2,  3,    // front\n  //   4,  5,  6,      4,  6,  7,    // back\n  //   8,  9,  10,     8,  10, 11,   // top\n  //   12, 13, 14,     12, 14, 15,   // bottom\n  //   16, 17, 18,     16, 18, 19,   // right\n  //   20, 21, 22,     20, 22, 23    // left\n  // ],\n  // [\n  //   8,  9,  10,\n  // ]\n);\n\nconst perspective = new PerspectiveProjection(45, renderer.width / renderer.height, 0.1, 100.0);\nconst orthographic = new OrthographicProjection(-1.0, 1.0, -1.0, 1.0, 0.1, 100.0);\n\n// renderer.scale = Vector3.fromValues(0.5, 0.5, 0.5);\nrenderer.position = Vector3.fromValues(0, 0, -10);\n\nrenderer.projection = perspective;\n// renderer.projection = orthographic;\nrenderer.appendChild(model);\nrenderer.render();\n\nlet controller;\nconst data = {\n  projection: 'perspective'\n};\nconst gui = new dat.GUI();\nconst f1 = gui.addFolder('Projection');\n\ncontroller = f1.add(data, 'projection', ['perspective', 'orthographic']);\ncontroller.onFinishChange(function(value) {\n  if (value === 'orthographic') {\n    renderer.projection = orthographic;\n  } else {\n    renderer.projection = perspective;\n  }\n});\n\nf1.open();\n"],"sourceRoot":""}