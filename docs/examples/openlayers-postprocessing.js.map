{"version":3,"sources":["webpack:///./openlayers-postprocessing.js"],"names":["const","raster","ol","layer","Tile","source","OSM","image","style","Circle","radius","fill","stroke","Stroke","color","width","styles","Point","Style","LineString","MultiLineString","MultiPoint","MultiPolygon","Fill","Polygon","lineDash","GeometryCollection","vectorSource","Vector","features","format","GeoJSON","readFeatures","type","crs","properties","name","geometry","coordinates","geometries","addFeature","Feature","geom","vector","feature","getGeometry","getType","Map","layers","target","view","View","center","zoom","on","event","context","canvas","ctx","getContext","imageData","getImageData","height","data","i","length","brightness","putImageData","greyscale"],"mappings":"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","file":"openlayers-postprocessing.js","sourcesContent":["const raster = new ol.layer.Tile({\n  source: new ol.source.OSM()\n});\n\nconst image = new ol.style.Circle({\n  radius: 5,\n  fill: null,\n  stroke: new ol.style.Stroke({color: 'red', width: 1})\n});\n\nconst styles = {\n  'Point': new ol.style.Style({\n    image: image\n  }),\n  'LineString': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiLineString': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiPoint': new ol.style.Style({\n    image: image\n  }),\n  'MultiPolygon': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new ol.style.Fill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  }),\n  'Polygon': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3\n    }),\n    fill: new ol.style.Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  }),\n  'GeometryCollection': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'magenta',\n      width: 2\n    }),\n    fill: new ol.style.Fill({\n      color: 'magenta'\n    }),\n    image: new ol.style.Circle({\n      radius: 10,\n      fill: null,\n      stroke: new ol.style.Stroke({\n        color: 'magenta'\n      })\n    })\n  }),\n  'Circle': new ol.style.Style({\n    stroke: new ol.style.Stroke({\n      color: 'red',\n      width: 2\n    }),\n    fill: new ol.style.Fill({\n      color: 'rgba(255,0,0,0.2)'\n    })\n  })\n};\n\nconst styleFunction = (feature) => {\n  return styles[feature.getGeometry().getType()];\n};\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Point',\n      'coordinates': [0, 0]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, 2e6], [8e6, -2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, -1e6], [-4e6, 1e6], [-3e6, -1e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiLineString',\n      'coordinates': [\n        [[-1e6, -7.5e5], [-1e6, 7.5e5]],\n        [[1e6, -7.5e5], [1e6, 7.5e5]],\n        [[-7.5e5, -1e6], [7.5e5, -1e6]],\n        [[-7.5e5, 1e6], [7.5e5, 1e6]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPolygon',\n      'coordinates': [\n        [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6], [-3e6, 6e6]]],\n        [[[-2e6, 6e6], [-2e6, 8e6], [0, 8e6], [0, 6e6]]],\n        [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6], [3e6, 6e6]]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'GeometryCollection',\n      'geometries': [{\n        'type': 'LineString',\n        'coordinates': [[-5e6, -5e6], [0, -5e6]]\n      }, {\n        'type': 'Point',\n        'coordinates': [4e6, -5e6]\n      }, {\n        'type': 'Polygon',\n        'coordinates': [[[1e6, -6e6], [2e6, -4e6], [3e6, -6e6]]]\n      }]\n    }\n  }]\n};\n\nconst vectorSource = new ol.source.Vector({\n  features: (new ol.format.GeoJSON()).readFeatures(geojsonObject)\n});\n\nvectorSource.addFeature(new ol.Feature(new ol.geom.Circle([5e6, 7e6], 1e6)));\n\nconst vector = new ol.layer.Vector({\n  source: vectorSource,\n  style: styleFunction\n});\n\nconst map = new ol.Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new ol.View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n//Apply a filter on \"postcompose\" events.\nraster.on('postcompose', function(event) {\n  greyscale(event.context);\n});\n\nfunction greyscale(context) {\n  const canvas = context.canvas;\n  const ctx = canvas.getContext('2d');\n\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  const data = imageData.data;\n  for(var i = 0; i < data.length; i += 4) {\n    var brightness = (data[i] + data[i+1] + data[i+2]) / 3;\n    // red\n    data[i] = brightness;\n    // green\n    data[i+1] = brightness;\n    // blue\n    data[i+2] = brightness;\n  }\n  ctx.putImageData(imageData, 0, 0);\n}\n"],"sourceRoot":""}