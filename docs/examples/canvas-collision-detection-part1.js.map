{"version":3,"sources":["webpack:///./canvas-collision-detection-part1.js"],"names":["const","canvas","document","querySelector","ctx","getContext","mouse","x","y","colorSet","addEventListener","event","window","resize","circle1","circle2","Circle","radius","color","this","originalColor","width","innerWidth","height","innerHeight","prototype","draw","beginPath","arc","Math","PI","fillStyle","fill","update","isCollided","circle","pow","animate","clearRect","fillRect","requestAnimationFrame"],"mappings":"0EAAAA,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MACxBC,GACJC,EAAG,GACHC,EAAG,IAECC,GACJ,UACA,UACA,UACA,UACA,UACA,UACA,WAGFR,EAAOS,iBAAiB,YAAW,SAAGC,GACpCL,EAAMC,EAAII,EAAMJ,EAChBD,EAAME,EAAIG,EAAMH,IAGlBI,OAAOF,iBAAiB,SAAQ,WAC9BG,MAGF,IA2BIC,EACAC,EA5BEC,EACJ,SAAYT,EAAGC,EAAGS,EAAQC,GACxBC,KAAKZ,EAAIA,EACTY,KAAKX,EAAIA,EACTW,KAAKF,OAASA,EACdE,KAAKD,MAAQA,EACbC,KAAKC,cAAgBF,GA6BzB,SAASL,IACPZ,EAAOoB,MAAQT,OAAOU,WACtBrB,EAAOsB,OAASX,OAAOY,YA5BzBR,EAAAS,UAAEC,KAAA,WACEtB,EAAIuB,YACJvB,EAAIwB,IAAIT,KAAKZ,EAAGY,KAAKX,EAAGW,KAAKF,OAAQ,EAAa,EAAVY,KAAKC,IAAQ,GACrD1B,EAAI2B,UAAYZ,KAAKD,MACrBd,EAAI4B,QAGRhB,EAAAS,UAAEQ,OAAA,WACEd,KAAKO,QAGTV,EAAAS,UAAES,WAAA,SAAWC,GACTnC,IAAMO,EAAIY,KAAKZ,EAAI4B,EAAO5B,EACpBC,EAAIW,KAAKX,EAAI2B,EAAO3B,EAC1B,OAAQqB,KAAKO,IAAI7B,EAAG,GAAKsB,KAAKO,IAAI5B,EAAG,IAAOqB,KAAKO,IAAKjB,KAAKF,OAASkB,EAAOlB,OAAS,IAoCxFJ,IA5BEC,EAAU,IAAIE,EAAsB,GAAff,EAAOoB,MAA6B,GAAhBpB,EAAOsB,OAAc,IAAKd,EAAS,IAC5EM,EAAU,IAAIC,EAAO,GAAI,GAAI,GAAIP,EAAS,IAQ5C,SAAS4B,IACPjC,EAAIkC,UAAU,EAAG,EAAGrC,EAAOoB,MAAOpB,EAAOsB,QACzCnB,EAAI2B,UAAY,UAChB3B,EAAImC,SAAS,EAAG,EAAGtC,EAAOoB,MAAOpB,EAAOsB,QAExCT,EAAQmB,SAERlB,EAAQR,EAAID,EAAMC,EAClBQ,EAAQP,EAAIF,EAAME,EAClBO,EAAQkB,SAEJnB,EAAQoB,WAAWnB,GACrBD,EAAQI,MAAQH,EAAQG,MAExBJ,EAAQI,MAAQJ,EAAQM,cAE1BoB,sBAAsBH,GAKxBA","file":"canvas-collision-detection-part1.js","sourcesContent":["const canvas = document.querySelector('canvas');\nconst ctx = canvas.getContext('2d');\nconst mouse = {\n  x: 10,\n  y: 10\n};\nconst colorSet = [\n  '#8be9fd',\n  '#50fa7b',\n  '#ffb86c',\n  '#ff79c6',\n  '#bd93f9',\n  '#ff5555',\n  '#f1fa8c',\n];\n\ncanvas.addEventListener('mousemove', (event) => {\n  mouse.x = event.x;\n  mouse.y = event.y;\n});\n\nwindow.addEventListener('resize', () => {\n  resize();\n});\n\nclass Circle {\n  constructor(x, y, radius, color) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color;\n    this.originalColor = color;\n  }\n\n  draw() {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n\n  update() {\n    this.draw();\n  }\n\n  isCollided(circle) {\n    const x = this.x - circle.x;\n    const y = this.y - circle.y;\n    return (Math.pow(x, 2) + Math.pow(y, 2)) <= Math.pow((this.radius + circle.radius), 2);\n  }\n}\n\nlet circle1;\nlet circle2;\n\nfunction init() {\n  circle1 = new Circle(canvas.width * 0.5, canvas.height * 0.5, 100, colorSet[0]);\n  circle2 = new Circle(10, 10, 30, colorSet[5]);\n}\n\nfunction resize() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n}\n\nfunction animate() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = '#282a36';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  circle1.update();\n\n  circle2.x = mouse.x;\n  circle2.y = mouse.y;\n  circle2.update();\n\n  if (circle1.isCollided(circle2)) {\n    circle1.color = circle2.color;\n  } else {\n    circle1.color = circle1.originalColor;\n  }\n  requestAnimationFrame(animate);\n}\n\nresize();\ninit();\nanimate();\n"],"sourceRoot":""}