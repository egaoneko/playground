{"version":3,"sources":["webpack:///./canvas-becoming-pro-ep4.js"],"names":["const","canvas","document","querySelector","ctx","getContext","mouse","x","undefined","y","colorSet","addEventListener","event","window","resize","Circle","dx","dy","radius","color","this","maxRadius","minRadius","interactiveSize","prototype","draw","beginPath","arc","Math","PI","fillStyle","fill","update","innerWidth","innerHeight","let","balls","width","height","i","random","floor","length","push","init","animate","clearRect","fillRect","forEach","ball","requestAnimationFrame"],"mappings":"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","file":"canvas-becoming-pro-ep4.js","sourcesContent":["const canvas = document.querySelector('canvas');\nconst ctx = canvas.getContext('2d');\nconst mouse = {\n  x: undefined,\n  y: undefined\n};\nconst colorSet = [\n  '#8be9fd',\n  '#50fa7b',\n  '#ffb86c',\n  '#ff79c6',\n  '#bd93f9',\n  '#ff5555',\n  '#f1fa8c',\n];\n\ncanvas.addEventListener('mousemove', (event) => {\n  mouse.x = event.x;\n  mouse.y = event.y;\n});\n\nwindow.addEventListener('resize', () => {\n  resize();\n});\n\nclass Circle {\n  constructor(x, y, dx, dy, radius, color) {\n    this.maxRadius = 60;\n    this.minRadius = radius;\n    this.interactiveSize = 100;\n\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this.radius = radius;\n    this.color = color;\n  }\n\n  draw() {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n\n  update() {\n    if (this.x + this.radius >= window.innerWidth || this.x - this.radius <= 0) {\n      this.dx *= -1;\n    }\n\n    if (this.y + this.radius >= window.innerHeight || this.y - this.radius <= 0) {\n      this.dy *= -1;\n    }\n\n    if (this.x - this.radius < 0) {\n      this.x = this.radius\n    }\n\n    if (this.y - this.radius < 0) {\n      this.y = this.radius\n    }\n\n    if (this.x + this.radius > window.innerWidth) {\n      this.x = window.innerWidth - this.radius;\n    }\n\n    if (this.y + this.radius > window.innerHeight) {\n      this.y = window.innerHeight - this.radius;\n    }\n\n    this.x += this.dx;\n    this.y += this.dy;\n\n    // interactivity\n    if (\n      mouse.x - this.x < this.interactiveSize &&\n      mouse.x - this.x > -this.interactiveSize &&\n      mouse.y - this.y < this.interactiveSize &&\n      mouse.y - this.y > -this.interactiveSize\n    ) {\n      if (this.radius < this.maxRadius) {\n        this.radius += 1;\n      }\n    } else if (this.radius > this.minRadius) {\n      this.radius -= 1;\n    }\n\n    this.draw();\n  }\n}\n\nlet balls = [];\n\nfunction init() {\n\n  balls = [];\n\n  for (let i = 0; i < 800; i++) {\n    const radius = Math.random() * 10 + 1;\n    const x = Math.random() * (canvas.width - radius * 2) + radius;\n    const dx = (Math.random() - 0.5) * 5; // for if random 0\n    const y = Math.random() * (canvas.height - radius * 2) + radius;\n    const dy = (Math.random() - 0.5) * 5;\n    const color = colorSet[Math.floor(Math.random() * (colorSet.length - 1))];\n\n    balls.push(new Circle(x, y, dx, dy, radius, color));\n  }\n}\n\nfunction resize() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n}\n\nfunction animate() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = '#282a36';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  balls.forEach(ball => ball.update());\n  requestAnimationFrame(animate);\n}\n\nresize();\ninit();\nanimate();\n"],"sourceRoot":""}