{"version":3,"sources":["webpack:///./openlayers-turf.js"],"names":["let","coordinates","geojson","collection","type","features","properties","geometry","const","vector1","ol","layer","Vector","source","format","GeoJSON","readFeatures","style","Style","stroke","Stroke","color","width","line","turf","lineString","bbox","bboxPolygon","mid","lines","vector2","fill","Fill","map","vector3","origin","collectionFeatures","concat","lineIntersect","reduce","prev","current","size","length","bboxes","i","push","getBBoxOnLine","featureCollection","vector4","f","console","log","getGeometry","getType","image","Circle","radius","Map","layers","Tile","OSM","target","view","View","projection","center","zoom","window","DEBUG"],"mappings":"2EAAAA,IAAIC,EAuHAC,EACAC,EAEJD,GACEE,KAAQ,oBACRC,WAEID,KAAQ,UACRE,cACAC,UACEH,KAAQ,aACRH,YAtDRA,IAEI,mBACA,oBAGA,mBACA,oBAGA,mBACA,qBAGA,mBACA,oBAGA,mBACA,oBAGA,kBACA,oBAGA,mBACA,qBAGA,mBACA,qBAGA,kBACA,oBAGA,mBACA,wBAqBJO,IAAMC,EAAU,IAAIC,GAAGC,MAAMC,QAC3BC,OAAQ,IAAIH,GAAGG,OAAOD,QACpBP,UAAU,IAAKK,GAAGI,OAAOC,SAAWC,aAAad,KAEnDe,OACE,IAAIP,GAAGO,MAAMC,OACXC,OAAQ,IAAIT,GAAGO,MAAMG,QACnBC,MAAO,uBACPC,MAAO,SAMTC,EAAOC,KAAKC,WAAWxB,GACvByB,EAAOF,KAAKE,KAAKH,GACjBI,EAAcH,KAAKG,YAAYD,GAE/BE,GAA6B,IAArBF,EAAK,GAAKA,EAAK,IAAiC,IAArBA,EAAK,GAAKA,EAAK,KAClDG,KACFH,EAAK,GAAIA,EAAK,IAAKE,KACnBF,EAAK,GAAIA,EAAK,IAAKE,KACnBF,EAAK,GAAIA,EAAK,IAAKE,KACnBF,EAAK,GAAIA,EAAK,IAAKE,IAGjBE,EAAU,IAAIpB,GAAGC,MAAMC,QAC3BC,OAAQ,IAAIH,GAAGG,OAAOD,QACpBP,UAAU,IAAKK,GAAGI,OAAOC,SAAWC,aAAaW,KAEnDV,OACE,IAAIP,GAAGO,MAAMC,OACXC,OAAQ,IAAIT,GAAGO,MAAMG,QACnBC,MAAO,qBACPC,MAAO,IAETS,KAAM,IAAIrB,GAAGO,MAAMe,MACjBX,MAAO,4BAMfnB,GACEE,KAAQ,oBACRC,SAAYwB,EAAMI,IAAG,SAACV,GACpB,OACEnB,KAAQ,UACRE,cACAC,UACEH,KAAQ,aACRH,YAAesB,OAMvBf,IAAM0B,EAAU,IAAIxB,GAAGC,MAAMC,QAC3BC,OAAQ,IAAIH,GAAGG,OAAOD,QACpBP,UAAU,IAAKK,GAAGI,OAAOC,SAAWC,aAAad,KAEnDe,OACE,IAAIP,GAAGO,MAAMC,OACXC,OAAQ,IAAIT,GAAGO,MAAMG,QACnBC,MAAO,qBACPC,MAAO,SAMTa,EAASX,KAAKC,WAAWxB,GAE3BmC,KAoBJA,GAnBAA,EAAqBA,EAAmBC,OAAOR,EAAMI,IAAG,SAACV,GACrD,OAAOC,KAAKc,cAAcH,EAAQX,KAAKC,WAAWF,MAEjDgB,OAAM,SAAEC,EAAMC,GACb,OAAOD,EAAKH,OAAOI,EAAQpC,iBAeOgC,OAXxC,SAAuBpC,GAIrB,IAHAO,IAAMkC,EAAOzC,EAAY0C,OACnBC,KAEGC,EAAI,EAAGA,EAAIH,EAAO,EAAGG,IAC5BD,EAAOE,KAAS7C,EAAY4C,GAAER,OAAKpC,EAAY4C,EAAI,KAGrD,OAAOD,EAIPG,CAAc9C,GACXgC,IAAG,SAAEP,GACJ,OAAOF,KAAKG,YAAYD,MAI9BvB,EAAaqB,KAAKwB,kBAAkBZ,GAEpC5B,IAAMyC,EAAU,IAAIvC,GAAGC,MAAMC,QAC3BC,OAAQ,IAAIH,GAAGG,OAAOD,QACpBP,UAAU,IAAKK,GAAGI,OAAOC,SAAWC,aAAab,KAEnDc,MAAK,SAAGiC,GACNC,QAAQC,MAER5C,IAAMJ,EAAO8C,EAAEG,cAAcC,UAC7B,MAAa,UAATlD,EACK,IAAIM,GAAGO,MAAMC,OAClBqC,MAAO,IAAI7C,GAAGO,MAAMuC,QAClBC,OAAQ,GACR1B,KAAM,KACNZ,OAAQ,IAAIT,GAAGO,MAAMG,QACnBC,MAAO,sBACPC,MAAO,QAIK,YAATlB,EACF,IAAIM,GAAGO,MAAMC,OAClBC,OAAQ,IAAIT,GAAGO,MAAMG,QACnBC,MAAO,sBACPC,MAAO,WAJN,KAWLW,EAAM,IAAIvB,GAAGgD,KACjBC,QACE,IAAIjD,GAAGC,MAAMiD,MACX/C,OAAQ,IAAIH,GAAGG,OAAOgD,MAExB3B,EACAJ,EACArB,EACAwC,GAEFa,OAAQ,MACRC,KAAM,IAAIrD,GAAGsD,MACXC,WAAY,YACZC,QAAS,UAAW,UACpBC,KAAM,OAIVC,OAAOC,WACLpC","file":"openlayers-turf.js","sourcesContent":["let coordinates;\n\n// coordinates = [\n//   [\n//     127.09610939025879,\n//     37.351464686498815\n//   ],\n//   [\n//     127.10108757019043,\n//     37.35214697629814\n//   ],\n//   [\n//     127.10505723953246,\n//     37.354739620980915\n//   ],\n//   [\n//     127.10668802261353,\n//     37.35787796578827\n//   ],\n//   [\n//     127.10939168930054,\n//     37.35895247760407\n//   ],\n//   [\n//     127.11222410202026,\n//     37.36563798323926\n//   ],\n//   [\n//     127.11662292480467,\n//     37.352129919128714\n//   ],\n//   [\n//     127.11984157562254,\n//     37.358730754203336\n//   ]\n// ];\n\n// coordinates = [\n//   [\n//     127.09726810455322,\n//     37.35509780827176\n//   ],\n//   [\n//     127.10087299346922,\n//     37.36492170755341\n//   ],\n//   [\n//     127.10422039031981,\n//     37.35796324506581\n//   ],\n//   [\n//     127.10692405700685,\n//     37.352419890481514\n//   ],\n//   [\n//     127.11267471313475,\n//     37.35020243402261\n//   ],\n//   [\n//     127.11718082427977,\n//     37.35721278409788\n//   ],\n//   [\n//     127.11949825286865,\n//     37.36285811318619\n//   ],\n//   [\n//     127.12260961532593,\n//     37.364068989488395\n//   ],\n//   [\n//     127.12679386138916,\n//     37.354364375319165\n//   ]\n// ];\n\ncoordinates = [\n  [\n    127.09359884262085,\n    37.35185700389112\n  ],\n  [\n    127.09507942199708,\n    37.35815085913536\n  ],\n  [\n    127.09840536117554,\n    37.364614730166345\n  ],\n  [\n    127.10488557815552,\n    37.35966881026814\n  ],\n  [\n    127.10492849349976,\n    37.35554127588281\n  ],\n  [\n    127.1119236946106,\n    37.35364799202858\n  ],\n  [\n    127.11548566818237,\n    37.361459612015395\n  ],\n  [\n    127.11984157562254,\n    37.366746491654546\n  ],\n  [\n    127.1242833137512,\n    37.35941297795872\n  ],\n  [\n    127.12857484817505,\n    37.35567772692831\n  ]\n];\n\nlet geojson;\nlet collection;\n\ngeojson = {\n  'type': 'FeatureCollection',\n  'features': [\n    {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': coordinates\n      }\n    }\n  ]\n};\n\nconst vector1 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(geojson)\n  }),\n  style: [\n    new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: 'rgba(91,113,171,1.0)',\n        width: 3\n      })\n    }),\n  ]\n});\n\nconst line = turf.lineString(coordinates);\nconst bbox = turf.bbox(line);\nconst bboxPolygon = turf.bboxPolygon(bbox);\n\nconst mid = [(bbox[0] + bbox[2]) * 0.5, (bbox[1] + bbox[3]) * 0.5];\nconst lines = [\n  [[bbox[0], bbox[1]], mid],\n  [[bbox[2], bbox[3]], mid],\n  [[bbox[2], bbox[1]], mid],\n  [[bbox[0], bbox[3]], mid]\n];\n\nconst vector2 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(bboxPolygon)\n  }),\n  style: [\n    new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: 'rgba(42,53,81,1.0)',\n        width: 3\n      }),\n      fill: new ol.style.Fill({\n        color: 'rgba(42,53,81,0.1)'\n      })\n    }),\n  ]\n});\n\ngeojson = {\n  'type': 'FeatureCollection',\n  'features': lines.map(line => {\n    return {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': line\n      }\n    };\n  }),\n};\n\nconst vector3 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(geojson)\n  }),\n  style: [\n    new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: 'rgba(42,53,81,1.0)',\n        width: 3\n      })\n    }),\n  ]\n});\n\nconst origin = turf.lineString(coordinates);\n\nlet collectionFeatures = [];\ncollectionFeatures = collectionFeatures.concat(lines.map(line => {\n    return turf.lineIntersect(origin, turf.lineString(line))\n  })\n    .reduce((prev, current) => {\n      return prev.concat(current.features);\n    }, [])\n);\n\nfunction getBBoxOnLine(coordinates) {\n  const size = coordinates.length;\n  const bboxes = [];\n\n  for (let i = 0; i < size - 2; i++) {\n    bboxes.push([...coordinates[i], ...coordinates[i + 1]]);\n  }\n\n  return bboxes;\n}\n\ncollectionFeatures = collectionFeatures.concat(\n  getBBoxOnLine(coordinates)\n    .map((bbox) => {\n      return turf.bboxPolygon(bbox);\n    })\n);\n\ncollection = turf.featureCollection(collectionFeatures);\n\nconst vector4 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(collection)\n  }),\n  style: (f) => {\n    console.log();\n\n    const type = f.getGeometry().getType();\n    if (type === 'Point') {\n      return new ol.style.Style({\n        image: new ol.style.Circle({\n          radius: 10,\n          fill: null,\n          stroke: new ol.style.Stroke({\n            color: 'rgba(249,99,99,1.0)',\n            width: 2\n          })\n        })\n      });\n    } else if (type === 'Polygon') {\n      return new ol.style.Style({\n        stroke: new ol.style.Stroke({\n          color: 'rgba(249,99,99,1.0)',\n          width: 2\n        })\n      })\n    }\n  }\n});\n\nconst map = new ol.Map({\n  layers: [\n    new ol.layer.Tile({\n      source: new ol.source.OSM()\n    }),\n    vector3,\n    vector2,\n    vector1,\n    vector4,\n  ],\n  target: 'map',\n  view: new ol.View({\n    projection: 'EPSG:4326',\n    center: [127.10534, 37.35941],\n    zoom: 15\n  })\n});\n\nwindow.DEBUG = {\n  map,\n};\n"],"sourceRoot":""}