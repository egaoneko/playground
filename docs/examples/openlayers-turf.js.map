{"version":3,"sources":["webpack:///./openlayers-turf.js"],"names":["const","geojson","collection","coordinates","type","features","properties","geometry","vector1","ol","layer","Vector","source","format","GeoJSON","readFeatures","style","Style","stroke","Stroke","color","width","line","turf","lineString","bbox","bboxPolygon","vector2","fill","Fill","vector3","origin","line1","line2","intersects1","lineIntersect","intersects2","collectionFeatures","concat","size","length","bboxes","i","push","getBBoxOnLine","map","featureCollection","vector4","f","console","log","getGeometry","getType","image","Circle","radius","Map","layers","Tile","OSM","target","view","View","projection","center","zoom","window","DEBUG"],"mappings":"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","file":"openlayers-turf.js","sourcesContent":["const coordinates = [\n  [\n    127.09610939025879,\n    37.351464686498815\n  ],\n  [\n    127.10108757019043,\n    37.35214697629814\n  ],\n  [\n    127.10505723953246,\n    37.354739620980915\n  ],\n  [\n    127.10668802261353,\n    37.35787796578827\n  ],\n  [\n    127.10939168930054,\n    37.35895247760407\n  ],\n  [\n    127.11222410202026,\n    37.36563798323926\n  ],\n  [\n    127.11662292480467,\n    37.352129919128714\n  ],\n  [\n    127.11984157562254,\n    37.358730754203336\n  ]\n];\n\nlet geojson;\nlet collection;\n\ngeojson = {\n  'type': 'FeatureCollection',\n  'features': [\n    {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': coordinates\n      }\n    }\n  ]\n};\n\nconst vector1 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(geojson)\n  }),\n  style: [\n    new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: 'rgba(91,113,171,1.0)',\n        width: 3\n      })\n    }),\n  ]\n});\n\nconst line = turf.lineString(coordinates);\nconst bbox = turf.bbox(line);\nconst bboxPolygon = turf.bboxPolygon(bbox);\n\nconst vector2 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(bboxPolygon)\n  }),\n  style: [\n    new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: 'rgba(42,53,81,1.0)',\n        width: 3\n      }),\n      fill: new ol.style.Fill({\n        color: 'rgba(42,53,81,0.1)'\n      })\n    }),\n  ]\n});\n\ngeojson = {\n  'type': 'FeatureCollection',\n  'features': [\n    {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': [[bbox[0], bbox[3]], [bbox[2], bbox[1]]]\n      }\n    },\n    {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': [[bbox[0], bbox[1]], [bbox[2], bbox[3]]]\n      }\n    }\n  ]\n};\n\nconst vector3 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(geojson)\n  }),\n  style: [\n    new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: 'rgba(42,53,81,1.0)',\n        width: 3\n      })\n    }),\n  ]\n});\n\nconst origin = turf.lineString(coordinates);\nconst line1 = turf.lineString([[bbox[0], bbox[3]], [bbox[2], bbox[1]]]);\nconst line2 = turf.lineString([[bbox[0], bbox[1]], [bbox[2], bbox[3]]]);\nconst intersects1 = turf.lineIntersect(origin, line1);\nconst intersects2 = turf.lineIntersect(origin, line2);\n\nlet collectionFeatures = [];\ncollectionFeatures = collectionFeatures.concat(intersects1.features);\ncollectionFeatures = collectionFeatures.concat(intersects2.features);\n\nfunction getBBoxOnLine(coordinates) {\n  const size = coordinates.length;\n  const bboxes = [];\n\n  for (let i = 0; i < size - 2; i++) {\n    bboxes.push([...coordinates[i], ...coordinates[i + 1]]);\n  }\n\n  return bboxes;\n}\n\ncollectionFeatures = collectionFeatures.concat(\n  getBBoxOnLine(coordinates)\n    .map((bbox) => {\n      return turf.bboxPolygon(bbox);\n    })\n);\n\ncollection = turf.featureCollection(collectionFeatures);\n\nconst vector4 = new ol.layer.Vector({\n  source: new ol.source.Vector({\n    features: (new ol.format.GeoJSON()).readFeatures(collection)\n  }),\n  style: (f) => {\n    console.log();\n\n    const type = f.getGeometry().getType();\n    if (type === 'Point') {\n      return new ol.style.Style({\n        image: new ol.style.Circle({\n          radius: 10,\n          fill: null,\n          stroke: new ol.style.Stroke({\n            color: 'rgba(249,99,99,1.0)',\n            width: 2\n          })\n        })\n      });\n    } else if (type === 'Polygon') {\n      return new ol.style.Style({\n        stroke: new ol.style.Stroke({\n          color: 'rgba(249,99,99,1.0)',\n          width: 2\n        })\n      })\n    }\n  }\n});\n\nconst map = new ol.Map({\n  layers: [\n    new ol.layer.Tile({\n      source: new ol.source.OSM()\n    }),\n    vector3,\n    vector2,\n    vector1,\n    vector4,\n  ],\n  target: 'map',\n  view: new ol.View({\n    projection: 'EPSG:4326',\n    center: [127.10534, 37.35941],\n    zoom: 15\n  })\n});\n\nwindow.DEBUG = {\n  map,\n};\n"],"sourceRoot":""}