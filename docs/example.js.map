{"version":3,"file":"example.js","sources":["../src/pg/util.js","../src/pg/utils/image.js","index.js","../src/pg/utils/math.js"],"sourcesContent":["/**\n * @module pg/util\n */\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet _uidCounter = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj._uid || (obj._uid = ++_uidCounter);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module pg/utils/image\n */\n\n/**\n * Gets a random hex color\n *\n * @return {string} The random hex color.\n * @api\n */\nexport function getRandomHexColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n/**\n * Gets a random dummy images\n *\n * @param {number} width The image width.\n * @param {number} height The image height.\n * @param {number} size The images size.\n * @return {Array<string>} The random dummy images.\n * @api\n */\nexport function getRandomDummyImages(width, height, size) {\n  if (\n    typeof width !== 'number' ||\n    typeof height !== 'number' ||\n    typeof size !== 'number'\n  ) {\n    throw new TypeError('Must be params number');\n  }\n\n  const baseUrl = `https://dummyimage.com/${width}x${height}/`;\n  const images = [];\n\n  for (let i = 0; i < size; i++) {\n    images.push(baseUrl + getRandomHexColor().slice(1));\n  }\n\n  return images;\n}\n","import * as _pg_util from './pg/util';\nimport * as _pg_utils_image from './pg/utils/image';\nimport * as _pg_utils_math from './pg/utils/math';\n\nvar pg = window['pg'] = {};\n\npg.graphics = {};\npg.graphics.three = {};\npg.util = {};\npg.utils = {};\npg.utils.image = {};\npg.utils.math = {};\npg.graphics.three.three = $pg$graphics$three$three;\npg.util.getUid = _pg_util.getUid;\npg.utils.image.getRandomDummyImages = _pg_utils_image.getRandomDummyImages;\npg.utils.image.getRandomHexColor = _pg_utils_image.getRandomHexColor;\npg.utils.math.convex2d = _pg_utils_math.convex2d;\npg.utils.math.randomInt = _pg_utils_math.randomInt;\n","/**\n * @module pg/utils/math\n */\n\n/**\n * Gets a random integer\n *\n * @param {number} min minimum number.\n * @param {number} max maximum number.\n * @return {number} The random integer number.\n * @api\n */\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * Gets convex 2d numbers\n * @param {number} step step.\n * @return {array} The convex 2d numbers.\n * @api\n */\nexport function convex2d(step) {\n  const convex = [];\n\n  for (let i = 0; i < step; i++) {\n    const x = i / step;\n    convex.push([x, 1 - i / step]);\n  }\n  return convex;\n}\n"],"names":["let","_uidCounter","getRandomHexColor","const","color","i","Math","floor","random","pg","window","graphics","three","util","utils","image","math","$pg$graphics$three$three","getUid","obj","_uid","getRandomDummyImages","width","height","size","TypeError","baseUrl","images","push","slice","_pg_utils_image.getRandomHexColor","convex2d","step","convex","x","randomInt","min","max"],"mappings":"yBASAA,IAAIC,EAAc,ECCX,SAASC,IAGd,IAFAC,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,ECZT,IAAIK,EAAKC,OAAW,GAAI,GAExBD,EAAGE,SAAW,GACdF,EAAGE,SAASC,MAAQ,GACpBH,EAAGI,KAAO,GACVJ,EAAGK,MAAQ,GACXL,EAAGK,MAAMC,MAAQ,GACjBN,EAAGK,MAAME,KAAO,GAChBP,EAAGE,SAASC,MAAMA,MAAQK,yBAC1BR,EAAGI,KAAKK,OFOD,SAAgBC,GACrB,OAAOA,EAAIC,OAASD,EAAIC,OAASnB,IEPnCQ,EAAGK,MAAMC,MAAMM,qBDcR,SAA8BC,EAAOC,EAAQC,GAClD,GACmB,iBAAVF,GACW,iBAAXC,GACS,iBAATC,EAEP,MAAM,IAAIC,UAAU,yBAMtB,IAHAtB,IAAMuB,EAAU,0BAA0BJ,MAASC,MAC7CI,EAAS,GAENtB,EAAI,EAAGA,EAAImB,EAAMnB,IACxBsB,EAAOC,KAAKF,EAAUxB,IAAoB2B,MAAM,IAGlD,OAAOF,GC7BTlB,EAAGK,MAAMC,MAAMb,kBAAoB4B,EACnCrB,EAAGK,MAAME,KAAKe,SCMP,SAAkBC,GAGvB,IAFA7B,IAAM8B,EAAS,GAEN5B,EAAI,EAAGA,EAAI2B,EAAM3B,IAAK,CAC7BF,IAAM+B,EAAI7B,EAAI2B,EACdC,EAAOL,KAAK,CAACM,EAAG,EAAI7B,EAAI2B,IAE1B,OAAOC,GDZTxB,EAAGK,MAAME,KAAKmB,UCLP,SAAmBC,EAAKC,GAC7B,OAAO/B,KAAKC,MAAMD,KAAKE,UAAY6B,EAAMD,EAAM,GAAKA"}